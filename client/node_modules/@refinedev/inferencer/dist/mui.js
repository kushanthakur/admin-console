var Tr=Object.create;var le=Object.defineProperty;var wr=Object.getOwnPropertyDescriptor;var Rr=Object.getOwnPropertyNames;var Sr=Object.getPrototypeOf,Nr=Object.prototype.hasOwnProperty;var Lr=(e,t)=>{for(var a in t)le(e,a,{get:t[a],enumerable:!0})},Xe=(e,t,a,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let u of Rr(t))!Nr.call(e,u)&&u!==a&&le(e,u,{get:()=>t[u],enumerable:!(n=wr(t,u))||n.enumerable});return e};var f=(e,t,a)=>(a=e!=null?Tr(Sr(e)):{},Xe(t||!e||!e.__esModule?le(a,"default",{value:e,enumerable:!0}):a,e)),Er=e=>Xe(le({},"__esModule",{value:!0}),e);var Ct={};Lr(Ct,{MuiCreateInferencer:()=>$e,MuiCreateRenderer:()=>qe,MuiEditInferencer:()=>xe,MuiEditRenderer:()=>Ke,MuiInferencer:()=>vt,MuiListInferencer:()=>Ie,MuiListRenderer:()=>ze,MuiShowInferencer:()=>he,MuiShowRenderer:()=>_e});module.exports=Er(Ct);var ce=f(require("react")),Ar=require("@refinedev/core");var Xr=f(require("@refinedev/mui")),Zr=f(require("@emotion/react")),Yr=f(require("@emotion/styled")),Jr=f(require("@mui/lab")),Qr=f(require("@mui/material")),et=f(require("@mui/x-data-grid"));var G=f(require("react")),je=require("@refinedev/core");var Mr=/(image|photo|avatar|url|logo|cover|thumbnail|icon)/i,be=(e,t)=>{let a=["name","label","title","count","content","username","nickname","login","firstName","lastName","url"];Mr.test(e)&&a.unshift("url");let n=a.find(u=>u in t&&!!t[u]);if(n)return n==="firstName"&&"lastName"in t?["firstName","lastName"]:n};var Ze=require("@refinedev/core");function ve(e,t,a){if(t)return t;let n=a==null?void 0:a.find(s=>s.name===e),u=(0,Ze.pickNotDeprecated)(n==null?void 0:n.meta,n==null?void 0:n.options);return u!=null&&u.dataProviderName?u.dataProviderName:"default"}var ae=e=>{var t;return(t=e==null?void 0:e.options)==null?void 0:t.dataProviderName};var Ce=e=>{let t=[...e].filter(Boolean).sort((a,n)=>(n.priority||0)-(a.priority||0))[0];return t||null};var Ye=f(require("prettier/standalone")),Je=f(require("prettier/parser-typescript")),Fe=e=>{try{return Ye.default.format(e,{parser:"typescript",plugins:[Je.default],arrowParens:"always",trailingComma:"all",semi:!0,tabWidth:4,printWidth:80})}catch(t){return console.warn("Formatting error in inferencer",t),e}};var Ae=e=>e.replace(/ {2,}/g," ").replace(/\n{2,}/g,`
`);var Te=/(-id|-ids|_id|_ids|Id|Ids|ID|IDs)(\[\])?$/,Qe=(e,t)=>{let a=Te.test(e),n=typeof t=="string"||typeof t=="number",u=Array.isArray(t)&&t.every(s=>typeof s=="string"||typeof s=="number");return a&&n||a&&u?{key:e,relation:!0,multiple:!!u,type:"relation",priority:1}:!1};var D=e=>e.replace(Te,"");var h=e=>D(e).replace(/([a-z])([A-Z])/g,"$1 $2").replace(/_/g," ").replace(/-/g," ").split(" ").map(m=>m.charAt(0).toUpperCase()+m.slice(1)).join(" ");var we=e=>e.replace(/export\s+(const|let|var|type|interface|function|class)\s+(\w+)\s*(=|:)\s*/g,"$1 $2 = ").split(`
`).filter(u=>!u.trim().startsWith("export default")).join(`
`);var er=/import(?:(?:(?:[ \n\t]+([^ *\n\t\{\},]+)[ \n\t]*(?:,|[ \n\t]+))?([ \n\t]*\{(?:[ \n\t]*[^ \n\t"'\{\}]+[ \n\t]*,?)+\})?[ \n\t]*)|[ \n\t]*\*[ \n\t]*as[ \n\t]+([^ \n\t\{\}]+)[ \n\t]+)from[ \n\t]*(?:['"])([^'"\n]+)(?:['"])(?:;?)/g,Pr=/import[ \n\t](?:['"])([^'"\n]+)(?:['"])(?:;?)/g,Br=/((?:\w|\s|_)*)( as )((?:\w|\s|_)*)( |,)?/g,Re=(e,t={})=>{let a=e.matchAll(er),n=new Set;for(let u of a){let[,s,m,g,d]=u;if(d in t){let I=t[d];if(d==="react")continue;s&&n.add(`const { default: ${s} } = ${I};`),m&&n.add(`const${m.replace(Br,"$1: $3$4")} = ${I};`),g&&n.add(`const ${g} = ${I};`)}}return Ae(`
    ${Array.from(n).join(`
`)}
    ${e.replace(er,"").replace(Pr,"")}
    `)};var ie=f(require("pluralize"));var Se=(e,t)=>e?t.find(n=>{let u=D(e.key);return n.name===u||n.name===(ie.default.isPlural(u)?u:ie.default.plural(u))||n.name===(ie.default.isSingular(u)?u:ie.default.singular(u))}):void 0;var rr=f(require("pluralize"));var O=(e,t,a="Inferred")=>{let n=e.replace(/[^a-zA-Z0-9]/g," "),u=rr.default.singular(n),m=h(u).replace(/ /g,"")||a,g=t.charAt(0).toUpperCase()+t.slice(1);return/^[a-zA-Z]/.test(m)?`${m}${g}`:`${g}${m}`};var Dr=e=>e?Array.isArray(e)?e.join(""):typeof e=="string"?e:typeof e=="object"||typeof e=="function"?e.toString():typeof e=="number"?String(e):typeof e=="boolean"&&e?"true":e:"",k=(e,...t)=>e.reduce((n,u,s)=>`${n}${u}${Dr(t[s])}`,"").trim();var Ne=(e,t)=>`
    ${e!=null?e:""}
    
    render(typeof ${t} !== "undefined" ? <${t} /> : <></>);
    `;var Le=e=>e==null?void 0:e.replace(/(\/\* hidden-start \*\/)(.|\n)*?(\/\* hidden-end \*\/)/g,"");var Vr=/^[a-zA-Z_$][a-zA-Z_$0-9]*$/,Ee=e=>Vr.test(e);function Me(e,t,a){let n=`${e}`;return t&&(n+="?.",Ee(t)?n+=t:n+=`['${t}']`),a&&(n+="?.",Ee(a)?n+=a:n+=`['${a}']`),n}function Wr(e,t,a){return(a!=null?a:[]).map(u=>Me(e,t,u))}var l=(e,t,a,n=' + " " + ')=>Array.isArray(a)?n?Wr(e,t,a).join(n):Me(e,t,a[0]):Me(e,t,a),B=(e,t,a)=>{let n=e;return t&&(n+=`.${t}`),a&&(Array.isArray(a)?n+=`.${a[0]}`:n+=`.${a}`),n};var _=e=>{let t=e.reduce((n,[u,s,m])=>(n[s]||(n[s]=[]),n[s].includes(u)||(m?n[s].push([u,!0]):n[s].push(u)),n),{});return Object.entries(t).map(([n,u])=>{let s=u.find(I=>Array.isArray(I)&&I[1]),m=u.filter(I=>typeof I=="string"),g=s?`${s[0]}`:"",d=m.length?`{ ${m.join(", ")} }`:"";return`import ${g}${g&&d?", ":""}${d} from "${n}";`})};var Pe=f(require("pluralize")),re=(e="")=>Pe.default.isSingular(e)?e:Pe.default.singular(e);var Be=f(require("pluralize")),te=(e="")=>Be.default.isPlural(e)?e:Be.default.plural(e);var Or=/^id$/i,Y=e=>Or.test(e);var z=e=>{};var L=(e,t="")=>{if(Number.isInteger(Number(e)))return t.charAt(0).toLowerCase()+t.slice(1)+e;let n=e.replace(/^\d+/,"").replace(/[^a-zA-Z0-9]/g,"-"),u=h(n).replace(/ /g,"");return`${u.charAt(0).toLowerCase()+u.slice(1)}${t.charAt(0).toUpperCase()+t.slice(1)}`};var tr=e=>{let t=(a,n,u,s=t)=>{let m=e.map(d=>d(a,n,u,s));return Ce(m)};return t};var nr=e=>(a,n,u,s,m)=>e.reduce((g,d)=>d(g,n,u,s,m),a);var or=(e,t,a,n)=>{let u=Array.isArray(t),s=Array.isArray(t)&&t.every(m=>typeof m=="string"||typeof m=="number");if(u){if(!s){let g=n(e,t[0],a,n);return g?{...g,key:e,multiple:!0,priority:1}:!1}let m=n(e,t[0],a,n)||{type:"string"};return{key:e,multiple:!0,priority:1,type:m==null?void 0:m.type}}return!1};var ar=(e,t)=>typeof t=="boolean"?{key:e,type:"boolean"}:!1;var De=f(require("dayjs")),Gr=/(_at|_on|At|On|AT|ON)(\[\])?$/,jr=["/",":","-","."],ir=(e,t)=>{let a=Gr.test(e)&&(0,De.default)(t).isValid(),n=typeof t=="string"&&(0,De.default)(t).isValid();return typeof t=="string"&&jr.some(s=>t.includes(s))&&(a||n)?{key:e,type:"date",priority:1}:!1};var Hr=/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,sr=(e,t)=>typeof t=="string"&&Hr.test(t)?{key:e,type:"email",priority:1}:!1;var _r=/\.(gif|jpe?g|tiff?|png|webp|bmp|svg)$/i,cr=(e,t)=>typeof t=="string"&&_r.test(t)?{key:e,type:"image",priority:2}:!1;var ur=(e,t)=>typeof t>"u"||t===null?null:!1;var mr=(e,t)=>{let a=typeof t=="string"&&t.length>0,n=!isNaN(t);return a&&n||typeof t=="number"?{key:e,type:"number"}:!1};var zr=/id$/i,pr=(e,t,a,n)=>{let u=t!==null,s=!Array.isArray(t);if(u&&s&&typeof t=="object"){if(Object.keys(t).length===1&&zr.test(Object.keys(t)[0]))return{key:e,type:"relation",relation:!0,accessor:"id",priority:1};let d=be(e,t);if((d?d.length>0:!1)&&d){let C=d&&Array.isArray(d)?d[0]:d,F=n(C,t[C],t,n);if(F){let x=Array.isArray(d)?d.map(c=>F.accessor?`${c}.${Array.isArray(F.accessor)?F.accessor[0]:F.accessor}`:c):F.accessor?Array.isArray(F.accessor)?`${d}.${F.accessor[0]}`:`${d}.${F.accessor}`:d;return{...F,fieldable:!0,key:e,accessor:x,priority:1}}}return{key:e,fieldable:!1,type:"object",priority:1}}return!1};var lr=(e,t)=>typeof t=="string"&&t.length>100?{key:e,type:"richtext",priority:1}:!1;var dr=(e,t)=>typeof t=="string"?{key:e,type:"text"}:!1;var qr=/^(https?|ftp):\/\/(-\.)?([^\s/?\.#-]+\.?)+(\/[^\s]*)?$/i,yr=(e,t)=>typeof t=="string"&&qr.test(t)?{key:e,type:"url",priority:1}:!1;var fr=[or,ar,ir,sr,cr,ur,mr,pr,Qe,lr,dr,yr];var gr=(e,t,a,n)=>e.map(s=>{if(!s.relation&&(s.type==="text"||s.type==="richtext"||s.type==="number")&&!s.canRelation){let m=/^[a-z0-9-]+$/,g=x=>m.test(`${x}`),d=s.key.toLowerCase()!=="id";return!(!s.accessor||typeof s.accessor=="string")||!d?s:(s.multiple?n[s.key]:[n[s.key]]).every(x=>g(s.accessor?x[s.accessor]:x))?{...s,canRelation:!0}:s}return s});var Kr=/(image|photo|avatar|cover|thumbnail|icon)/i,hr=e=>e.map(a=>a.type==="url"&&Kr.test(a.key)?{...a,type:"image"}:a);var Ir=(e,t)=>e.map(n=>{let u=Se(n,t);return u?{...n,relation:!0,type:"relation",resource:u}:n});var $r=(e,t,a,n,u)=>e.map(m=>{if(m.relation&&m.type==="relation"&&!m.resource){let g=m.accessor?n[m.key][m.accessor]:n[m.key],d=u(m.key,g,n,u);if(d&&d.type!=="relation")return{...m,fieldable:!0,relation:!1,type:d.type,canRelation:!0}}return m});var xr=[hr,Ir,$r,gr];var q=f(require("react")),de=f(require("prism-react-renderer")),kr=f(require("prism-react-renderer/themes/vsDark")),Ve=({code:e,wrapperProps:t})=>((0,q.useEffect)(()=>{var n;let a=document.createElement("style");a.appendChild(document.createTextNode(`
                #code-highlight::-webkit-scrollbar {-webkit-appearance: none; height: 7px; width: 7px;}
                #code-highlight::-webkit-scrollbar-thumb {background-color: #666b7a;}
                #code-highlight::-webkit-scrollbar-corner {background-color: rgb(30, 30, 30);}
                `)),(n=document.getElementById("code-highlight"))==null||n.appendChild(a)},[]),q.default.createElement("div",{id:"code-highlight",style:{maxHeight:"75vh",height:"100%",overflow:"auto",backgroundColor:"rgb(30, 30, 30)"},...t!=null?t:{}},q.default.createElement(de.default,{...de.defaultProps,theme:kr.default,code:e,language:"tsx"},({className:a,style:n,tokens:u,getLineProps:s,getTokenProps:m})=>q.default.createElement("pre",{className:a,style:{...n,padding:"14px 14px 14px 14px",margin:"0",width:"100%",boxSizing:"border-box"}},u.map((g,d)=>q.default.createElement("div",{key:d,...s({line:g,key:d})},g.map((I,C)=>q.default.createElement("span",{key:C,...m({token:I,key:C})}))))))));var V=f(require("react")),Ur=f(require("@refinedev/core")),ye=require("@aliemir/react-live");var br=[["react","React",V.default],["@refinedev/core","RefineCore",Ur]],We=V.default.createContext({}),Oe=({fetchError:e,code:t,additionalScope:a,errorComponent:n})=>{var g;let u=(g=t&&we(Re(t,[...br,...a!=null?a:[]].reduce((d,[I,C,F,x])=>x?d:{...d,[I]:C},{}))))!=null?g:"",s=V.default.useMemo(()=>({React:V.default,...V.default,...[...br,...a!=null?a:[]].reduce((d,[I,C,F])=>({...d,[C]:F}),{})}),[a]),m=V.default.useMemo(()=>()=>{let{error:I}=V.default.useContext(We);return n?V.default.createElement(n,{error:I?`<p>An error occured while rendering the generated component.You can check the generated code from the below "Show Code" button and fix the error manually.</p>
                                    <p>If you think this is a bug, please report the issue at <a target="_blank" rel="noopener noreferrer" href="https://github.com/refinedev/refine/issues">https://github.com/refinedev/refine/issues</a></p>
                                    <p>Exception:</p>
                                    <code>${I}</code>`:typeof e=="string"?e:e?`<p>Something went wrong while fetching the resource data.</p>
                                    <p>To learn more about the Inferencer, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`:void 0}):null},[n,e]);return V.default.createElement(ye.LiveProvider,{Context:We,code:u,scope:s,noInline:!0},!e&&V.default.createElement(ye.LivePreview,{Context:We}),V.default.createElement(m,null))};var J=f(require("react")),fe=require("@refinedev/core");var vr=(e,t,a)=>{let{resource:n,id:u,resources:s}=(0,fe.useResource)(t),m=a!=null?a:u,g=(0,fe.useDataProvider)(),[d,I]=J.default.useState(void 0),[C,F]=J.default.useState(void 0),[x,c]=J.default.useState(!0),[S,p]=J.default.useState(!1),i=J.default.useCallback(async T=>{var o,$;let b=(o=ae(n))!=null?o:ve(n==null?void 0:n.name,void 0,s),A=g(b);p(!0),I(void 0);try{if((e==="list"||e==="create")&&n){let r=($=(await A.getList({resource:n==null?void 0:n.name})).data)==null?void 0:$[0];r||I(`<p>No records/data found for resource "${n==null?void 0:n.name}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),F(r),setTimeout(()=>{p(!1)},500)}if((e==="edit"||e==="show")&&T&&n){let r=(await A.getOne({resource:n==null?void 0:n.name,id:T})).data;r||I(`<p>No records/data found for resource "${n==null?void 0:n.name}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),F(r),setTimeout(()=>{p(!1)},500)}}catch(M){console.warn("An error occured while fetching the resource data. Please check the error message below:",M),I(`<p>Something went wrong while fetching the resource data.</p>
                    <p>Please check your data provider and API for resource "${n==null?void 0:n.name}".</p>
                    <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),setTimeout(()=>{p(!1)},500)}},[e,g,n,s]);return J.default.useEffect(()=>{c(!1),!S&&!C&&i(m)},[i,m]),{data:C,loading:S,initial:x,error:d}};var ne=f(require("react")),Cr=require("@refinedev/core");var Ge=require("lodash"),Fr=({record:e,fields:t,infer:a})=>{let n=(0,Cr.useDataProvider)(),[u,s]=ne.default.useState([]),[m,g]=ne.default.useState(!0),[d,I]=ne.default.useState(!1),C=ne.default.useCallback(async F=>{console.groupCollapsed("@refinedev/inferencer is trying to detect relations");let x=[];I(!0);try{let c=F.map(async p=>{if(p&&(p.relation||p.canRelation)&&e){let i=ae(p.resource),T=n(i),b=Array.isArray(p.accessor)?void 0:p.multiple?e[p.key].map(A=>p.accessor?(0,Ge.get)(A,p.accessor):A)[0]:p.accessor?(0,Ge.get)(e[p.key],p.accessor):e[p.key];if(b&&p.resource)try{let{data:A}=await T.getOne({resource:p.resource.name,id:b});x.push({status:"success",resource:p.resource.name,field:p.key});let o=a("__",A,{},a);return{...p,relationInfer:o}}catch{return x.push({status:"error",resource:p.resource.name,field:p.key}),{...p,relationInfer:null}}if(b){let A,o;try{let{data:r}=await T.getOne({resource:te(D(p.key)),id:b});x.push({status:"success",resource:te(D(p.key)),field:p.key}),A=r,o=!0}catch{x.push({status:"error",resource:te(D(p.key)),field:p.key});try{let{data:v}=await T.getOne({resource:re(D(p.key)),id:b});x.push({status:"success",resource:re(D(p.key)),field:p.key}),A=v,o=!1}catch{return x.push({status:"error",resource:re(D(p.key)),field:p.key}),{...p,relationInfer:null}}}let $=a("__",A,{},a),M=D(p.key);return{...p,relation:!0,type:"relation",resource:{name:o?te(M):re(M)},fieldable:!1,canRelation:void 0,relationInfer:$}}return{...p,relationInfer:null}}return p}),S=await Promise.all(c);s(S.filter(p=>p)),setTimeout(()=>{I(!1)},500)}catch{setTimeout(()=>{I(!1)},500)}setTimeout(()=>{console.log(`Tried to detect relations with ${x.length} attempts and succeeded with ${x.filter(c=>c.status==="success").length} attempts.`),console.groupEnd()},500)},[n,e]);return ne.default.useEffect(()=>{g(!1),!d&&t&&t.length>0&&u.length===0&&C(t)},[C,d,t,C]),{fields:u,loading:d,initial:m}};var K=({type:e,additionalScope:t=[],customElements:a=[],fieldTransformers:n=[],renderer:u,loadingComponent:s,errorComponent:m,codeViewerComponent:g})=>{let d=tr([...fr,...a]),I=nr([...xr,...n]),C=({resourceName:x,fieldTransformer:c,id:S})=>{var E,w,P,ue,me,pe;let{resource:p,resources:i}=(0,je.useResource)(x),{resource:T}=(0,je.useResource)(),{data:b,loading:A,initial:o,error:$}=vr(e,x!=null?x:p==null?void 0:p.name,S),M=G.default.useMemo(()=>{if(b){let Q=Object.keys(b).map(j=>{let ee=b[j];return d(j,ee,b,d)}).filter(Boolean);if(p){let j=I(Q,i,p,b,d);return c?j.flatMap(ke=>{let Ue=c(ke);return Ue?[Ue]:[]}):j}return[]}return[]},[b,i,p,c]),{fields:r,loading:v}=Fr({record:b,fields:M,infer:d}),N=G.default.useMemo(()=>!A&&!v&&!o&&p?u({resource:p,resources:i,fields:r,infer:d,isCustomPage:p.name!==(T==null?void 0:T.name),id:S}):"",[p,i,r,A,v]);return G.default.createElement(G.default.Fragment,null,s&&(A||v)&&G.default.createElement(s,null),!A&&!v&&G.default.createElement(G.default.Fragment,null,G.default.createElement(Oe,{fetchError:!A&&$?$:!A&&!o&&!b,code:Ne(N,O((pe=(me=(ue=(P=(E=p==null?void 0:p.meta)==null?void 0:E.label)!=null?P:(w=p==null?void 0:p.options)==null?void 0:w.label)!=null?ue:p==null?void 0:p.label)!=null?me:p==null?void 0:p.name)!=null?pe:"Resource",e)),errorComponent:m,additionalScope:t}),g&&G.default.createElement(g,{code:Le(N),loading:A||v})))};return({name:x,resource:c,fieldTransformer:S,id:p})=>G.default.createElement(C,{fieldTransformer:S,resourceName:c!=null?c:x,key:c!=null?c:x,id:p})};var se=f(require("react")),oe=require("@mui/material"),U=({error:e})=>e?se.default.createElement(oe.Box,{style:{display:"flex",justifyContent:"center",alignItems:"center",minHeight:"200px"}},se.default.createElement(oe.Alert,{severity:"error"},se.default.createElement(oe.AlertTitle,null,"Error"),se.default.createElement("div",{dangerouslySetInnerHTML:{__html:e!=null?e:""}}))):null;var He=f(require("react")),ge=require("@mui/material"),X=()=>He.default.createElement(ge.Box,{style:{display:"flex",justifyContent:"center",alignItems:"center",minHeight:"300px"}},He.default.createElement(ge.CircularProgress,{size:"large"}));var R=f(require("react")),W=require("@mui/material"),H=require("@tabler/icons");var Z=({code:e,loading:t})=>{let a=R.default.useMemo(()=>Fe(e!=null?e:""),[e]),n=R.default.useRef(null),[u,s]=R.default.useState(!1),[m,g]=R.default.useState(!1);if(t)return null;let d=()=>{var I,C,F,x;(I=n==null?void 0:n.current)==null||I.select(),(C=n==null?void 0:n.current)==null||C.setSelectionRange(0,99999),typeof navigator<"u"&&(navigator.clipboard.writeText((x=(F=n==null?void 0:n.current)==null?void 0:F.value)!=null?x:""),g(!0),setTimeout(()=>{g(!1)},1e3))};return a?R.default.createElement(R.default.Fragment,null,R.default.createElement(W.Box,{sx:{position:"fixed",bottom:12,right:60}},R.default.createElement(W.Box,{sx:{display:"flex",gap:2}},R.default.createElement(W.Button,{variant:"contained",color:"primary",onClick:()=>s(!0),startIcon:R.default.createElement(H.IconCode,{size:18}),sx:{whiteSpace:"nowrap"}},"Show Code"),R.default.createElement(W.Button,{variant:"contained",color:"secondary",component:"a",target:"_blank",href:"https://github.com/refinedev/refine/discussions/3046",startIcon:R.default.createElement(H.IconMessageCircle,{size:18}),sx:{whiteSpace:"nowrap"}},"Give Feedback"))),R.default.createElement("div",{style:{height:"50px"}}),R.default.createElement(W.Modal,{open:u,onClose:()=>s(!1)},R.default.createElement(W.Box,{sx:{position:"absolute",maxWidth:"800px",width:"100%",top:"50%",left:"50%",transform:"translate(-50%, -50%)",boxShadow:24}},R.default.createElement(W.IconButton,{onClick:()=>s(!1),disableRipple:!0,sx:{position:"absolute",right:0,top:0,height:56,width:56,display:"flex",alignItems:"center",justifyContent:"center"}},R.default.createElement(H.IconX,{size:18,style:{color:"#666b7a"}})),R.default.createElement(Ve,{code:a}),R.default.createElement("textarea",{ref:n,defaultValue:(a!=null?a:"").replace(/\\n/g,`\r
`),id:"code-input",style:{display:"none"}}),R.default.createElement("div",{style:{position:"absolute",bottom:12,right:12}},R.default.createElement(W.Button,{key:"copy",sx:{textTransform:"capitalize",width:100},startIcon:m?R.default.createElement(H.IconCheck,{size:18,style:{color:"green"}}):R.default.createElement(H.IconCopy,{size:18}),color:"inherit",variant:"contained",onClick:d},m?"Copied":"Copy"))))):null};var _e=({resource:e,fields:t,isCustomPage:a,id:n})=>{var A;let u=O((A=e.label)!=null?A:e.name,"show"),s="record",m=[["useShow","@refinedev/core"],["Show","@refinedev/mui"],["Typography","@mui/material"],["Stack","@mui/material"]],d=t.filter(o=>(o==null?void 0:o.relation)&&!(o!=null&&o.fieldable)&&(o==null?void 0:o.resource)).filter(Boolean).map(o=>{if((o==null?void 0:o.relation)&&!o.fieldable&&o.resource){if(o.multiple){m.push(["useMany","@refinedev/core"]);let $=l(s,o.key);return o.accessor&&($=`${l(s,o.key)}?.map((item: any) => ${l("item",void 0,o.accessor)})`),`
                const { data: ${L(o.key,"Data")}, isLoading: ${L(o.key,"IsLoading")} } =
                useMany({
                    resource: "${o.resource.name}",
                    ids: ${$} || [],
                    queryOptions: {
                        enabled: !!${s},
                    },
                });
                `}return m.push(["useOne","@refinedev/core"]),`
                const { data: ${L(o.key,"Data")}, isLoading: ${L(o.key,"IsLoading")} } =
                useOne({
                    resource: "${o.resource.name}",
                    id: ${l(s,o.key,o.accessor,!1)} || "",
                    queryOptions: {
                        enabled: !!${s},
                    },
                });
            `}}).filter(Boolean),I=o=>{if(o.relation&&o.resource){let $=L(o.key,"Data"),M=L(o.key,"IsLoading");return o.multiple?(m.push(["TagField","@refinedev/mui"]),k`
                <Typography variant="body1" fontWeight="bold">
                    ${h(o.key)}
                </Typography>
                {${M} ? (
                    <>
                        Loading...
                    </>
                    ) : (
                    <>
                    ${(()=>{var r;if(o.relationInfer)if((r=o.relationInfer)!=null&&r.accessor){if(Array.isArray(o.relationInfer.accessor))return"Not Handled.";{let v=L(o.key),N=l(v,void 0,o.relationInfer.accessor);return`
                                        <Stack direction="row" spacing={1}>
                                            {${$}?.data?.map((${v}: any) => (
                                                <TagField key={${N}} value={${N}} />
                                            ))}
                                        </Stack>
                                    `}}else return"Not Handled.";else return"not-handled - relation with multiple but no resource"})()}
                    </>
                )}
                `):k`
                <Typography variant="body1" fontWeight="bold">
                    ${h(o.key)}
                </Typography>

                {${M} ? (
                    <>Loading...</>
                ) : (
                    <>
                    ${(()=>{var r;return o.relationInfer?(r=o.relationInfer)!=null&&r.accessor?Array.isArray(o.relationInfer.accessor)?`{${l(`${$}?.data`,void 0,o.relationInfer.accessor,' + " " + ')}}`:`{${$}?.data?.${o.relationInfer.accessor}}`:`{${$}?.data}`:`{${$}?.data?.id}`})()}
                    </>
                )}
                `}},C=o=>{if(o.type==="text"){if(m.push(["TextFieldComponent as TextField","@refinedev/mui"]),o.multiple){m.push(["TagField","@refinedev/mui"]);let $=l("item",void 0,o.accessor);return k`
                <Typography variant="body1" fontWeight="bold">
                    ${h(o.key)}
                </Typography>
                <Stack direction="row" spacing={1}>
                {${l(s,o.key)}?.map((item: any) => (
                    <TagField value={${$}} key={${$}} />
                ))}
                </Stack>
            `}return k`
                <Typography variant="body1" fontWeight="bold">
                    ${h(o.key)}
                </Typography>
                <TextField value={${l(s,o.key,o.accessor)}} />
            `}},F=o=>{if(o.type==="image"){if(o.multiple){let $=l("item",void 0,o.accessor);return k`
                <Typography variant="body1" fontWeight="bold">
                    ${h(o.key)}
                </Typography>
                <Stack direction="row" spacing={1}>
                {${l(s,o.key)}?.map((item: any) => (
                    <img style={{ maxWidth: 200, width: "100%", height: 200 }} src={${$}} key={${$}} />
                ))}
                </Stack>
            `}return k`
                <Typography variant="body1" fontWeight="bold">
                    ${h(o.key)}
                </Typography>
                <img style={{ maxWidth: 200, width: "100%", height: 200 }} src={${l(s,o.key,o.accessor," + ")}} />
                `}},x=o=>{if(o.type==="email"){if(m.push(["EmailField","@refinedev/mui"]),o.multiple){m.push(["TagField","@refinedev/mui"]);let $=l("item",void 0,o.accessor);return k`
                <Typography variant="body1" fontWeight="bold">
                    ${h(o.key)}
                </Typography>
                <Stack direction="row" spacing={1}>
                {${l(s,o.key)}?.map((item: any) => (
                    <TagField value={${$}} key={${$}} />
                ))}
                </Stack>
            `}return k`
                <Typography variant="body1" fontWeight="bold">
                    ${h(o.key)}
                </Typography>
                <EmailField value={${l(s,o.key,o.accessor," + ")}} />
            `}},c=o=>{if(o.type==="url"){if(m.push(["UrlField","@refinedev/mui"]),o.multiple){m.push(["TagField","@refinedev/mui"]);let $=l("item",void 0,o.accessor);return k`
                <Typography variant="body1" fontWeight="bold">
                    ${h(o.key)}
                </Typography>
                <Stack direction="row" spacing={1}>
                {${l(s,o.key)}?.map((item: any) => (
                    <TagField value={${$}} key={${$}} />
                ))}
                </Stack>
            `}return k`
                <Typography variant="body1" fontWeight="bold">
                    ${h(o.key)}
                </Typography>
                <UrlField value={${l(s,o.key,o.accessor," + ")}} />
            `}},S=o=>{if(o.type==="boolean"){if(m.push(["BooleanField","@refinedev/mui"]),o.multiple){m.push(["TagField","@refinedev/mui"]);let $=l("item",void 0,o.accessor);return k`
                <Typography variant="body1" fontWeight="bold">
                    ${h(o.key)}
                </Typography>
                <Stack direction="row" spacing={1}>
                {${l(s,o.key)}?.map((item: any, index: number) => (
                    <TagField value={${$}} key={index} />
                ))}
                </Stack>
            `}return k`
                <Typography variant="body1" fontWeight="bold">
                    ${h(o.key)}
                </Typography>
                <BooleanField value={${l(s,o.key,o.accessor," && ")}} />
            `}},p=o=>{if(o.type==="date"){if(m.push(["DateField","@refinedev/mui"]),o.multiple){let $=l("item",void 0,o.accessor);return k`
                <Typography variant="body1" fontWeight="bold">
                    ${h(o.key)}
                </Typography>
                <Stack direction="row" spacing={1}>
                {${l(s,o.key)}?.map((item: any) => (
                    <DateField value={${$}} key={${$}} />
                ))}
                </Stack>
            `}return k`
                <Typography variant="body1" fontWeight="bold">
                    ${h(o.key)}
                </Typography>
                <DateField value={${l(s,o.key,o.accessor," + ' ' + ")}} />
            `}},i=o=>{if(o.type==="richtext")return m.push(["MarkdownField","@refinedev/mui"]),k`
                <Typography variant="body1" fontWeight="bold">
                    ${h(o.key)}
                </Typography>
                <MarkdownField value={${l(s,o.key,o.accessor,' + " " + ')}} />
            `},T=o=>{if(o.type==="number"){if(m.push(["NumberField","@refinedev/mui"]),o.multiple){m.push(["TagField","@refinedev/mui"]);let $=l("item",void 0,o.accessor);return k`
                <Typography variant="body1" fontWeight="bold">
                    ${h(o.key)}
                </Typography>
                <Stack direction="row" spacing={1}>
                {${l(s,o.key)}?.map((item: any) => (
                    <TagField value={${$}} key={${$}} />
                ))}
                </Stack>
            `}return k`
                <Typography variant="body1" fontWeight="bold">
                    ${h(o.key)}
                </Typography>
                <NumberField value={${l(s,o.key,o.accessor,' + " " + ')} ?? ""} />
            `}},b=t.map(o=>{switch(o==null?void 0:o.type){case"text":return C(o);case"number":return T(o);case"richtext":return i(o);case"email":return x(o);case"image":return F(o);case"date":return p(o);case"boolean":return S(o);case"url":return c(o);case"relation":return I(o);default:return}});return z(m),k`
    ${_(m)}

    export const ${u} = () => {
        const { queryResult } = useShow(${a?`{ 
                    resource: "${e.name}", 
                    id: ${n}
                }`:""});
        const { data, isLoading } = queryResult;
    
        const ${s} = data?.data;
    
        ${d}

        return (
            <Show isLoading={isLoading}>
                <Stack gap={1}>
                    ${b.join("")}
                </Stack>
            </Show>
        );
    };
    `},he=K({type:"show",additionalScope:[["@refinedev/mui","RefineMui",Xr],["@emotion/react","EmotionReact",Zr],["@emotion/styled","EmotionStyled",Yr],["@mui/lab","MuiLab",Jr],["@mui/material","MuiMaterial",Qr],["@mui/x-data-grid","MuiXDataGrid",et]],codeViewerComponent:Z,loadingComponent:X,errorComponent:U,renderer:_e});var rt=f(require("@refinedev/mui")),tt=f(require("@emotion/react")),nt=f(require("@emotion/styled")),ot=f(require("@mui/lab")),at=f(require("@mui/material")),it=f(require("@mui/x-data-grid"));var ze=({resource:e,fields:t,isCustomPage:a})=>{var M;let n=O((M=e.label)!=null?M:e.name,"list"),u="dataGridProps?.rows",s=[["React","react",!0],["useDataGrid","@refinedev/mui"],["DataGrid","@mui/x-data-grid"],["GridColumns","@mui/x-data-grid"],["EditButton","@refinedev/mui"],["ShowButton","@refinedev/mui"],["DeleteButton","@refinedev/mui"],["List","@refinedev/mui"]],m=t.filter(r=>(r==null?void 0:r.relation)&&!(r!=null&&r.fieldable)&&(r==null?void 0:r.resource)),g=m.filter(Boolean).map(r=>{if((r==null?void 0:r.relation)&&!r.fieldable&&r.resource){s.push(["useMany","@refinedev/core"]);let v="";return r.multiple?v=`[].concat(...(${u}?.map((item: any) => ${l("item",r.key,r.accessor,!1)}) ?? []))`:v=`${u}?.map((item: any) => ${l("item",r.key,r.accessor,!1)}) ?? []`,`
                const { data: ${L(r.key,"Data")}, isLoading: ${L(r.key,"IsLoading")} } =
                useMany({
                    resource: "${r.resource.name}",
                    ids: ${v},
                    queryOptions: {
                        enabled: !!${u},
                    },
                });
                `}}).filter(Boolean),d=m==null?void 0:m.map(r=>{if(r&&r.resource)return`${L(r.key,"Data")}?.data`}).filter(Boolean),I=r=>{var v,N;if(r.relation&&r.resource){let E=`${L(r.key,"Data")}?.data`,w=L(r.key,"IsLoading");if(Array.isArray(r.accessor))return;let P=`${w} ? <>Loading...</> : `,ue=`field: "${r.key}"`,me=r.accessor&&!r.multiple&&!Array.isArray(r.accessor)?`valueGetter: ({ row }) => {
            const value = ${l("row",r.key,r.accessor,!1)};

            return value;
        },`:"",pe=`headerName: "${h(r.key)}"`,Q="";if(r.multiple){s.push(["TagField","@refinedev/mui"]);let j="item";if(r!=null&&r.relationInfer){let ee=`${E}?.find((resourceItems) => resourceItems.id === ${l("item",void 0,r.accessor)})`;j=l(ee,void 0,(v=r==null?void 0:r.relationInfer)==null?void 0:v.accessor)}Q=`
                renderCell: function render({ value }) {
                    return ${P} (
                        <>
                            {${l("value",void 0)}?.map((item: any, index: number) => (
                                <TagField key={index} value={${j}} />
                            ))}
                        </>
                    )
                }
                `}else if(r!=null&&r.relationInfer){let j=`${E}?.find((item) => item.id === value)`,ee=l(j,void 0,(N=r==null?void 0:r.relationInfer)==null?void 0:N.accessor);Q=`
                    renderCell: function render({ value }) {
                        return ${P} ${ee};
                    }
                    `}else Q="";return`
                {
                    ${ue},
                    ${pe},${me}
                    minWidth: 300,${Q}
                }
            `}},C=r=>{if(r.type==="image"){let v=`field: "${r.key}"`,N=`headerName: "${h(r.key)}"`,E=r.accessor&&!r.multiple&&!Array.isArray(r.accessor)?`valueGetter: ({ row }) => {
            const value = ${l("row",r.key,r.accessor,!1)};

            return value;
        },`:"",w=`
                renderCell: function render({ value }) {
                    return (
                        <img src={${l("value",void 0,Array.isArray(r.accessor)?r.accessor:void 0," + ")}} style={{ height: "50px", maxWidth: "100px" }} />
                    )
                }
            `;return r.multiple&&(w=`
                    renderCell: function render({ value }) {
                        return (
                            <>
                            {value?.map((item: any, index: number) => (
                                <img src={${l("item",void 0,r.accessor," + ")}} key={index} style={{ height: "50px", maxWidth: "100px" }} />
                            ))}
                            </>
                        )
                    }
                `),`
                {
                    ${v},
                    ${N},${E}
                    minWidth: 100,${w}
                }
            `}},F=r=>{if(r.type==="email"){s.push(["EmailField","@refinedev/mui"]);let v=`field: "${r.key}"`,N=`headerName: "${h(r.key)}"`,E=r.accessor&&!r.multiple&&!Array.isArray(r.accessor)?`valueGetter: ({ row }) => {
            const value = ${l("row",r.key,r.accessor,!1)};

            return value;
        },`:"",w=`
            renderCell: function render({ value }) {
                return (
                    <EmailField value={${l("value",void 0,Array.isArray(r.accessor)?r.accessor:void 0," + ")}} />
                )
            }
        `;return r.multiple&&(s.push(["TagField","@refinedev/mui"]),w=`
                renderCell: function render({ value }) {
                    return (
                        <>
                        {value?.map((item: any, index: number) => (
                            <TagField value={${l("item",void 0,r.accessor," + ")}} key={index} />
                        ))}
                        </>
                    )
                }
            `),`
            {
                ${v},
                ${N},${E}
                minWidth: 250,${w}
            }
        `}},x=r=>{if(r.type==="url"){s.push(["UrlField","@refinedev/mui"]);let v=`field: "${r.key}"`,N=`headerName: "${h(r.key)}"`,E=r.accessor&&!r.multiple&&!Array.isArray(r.accessor)?`valueGetter: ({ row }) => {
            const value = ${l("row",r.key,r.accessor,!1)};

            return value;
        },`:"",w=`
                renderCell: function render({ value }) {
                    return (
                        <UrlField value={${l("value",void 0,Array.isArray(r.accessor)?r.accessor:void 0," + ")}} />
                    )
                }
            `;return r.multiple&&(s.push(["TagField","@refinedev/mui"]),w=`
                    renderCell: function render({ value }) {
                        return (
                            <>
                            {value?.map((item: any, index: any) => (
                                <TagField value={${l("item",void 0,r.accessor," + ")}} key={index} />
                            ))}
                            </>
                        )
                    }
                `),`
                {
                    ${v},
                    ${N},${E}
                    minWidth: 250,${w}
                }
            `}},c=r=>{if(r!=null&&r.type){s.push(["Checkbox","@refinedev/mui"]);let v=`field: "${r.key}"`,N=`headerName: "${h(r.key)}"`,E=r.accessor&&!r.multiple&&!Array.isArray(r.accessor)?`valueGetter: ({ row }) => {
            const value = ${l("row",r.key,r.accessor,!1)};

            return value;
        },`:"",w=`
                renderCell: function render({ value }) {
                    return (
                        <Checkbox checked={!!${l("value",void 0,Array.isArray(r.accessor)?r.accessor:void 0," && ")}} />
                    );
                }
            `;return r.multiple&&(w=`
                    renderCell: function render({ value }) {
                        return (
                            <>
                            {value?.map((item: any, index: number) => (
                                <Checkbox checked={!!${l("item",void 0,r.accessor," && ")}} key={index} />
                            ))}
                            </>
                        )
                    }
                `),`
                {
                    ${v},
                    ${N},${E}
                    minWidth: 250,${w}
                }
            `}},S=r=>{if(r.type==="date"){s.push(["DateField","@refinedev/mui"]);let v=`field: "${r.key}"`,N=`headerName: "${h(r.key)}"`,E=r.accessor&&!r.multiple&&!Array.isArray(r.accessor)?`valueGetter: ({ row }) => {
            const value = ${l("row",r.key,r.accessor,!1)};

            return value;
        },`:"",w=`
                renderCell: function render({ value }) {
                    return <DateField value={value} />;
                }
            `;return r.multiple&&(w=`
                    renderCell: function render({ value }) {
                        return (
                            <>
                            {value?.map((item: any, index: number) => (
                                <DateField value={${l("item",void 0,r.accessor,' + " " + ')}} key={index} />
                            ))}
                            </>
                        )
                    }
                `),`
                {
                    ${v},
                    ${N},${E}
                    minWidth: 250,${w}
                }
            `}},p=r=>{if((r==null?void 0:r.type)==="richtext"){s.push(["MarkdownField","@refinedev/mui"]);let v=`field: "${r.key}"`,N=`headerName: "${h(r.key)}"`,E=r.accessor&&!r.multiple&&!Array.isArray(r.accessor)?`valueGetter: ({ row }) => {
            const value = ${l("row",r.key,r.accessor,!1)};

            return value;
        },`:"",w=`
                renderCell: function render({ value }) {
                    return <MarkdownField value={(value ?? "").slice(0, 80) + "..."} />;
                }
            `;return r.multiple&&(w=`
                    renderCell: function render({ value }) {
                        return (
                            <>
                            {value?.map((item: any, index: number) => (
                                <MarkdownField value={(${l("item",void 0,r.accessor,' + " " + ')}).slice(0, 80) + "..."} key={index} />
                            ))}
                            </>
                        )
                    }
                `),`
                {
                    ${v},
                    ${N},${E}
                    minWidth: 250,${w}
                }
            `}},i=r=>{if(r&&(r.type==="text"||r.type==="number")){let v=`field: "${r.key}"`,N=`headerName: "${h(r.key)}"`,E=r.accessor&&!r.multiple&&!Array.isArray(r.accessor)?`valueGetter: ({ row }) => {
            const value = ${l("row",r.key,r.accessor,!1)};

            return value;
        },`:"",w="";if(r.multiple){s.push(["TagField","@refinedev/mui"]);let P=l("item",void 0,r.accessor,' + " " + ');w=`
                renderCell: function render({ row }) {
                    return (
                        <>
                            {(${l("row",r.key)})?.map((item: any) => (
                                <TagField value={${P}} key={${P}} />
                            ))}
                        </>
                    )
                }
                `}return!r.multiple&&Array.isArray(r.accessor)&&(w=`
                renderCell: function render({ row }) {
                    return (
                        <>{${l("row",r.key,r.accessor)}}</>
                    );
                }
                `),`
            {
                ${v},
                ${N},${E}${r.type==="number"?"type: 'number',":""}
                minWidth: ${Y(r.key)?50:200},${w}
            }
            `}},{canEdit:T,canShow:b,canDelete:A}=e!=null?e:{};T&&s.push(["EditButton","@refinedev/mui"]),b&&s.push(["ShowButton","@refinedev/mui"]),A&&s.push(["DeleteButton","@refinedev/mui"]);let o=T||b||A?k`
            {
                field: "actions",
                headerName: "Actions",
                renderCell: function render({ row }) {
                    return (
                        <>
                            ${T?k`<EditButton hideText recordItemId={row.id} />`:""}
                            ${b?k`<ShowButton hideText recordItemId={row.id} />`:""}
                            ${A?k`<DeleteButton hideText recordItemId={row.id} />`:""}
                        </>
                    );
                },
                align: "center",
                headerAlign: "center",
                minWidth: 80,
            },
    `:"",$=t.map(r=>{switch(r==null?void 0:r.type){case"text":case"number":return i(r);case"richtext":return p(r);case"email":return F(r);case"image":return C(r);case"date":return S(r);case"boolean":return c(r);case"url":return x(r);case"relation":return I(r);default:return}});return z(s),k`
    ${_(s)}
    
    export const ${n} = () => {
        const { dataGridProps } = useDataGrid(
            ${a?`{ resource: "${e.name}" }`:""} 
        );
    
        ${g}

        const columns = React.useMemo<GridColumns<any>>(() => [
            ${[...$,o].filter(Boolean).join(`,\r
`)}
        ], [${d.join(",")}]);

        return (
            <List>
                <DataGrid {...dataGridProps} columns={columns} autoHeight />
            </List>
        );
    };
    `},Ie=K({type:"list",additionalScope:[["@refinedev/mui","RefineMui",rt],["@emotion/react","EmotionReact",tt],["@emotion/styled","EmotionStyled",nt],["@mui/lab","MuiLab",ot],["@mui/material","MuiMaterial",at],["@mui/x-data-grid","MuiXDataGrid",it]],codeViewerComponent:Z,loadingComponent:X,errorComponent:U,renderer:ze});var st=f(require("@refinedev/mui")),ct=f(require("@refinedev/react-hook-form")),ut=f(require("@emotion/react")),mt=f(require("@emotion/styled")),pt=f(require("@mui/lab")),lt=f(require("@mui/material")),dt=f(require("@mui/x-data-grid")),yt=f(require("react-hook-form"));var qe=({resource:e,fields:t,isCustomPage:a})=>{var x;let n=O((x=e.label)!=null?x:e.name,"create"),u=[["Create","@refinedev/mui"],["Box","@mui/material"],["useForm","@refinedev/react-hook-form"]],m=t.filter(c=>(c==null?void 0:c.relation)&&!(c!=null&&c.fieldable)&&(c==null?void 0:c.resource)).filter(Boolean).map(c=>{if((c==null?void 0:c.relation)&&!c.fieldable&&c.resource)return u.push(["useAutocomplete","@refinedev/mui"]),`
                const { autocompleteProps: ${L(c.key,"AutocompleteProps")} } =
                useAutocomplete({
                    resource: "${c.resource.name}",
                });
            `}).filter(Boolean),g=c=>{if(c.relation&&c.resource){u.push(["Autocomplete","@mui/material"],["Controller","react-hook-form"]);let S=L(c.key,"AutocompleteProps"),p=c.relationInfer&&c.relationInfer.accessor?typeof c.relationInfer.accessor=="string"?c.relationInfer.accessor:c.relationInfer.accessor[0]:"title",i=p.includes(".")||p.includes("[")||p.includes("]")||p.includes("-"),T=c.accessor?l("item",void 0,c.accessor,!1):"(item?.id ?? item)",b=c.accessor?l("value",void 0,c.accessor,!1):"(value?.id ?? value)",A=c.accessor?"value":c.multiple?"value?.map((item: any) => item?.id ?? item)":"value?.id ?? value";return k`
                <Controller
                    control={control}
                    name="${B(c.key,void 0)}"
                    rules={{ required: "This field is required" }}
                    // eslint-disable-next-line
                    ${c.multiple?"defaultValue={[] as any}":"defaultValue={null as any}"}
                    render={({ field }) => (
                        <Autocomplete
                            {...${S}}
                            {...field}
                            ${c.multiple?"multiple":""}
                            onChange={(_, value) => {
                                field.onChange(${A});
                            }}
                            getOptionLabel={(item) => {
                                return (
                                    ${S}?.options?.find(
                                        (p) =>
                                            p?.id?.toString() ===
                                            ${T}?.toString(),
                                    )?.${i?`["${p}"]`:p} ?? ""
                                );
                            }}
                            isOptionEqualToValue={(option, value) =>
                                value === undefined ||
                                option.id.toString() === ${b}?.toString()
                            }
                            renderInput={(params) => (
                                <TextField
                                    {...params}
                                    label="${h(c.key)}"
                                    margin="normal"
                                    variant="outlined"
                                    error={!!${l("(errors as any)",c.key,c.accessor,!1)}}
                                    helperText={${l("(errors as any)",c.key,c.accessor,!1)}?.message}
                                    required
                                />
                            )}
                        />
                    )}
                />
            `}},d=c=>{if(c.type==="text"||c.type==="url"||c.type==="email"||c.type==="number"||c.type==="date"||c.type==="richtext")return Y(c.key)||(u.push(["TextField","@mui/material"]),c.multiple)?void 0:k`
                <TextField
                    {...register("${B(c.key,void 0,c.accessor)}", {
                        required: "This field is required",
                        ${c.type==="number"?"valueAsNumber: true,":""}
                    })}
                    error={!!${l("(errors as any)",c.key,c.accessor,!1)}}
                    helperText={${l("(errors as any)",c.key,c.accessor,!1)}?.message}
                    margin="normal"
                    fullWidth
                    InputLabelProps={{ shrink: true }}
                    ${c.type!=="date"&&c.type!=="richtext"?`type="${c.type}"`:""}
                    ${c.type==="richtext"?"multiline":""}
                    label="${h(c.key)}"
                    name="${B(c.key,void 0,c.accessor)}"
                />
            `},I=c=>{if(c.type==="boolean")return u.push(["Checkbox","@mui/material"],["FormControlLabel","@mui/material"],["Controller","react-hook-form"]),c.multiple?void 0:k`
                <Controller
                    control={control}
                    name="${B(c.key,void 0,c.accessor)}"
                    // eslint-disable-next-line
                    defaultValue={null as any}
                    render={({ field }) => (
                        <FormControlLabel label="${h(c.key)}" control={
                            <Checkbox
                                {...field}
                                checked={field.value}
                                onChange={(event) => {
                                    field.onChange(event.target.checked);
                                }}
                            />
                        } />
                    )}
                />
            `},C=c=>{if(c.type==="date"){let S=d(c);return`
                {/*
                    DatePicker component is not included in "@refinedev/mui" package.
                    To use a <DatePicker> component, you can follow the official documentation for Material UI.

                    Docs: https://mui.com/x/react-date-pickers/date-picker/#basic-usage
                */}
                ${S!=null?S:""}
                `}},F=t.map(c=>{switch(c==null?void 0:c.type){case"text":case"number":case"email":case"url":case"richtext":return d(c);case"date":return C(c);case"boolean":return I(c);case"relation":return g(c);default:return}});return z(u),k`
    ${_(u)}

    export const ${n} = () => {
        const {
            saveButtonProps,
            refineCore: { formLoading },
            register,
            control,
            formState: { errors },
        } = useForm(
            ${a?`{
                refineCoreProps: {
                    resource: "${e.name}",
                    action: "create",
                }
            }`:""}
        );

        ${m}

        return (
            <Create isLoading={formLoading} saveButtonProps={saveButtonProps}>
                <Box
                    component="form"
                    sx={{ display: "flex", flexDirection: "column" }}
                    autoComplete="off"
                >
                    ${F.join("")}
                </Box>
            </Create>
        );
    };
    `},$e=K({type:"create",additionalScope:[["@refinedev/mui","RefineMui",st],["@refinedev/react-hook-form","RefineReactHookForm",ct],["@emotion/react","EmotionReact",ut],["@emotion/styled","EmotionStyled",mt],["@mui/lab","MuiLab",pt],["@mui/material","MuiMaterial",lt],["@mui/x-data-grid","MuiXDataGrid",dt],["react-hook-form","ReactHookForm",yt]],codeViewerComponent:Z,loadingComponent:X,errorComponent:U,renderer:qe});var ft=f(require("@refinedev/mui")),gt=f(require("@refinedev/react-hook-form")),ht=f(require("@emotion/react")),It=f(require("@emotion/styled")),$t=f(require("@mui/lab")),xt=f(require("@mui/material")),kt=f(require("@mui/x-data-grid")),bt=f(require("react-hook-form"));var Ke=({resource:e,fields:t,isCustomPage:a,id:n})=>{var S,p;let u=O((S=e.label)!=null?S:e.name,"edit"),s=L((p=e.label)!=null?p:e.name,"Data"),m=[["Edit","@refinedev/mui"],["Box","@mui/material"],["useForm","@refinedev/react-hook-form"]],d=t.filter(i=>(i==null?void 0:i.relation)&&!(i!=null&&i.fieldable)&&(i==null?void 0:i.resource)).filter(Boolean).map(i=>{if((i==null?void 0:i.relation)&&!i.fieldable&&i.resource){m.push(["useAutocomplete","@refinedev/mui"]);let T=l(s,i.key,i.accessor,!1);return i.multiple&&i.accessor&&(T=`${l(s,i.key)}?.map((item: any) => ${l("item",void 0,i.accessor)})`),`
                const { autocompleteProps: ${L(i.key,"AutocompleteProps")} } =
                useAutocomplete({
                    resource: "${i.resource.name}",
                    defaultValue: ${T},
                });
            `}}).filter(Boolean),I=i=>{if(i.relation&&i.resource){m.push(["Autocomplete","@mui/material"],["Controller","react-hook-form"]);let T=L(i.key,"AutocompleteProps"),b=i.relationInfer&&i.relationInfer.accessor?typeof i.relationInfer.accessor=="string"?i.relationInfer.accessor:i.relationInfer.accessor[0]:"title",A=b.includes(".")||b.includes("[")||b.includes("]")||b.includes("-"),o=i.accessor?l("item",void 0,i.accessor,!1):"(item?.id ?? item)",$=i.accessor?l("value",void 0,i.accessor,!1):"(value?.id ?? value)",M=i.accessor?"value":i.multiple?"value?.map((item: any) => item?.id ?? item)":"value?.id ?? value";return k`
                <Controller
                    control={control}
                    name="${B(i.key,void 0)}"
                    rules={{ required: "This field is required" }}
                    // eslint-disable-next-line
                    ${i.multiple?"defaultValue={[] as any}":"defaultValue={null as any}"}
                    render={({ field }) => (
                        <Autocomplete
                            {...${T}}
                            {...field}
                            ${i.multiple?"multiple":""}
                            onChange={(_, value) => {
                                field.onChange(${M});
                            }}
                            getOptionLabel={(item) => {
                                return (
                                    ${T}?.options?.find(
                                        (p) =>
                                            p?.id?.toString() ===
                                            ${o}?.toString(),
                                    )?.${A?`["${b}"]`:b} ?? ""
                                );
                            }}
                            isOptionEqualToValue={(option, value) =>
                                value === undefined ||
                                option?.id?.toString() === ${$}?.toString()
                            }
                            renderInput={(params) => (
                                <TextField
                                    {...params}
                                    label="${h(i.key)}"
                                    margin="normal"
                                    variant="outlined"
                                    error={!!${l("(errors as any)",i.key,i.accessor,!1)}}
                                    helperText={${l("(errors as any)",i.key,i.accessor,!1)}?.message}
                                    required
                                />
                            )}
                        />
                    )}
                />
            `}},C=i=>{if(i.type==="text"||i.type==="url"||i.type==="email"||i.type==="number"||i.type==="date"||i.type==="richtext"){if(m.push(["TextField","@mui/material"]),i.multiple){m.push(["Box","@mui/material"]);let T=B(i.key,"${index}",i.accessor),b=l("(errors as any)",i.key,void 0,!1)+"?.[index]";return`
                    <Box sx={{display: "flex", gap: 1}}>
                        {${l(s,i.key)}?.map((item: any, index: number) => (
                            <TextField
                                key={index}
                                {...register(\`${T}\`, {
                                    required: "This field is required",
                                    ${i.type==="number"?"valueAsNumber: true,":""}
                                })}
                                error={!!${b}}
                                helperText={${b}?.message as string}
                                margin="normal"
                                fullWidth
                                InputLabelProps={{ shrink: true }}
                                ${i.type!=="date"&&i.type!=="richtext"?`type="${i.type}"`:""}
                                ${i.type==="richtext"?"multiline":""}
                                label={\`${h(i.key)} \${index+1}\`}
                                name={\`${B(i.key,void 0,i.accessor)}.\${index}\`}
                            />
                        ))}
                    </Box>
                `}return k`
                <TextField
                    {...register("${B(i.key,void 0,i.accessor)}", {
                        required: "This field is required",
                        ${i.type==="number"?"valueAsNumber: true,":""}
                    })}
                    error={!!${l("(errors as any)",i.key,i.accessor,!1)}}
                    helperText={${l("(errors as any)",i.key,i.accessor,!1)}?.message}
                    margin="normal"
                    fullWidth
                    InputLabelProps={{ shrink: true }}
                    ${i.type!=="date"&&i.type!=="richtext"?`type="${i.type}"`:""}
                    ${i.type==="richtext"?"multiline":""}
                    label="${h(i.key)}"
                    name="${B(i.key,void 0,i.accessor)}"
                    ${Y(i.key)?"disabled":""}
                />
            `}},F=i=>{if(i.type==="boolean"){if(m.push(["Checkbox","@mui/material"],["FormControlLabel","@mui/material"],["Controller","react-hook-form"]),i.multiple){m.push(["Box","@mui/material"]);let T=B(i.key,"${index}",i.accessor);return`
                    <Box sx={{display: "flex", gap: 1}}>
                        {${l(s,i.key)}?.map((item: any, index: number) => (
                            <Controller
                                key={index}
                                control={control}
                                name={\`${T}\`}
                                // eslint-disable-next-line
                                defaultValue={null as any}
                                render={({ field }) => (
                                    <FormControlLabel label={\`${h(i.key)} \${index+1}\`} control={
                                        <Checkbox
                                            {...field}
                                            checked={field.value}
                                            onChange={(event) => {
                                                field.onChange(event.target.checked);
                                            }}
                                        />
                                    } />
                                )}
                            />
                        ))}
                    </Box>
                `}return k`
                <Controller
                    control={control}
                    name="${B(i.key,void 0,i.accessor)}"
                    // eslint-disable-next-line
                    defaultValue={null as any}
                    render={({ field }) => (
                        <FormControlLabel label="${h(i.key)}" control={
                            <Checkbox
                                {...field}
                                checked={field.value}
                                onChange={(event) => {
                                    field.onChange(event.target.checked);
                                }}
                            />
                        } />
                    )}
                />
            `}},x=i=>{if(i.type==="date")return`
                {/*
                    DatePicker component is not included in "@refinedev/mui" package.
                    To use a <DatePicker> component, you can follow the official documentation for Material UI.

                    Docs: https://mui.com/x/react-date-pickers/date-picker/#basic-usage
                */}
                ${C(i)}
                `},c=t.map(i=>{switch(i==null?void 0:i.type){case"text":case"number":case"email":case"url":case"richtext":return C(i);case"date":return x(i);case"boolean":return F(i);case"relation":return I(i);default:return}});return z(m),k`
    ${_(m)}

    export const ${u} = () => {
        const {
            saveButtonProps,
            refineCore: { queryResult },
            register,
            control,
            formState: { errors },
        } = useForm(
            ${a?`{
                refineCoreProps: {
                    resource: "${e.name}",
                    id: ${n},
                    action: "edit",
                }
            }`:""}
        );

        const ${s} = queryResult?.data?.data;

        ${d}

        return (
            <Edit saveButtonProps={saveButtonProps}>
                <Box
                    component="form"
                    sx={{ display: "flex", flexDirection: "column" }}
                    autoComplete="off"
                >
                    ${c.join("")}
                </Box>
            </Edit>
        );
    };
    `},xe=K({type:"edit",additionalScope:[["@refinedev/mui","RefineMui",ft],["@refinedev/react-hook-form","RefineReactHookForm",gt],["@emotion/react","EmotionReact",ht],["@emotion/styled","EmotionStyled",It],["@mui/lab","MuiLab",$t],["@mui/material","MuiMaterial",xt],["@mui/x-data-grid","MuiXDataGrid",kt],["react-hook-form","ReactHookForm",bt]],codeViewerComponent:Z,loadingComponent:X,errorComponent:U,renderer:Ke});var vt=({action:e,id:t,...a})=>{let{action:n,id:u}=(0,Ar.useResource)();switch(e!=null?e:n){case"show":return ce.default.createElement(he,{...a,id:t!=null?t:u});case"create":return ce.default.createElement($e,{...a,id:t!=null?t:u});case"edit":return ce.default.createElement(xe,{...a,id:t!=null?t:u});default:return ce.default.createElement(Ie,{...a,id:t!=null?t:u})}};
//# sourceMappingURL=mui.js.map