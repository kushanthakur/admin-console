var Sr=Object.create;var pe=Object.defineProperty;var Nr=Object.getOwnPropertyDescriptor;var Vr=Object.getOwnPropertyNames;var Mr=Object.getPrototypeOf,Lr=Object.prototype.hasOwnProperty;var Pr=(r,n)=>{for(var i in n)pe(r,i,{get:n[i],enumerable:!0})},qe=(r,n,i,o)=>{if(n&&typeof n=="object"||typeof n=="function")for(let c of Vr(n))!Lr.call(r,c)&&c!==i&&pe(r,c,{get:()=>n[c],enumerable:!(o=Nr(n,c))||o.enumerable});return r};var v=(r,n,i)=>(i=r!=null?Sr(Mr(r)):{},qe(n||!r||!r.__esModule?pe(i,"default",{value:r,enumerable:!0}):i,r)),Gr=r=>qe(pe({},"__esModule",{value:!0}),r);var ut={};Pr(ut,{MantineCreateInferencer:()=>Ie,MantineCreateRenderer:()=>ze,MantineEditInferencer:()=>he,MantineEditRenderer:()=>je,MantineInferencer:()=>ct,MantineListInferencer:()=>ge,MantineListRenderer:()=>Ke,MantineShowInferencer:()=>fe,MantineShowRenderer:()=>Oe});module.exports=Gr(ut);var ue=v(require("react")),Rr=require("@refinedev/core");var Qr=v(require("@refinedev/mantine")),Yr=v(require("@mantine/core"));var K=v(require("react")),Be=require("@refinedev/core");var Dr=/(image|photo|avatar|url|logo|cover|thumbnail|icon)/i,$e=(r,n)=>{let i=["name","label","title","count","content","username","nickname","login","firstName","lastName","url"];Dr.test(r)&&i.unshift("url");let o=i.find(c=>c in n&&!!n[c]);if(o)return o==="firstName"&&"lastName"in n?["firstName","lastName"]:o};var Ze=require("@refinedev/core");function xe(r,n,i){if(n)return n;let o=i==null?void 0:i.find(a=>a.name===r),c=(0,Ze.pickNotDeprecated)(o==null?void 0:o.meta,o==null?void 0:o.options);return c!=null&&c.dataProviderName?c.dataProviderName:"default"}var ae=r=>{var n;return(n=r==null?void 0:r.options)==null?void 0:n.dataProviderName};var ke=r=>{let n=[...r].filter(Boolean).sort((i,o)=>(o.priority||0)-(i.priority||0))[0];return n||null};var Je=v(require("prettier/standalone")),Xe=v(require("prettier/parser-typescript")),be=r=>{try{return Je.default.format(r,{parser:"typescript",plugins:[Xe.default],arrowParens:"always",trailingComma:"all",semi:!0,tabWidth:4,printWidth:80})}catch(n){return console.warn("Formatting error in inferencer",n),r}};var Fe=r=>r.replace(/ {2,}/g," ").replace(/\n{2,}/g,`
`);var Ce=/(-id|-ids|_id|_ids|Id|Ids|ID|IDs)(\[\])?$/,Qe=(r,n)=>{let i=Ce.test(r),o=typeof n=="string"||typeof n=="number",c=Array.isArray(n)&&n.every(a=>typeof a=="string"||typeof a=="number");return i&&o||i&&c?{key:r,relation:!0,multiple:!!c,type:"relation",priority:1}:!1};var G=r=>r.replace(Ce,"");var I=r=>G(r).replace(/([a-z])([A-Z])/g,"$1 $2").replace(/_/g," ").replace(/-/g," ").split(" ").map(u=>u.charAt(0).toUpperCase()+u.slice(1)).join(" ");var ve=r=>r.replace(/export\s+(const|let|var|type|interface|function|class)\s+(\w+)\s*(=|:)\s*/g,"$1 $2 = ").split(`
`).filter(c=>!c.trim().startsWith("export default")).join(`
`);var Ye=/import(?:(?:(?:[ \n\t]+([^ *\n\t\{\},]+)[ \n\t]*(?:,|[ \n\t]+))?([ \n\t]*\{(?:[ \n\t]*[^ \n\t"'\{\}]+[ \n\t]*,?)+\})?[ \n\t]*)|[ \n\t]*\*[ \n\t]*as[ \n\t]+([^ \n\t\{\}]+)[ \n\t]+)from[ \n\t]*(?:['"])([^'"\n]+)(?:['"])(?:;?)/g,Er=/import[ \n\t](?:['"])([^'"\n]+)(?:['"])(?:;?)/g,Br=/((?:\w|\s|_)*)( as )((?:\w|\s|_)*)( |,)?/g,Te=(r,n={})=>{let i=r.matchAll(Ye),o=new Set;for(let c of i){let[,a,u,f,m]=c;if(m in n){let h=n[m];if(m==="react")continue;a&&o.add(`const { default: ${a} } = ${h};`),u&&o.add(`const${u.replace(Br,"$1: $3$4")} = ${h};`),f&&o.add(`const ${f} = ${h};`)}}return Fe(`
    ${Array.from(o).join(`
`)}
    ${r.replace(Ye,"").replace(Er,"")}
    `)};var se=v(require("pluralize"));var Ae=(r,n)=>r?n.find(o=>{let c=G(r.key);return o.name===c||o.name===(se.default.isPlural(c)?c:se.default.plural(c))||o.name===(se.default.isSingular(c)?c:se.default.singular(c))}):void 0;var er=v(require("pluralize"));var O=(r,n,i="Inferred")=>{let o=r.replace(/[^a-zA-Z0-9]/g," "),c=er.default.singular(o),u=I(c).replace(/ /g,"")||i,f=n.charAt(0).toUpperCase()+n.slice(1);return/^[a-zA-Z]/.test(u)?`${u}${f}`:`${f}${u}`};var Or=r=>r?Array.isArray(r)?r.join(""):typeof r=="string"?r:typeof r=="object"||typeof r=="function"?r.toString():typeof r=="number"?String(r):typeof r=="boolean"&&r?"true":r:"",g=(r,...n)=>r.reduce((o,c,a)=>`${o}${c}${Or(n[a])}`,"").trim();var Re=(r,n)=>`
    ${r!=null?r:""}
    
    render(typeof ${n} !== "undefined" ? <${n} /> : <></>);
    `;var we=r=>r==null?void 0:r.replace(/(\/\* hidden-start \*\/)(.|\n)*?(\/\* hidden-end \*\/)/g,"");var Kr=/^[a-zA-Z_$][a-zA-Z_$0-9]*$/,Se=r=>Kr.test(r);function Ne(r,n,i){let o=`${r}`;return n&&(o+="?.",Se(n)?o+=n:o+=`['${n}']`),i&&(o+="?.",Se(i)?o+=i:o+=`['${i}']`),o}function zr(r,n,i){return(i!=null?i:[]).map(c=>Ne(r,n,c))}var l=(r,n,i,o=' + " " + ')=>Array.isArray(i)?o?zr(r,n,i).join(o):Ne(r,n,i[0]):Ne(r,n,i),V=(r,n,i)=>{let o=r;return n&&(o+=`.${n}`),i&&(Array.isArray(i)?o+=`.${i[0]}`:o+=`.${i}`),o};var j=r=>{let n=r.reduce((o,[c,a,u])=>(o[a]||(o[a]=[]),o[a].includes(c)||(u?o[a].push([c,!0]):o[a].push(c)),o),{});return Object.entries(n).map(([o,c])=>{let a=c.find(h=>Array.isArray(h)&&h[1]),u=c.filter(h=>typeof h=="string"),f=a?`${a[0]}`:"",m=u.length?`{ ${u.join(", ")} }`:"";return`import ${f}${f&&m?", ":""}${m} from "${o}";`})};var Ve=v(require("pluralize")),H=(r="")=>Ve.default.isSingular(r)?r:Ve.default.singular(r);var Me=v(require("pluralize")),re=(r="")=>Me.default.isPlural(r)?r:Me.default.plural(r);var jr=/^id$/i,Y=r=>jr.test(r);var ie=r=>r.relationInfer&&r.relationInfer.accessor?Array.isArray(r.relationInfer.accessor)?`optionLabel: "${r.relationInfer.accessor[0]}",`:r.relationInfer.accessor!=="title"?`optionLabel: "${r.relationInfer.accessor}",`:"":"";var _=r=>{};var R=(r,n="")=>{if(Number.isInteger(Number(r)))return n.charAt(0).toLowerCase()+n.slice(1)+r;let o=r.replace(/^\d+/,"").replace(/[^a-zA-Z0-9]/g,"-"),c=I(o).replace(/ /g,"");return`${c.charAt(0).toLowerCase()+c.slice(1)}${n.charAt(0).toUpperCase()+n.slice(1)}`};var rr=r=>{let n=(i,o,c,a=n)=>{let u=r.map(m=>m(i,o,c,a));return ke(u)};return n};var tr=r=>(i,o,c,a,u)=>r.reduce((f,m)=>m(f,o,c,a,u),i);var nr=(r,n,i,o)=>{let c=Array.isArray(n),a=Array.isArray(n)&&n.every(u=>typeof u=="string"||typeof u=="number");if(c){if(!a){let f=o(r,n[0],i,o);return f?{...f,key:r,multiple:!0,priority:1}:!1}let u=o(r,n[0],i,o)||{type:"string"};return{key:r,multiple:!0,priority:1,type:u==null?void 0:u.type}}return!1};var or=(r,n)=>typeof n=="boolean"?{key:r,type:"boolean"}:!1;var Le=v(require("dayjs")),_r=/(_at|_on|At|On|AT|ON)(\[\])?$/,Hr=["/",":","-","."],ar=(r,n)=>{let i=_r.test(r)&&(0,Le.default)(n).isValid(),o=typeof n=="string"&&(0,Le.default)(n).isValid();return typeof n=="string"&&Hr.some(a=>n.includes(a))&&(i||o)?{key:r,type:"date",priority:1}:!1};var Ur=/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,sr=(r,n)=>typeof n=="string"&&Ur.test(n)?{key:r,type:"email",priority:1}:!1;var Wr=/\.(gif|jpe?g|tiff?|png|webp|bmp|svg)$/i,ir=(r,n)=>typeof n=="string"&&Wr.test(n)?{key:r,type:"image",priority:2}:!1;var cr=(r,n)=>typeof n>"u"||n===null?null:!1;var ur=(r,n)=>{let i=typeof n=="string"&&n.length>0,o=!isNaN(n);return i&&o||typeof n=="number"?{key:r,type:"number"}:!1};var qr=/id$/i,pr=(r,n,i,o)=>{let c=n!==null,a=!Array.isArray(n);if(c&&a&&typeof n=="object"){if(Object.keys(n).length===1&&qr.test(Object.keys(n)[0]))return{key:r,type:"relation",relation:!0,accessor:"id",priority:1};let m=$e(r,n);if((m?m.length>0:!1)&&m){let F=m&&Array.isArray(m)?m[0]:m,b=o(F,n[F],n,o);if(b){let $=Array.isArray(m)?m.map(T=>b.accessor?`${T}.${Array.isArray(b.accessor)?b.accessor[0]:b.accessor}`:T):b.accessor?Array.isArray(b.accessor)?`${m}.${b.accessor[0]}`:`${m}.${b.accessor}`:m;return{...b,fieldable:!0,key:r,accessor:$,priority:1}}}return{key:r,fieldable:!1,type:"object",priority:1}}return!1};var mr=(r,n)=>typeof n=="string"&&n.length>100?{key:r,type:"richtext",priority:1}:!1;var lr=(r,n)=>typeof n=="string"?{key:r,type:"text"}:!1;var Zr=/^(https?|ftp):\/\/(-\.)?([^\s/?\.#-]+\.?)+(\/[^\s]*)?$/i,dr=(r,n)=>typeof n=="string"&&Zr.test(n)?{key:r,type:"url",priority:1}:!1;var yr=[nr,or,ar,sr,ir,cr,ur,pr,Qe,mr,lr,dr];var fr=(r,n,i,o)=>r.map(a=>{if(!a.relation&&(a.type==="text"||a.type==="richtext"||a.type==="number")&&!a.canRelation){let u=/^[a-z0-9-]+$/,f=$=>u.test(`${$}`),m=a.key.toLowerCase()!=="id";return!(!a.accessor||typeof a.accessor=="string")||!m?a:(a.multiple?o[a.key]:[o[a.key]]).every($=>f(a.accessor?$[a.accessor]:$))?{...a,canRelation:!0}:a}return a});var Jr=/(image|photo|avatar|cover|thumbnail|icon)/i,gr=r=>r.map(i=>i.type==="url"&&Jr.test(i.key)?{...i,type:"image"}:i);var Ir=(r,n)=>r.map(o=>{let c=Ae(o,n);return c?{...o,relation:!0,type:"relation",resource:c}:o});var hr=(r,n,i,o,c)=>r.map(u=>{if(u.relation&&u.type==="relation"&&!u.resource){let f=u.accessor?o[u.key][u.accessor]:o[u.key],m=c(u.key,f,o,c);if(m&&m.type!=="relation")return{...u,fieldable:!0,relation:!1,type:m.type,canRelation:!0}}return u});var $r=[gr,Ir,hr,fr];var U=v(require("react")),me=v(require("prism-react-renderer")),xr=v(require("prism-react-renderer/themes/vsDark")),Pe=({code:r,wrapperProps:n})=>((0,U.useEffect)(()=>{var o;let i=document.createElement("style");i.appendChild(document.createTextNode(`
                #code-highlight::-webkit-scrollbar {-webkit-appearance: none; height: 7px; width: 7px;}
                #code-highlight::-webkit-scrollbar-thumb {background-color: #666b7a;}
                #code-highlight::-webkit-scrollbar-corner {background-color: rgb(30, 30, 30);}
                `)),(o=document.getElementById("code-highlight"))==null||o.appendChild(i)},[]),U.default.createElement("div",{id:"code-highlight",style:{maxHeight:"75vh",height:"100%",overflow:"auto",backgroundColor:"rgb(30, 30, 30)"},...n!=null?n:{}},U.default.createElement(me.default,{...me.defaultProps,theme:xr.default,code:r,language:"tsx"},({className:i,style:o,tokens:c,getLineProps:a,getTokenProps:u})=>U.default.createElement("pre",{className:i,style:{...o,padding:"14px 14px 14px 14px",margin:"0",width:"100%",boxSizing:"border-box"}},c.map((f,m)=>U.default.createElement("div",{key:m,...a({line:f,key:m})},f.map((h,F)=>U.default.createElement("span",{key:F,...u({token:h,key:F})}))))))));var E=v(require("react")),Xr=v(require("@refinedev/core")),le=require("@aliemir/react-live");var kr=[["react","React",E.default],["@refinedev/core","RefineCore",Xr]],Ge=E.default.createContext({}),De=({fetchError:r,code:n,additionalScope:i,errorComponent:o})=>{var f;let c=(f=n&&ve(Te(n,[...kr,...i!=null?i:[]].reduce((m,[h,F,b,$])=>$?m:{...m,[h]:F},{}))))!=null?f:"",a=E.default.useMemo(()=>({React:E.default,...E.default,...[...kr,...i!=null?i:[]].reduce((m,[h,F,b])=>({...m,[F]:b}),{})}),[i]),u=E.default.useMemo(()=>()=>{let{error:h}=E.default.useContext(Ge);return o?E.default.createElement(o,{error:h?`<p>An error occured while rendering the generated component.You can check the generated code from the below "Show Code" button and fix the error manually.</p>
                                    <p>If you think this is a bug, please report the issue at <a target="_blank" rel="noopener noreferrer" href="https://github.com/refinedev/refine/issues">https://github.com/refinedev/refine/issues</a></p>
                                    <p>Exception:</p>
                                    <code>${h}</code>`:typeof r=="string"?r:r?`<p>Something went wrong while fetching the resource data.</p>
                                    <p>To learn more about the Inferencer, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`:void 0}):null},[o,r]);return E.default.createElement(le.LiveProvider,{Context:Ge,code:c,scope:a,noInline:!0},!r&&E.default.createElement(le.LivePreview,{Context:Ge}),E.default.createElement(u,null))};var ee=v(require("react")),de=require("@refinedev/core");var br=(r,n,i)=>{let{resource:o,id:c,resources:a}=(0,de.useResource)(n),u=i!=null?i:c,f=(0,de.useDataProvider)(),[m,h]=ee.default.useState(void 0),[F,b]=ee.default.useState(void 0),[$,T]=ee.default.useState(!0),[L,p]=ee.default.useState(!1),P=ee.default.useCallback(async A=>{var M,e;let s=(M=ae(o))!=null?M:xe(o==null?void 0:o.name,void 0,a),x=f(s);p(!0),h(void 0);try{if((r==="list"||r==="create")&&o){let t=(e=(await x.getList({resource:o==null?void 0:o.name})).data)==null?void 0:e[0];t||h(`<p>No records/data found for resource "${o==null?void 0:o.name}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),b(t),setTimeout(()=>{p(!1)},500)}if((r==="edit"||r==="show")&&A&&o){let t=(await x.getOne({resource:o==null?void 0:o.name,id:A})).data;t||h(`<p>No records/data found for resource "${o==null?void 0:o.name}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),b(t),setTimeout(()=>{p(!1)},500)}}catch(y){console.warn("An error occured while fetching the resource data. Please check the error message below:",y),h(`<p>Something went wrong while fetching the resource data.</p>
                    <p>Please check your data provider and API for resource "${o==null?void 0:o.name}".</p>
                    <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),setTimeout(()=>{p(!1)},500)}},[r,f,o,a]);return ee.default.useEffect(()=>{T(!1),!L&&!F&&P(u)},[P,u]),{data:F,loading:L,initial:$,error:m}};var te=v(require("react")),Fr=require("@refinedev/core");var Ee=require("lodash"),Cr=({record:r,fields:n,infer:i})=>{let o=(0,Fr.useDataProvider)(),[c,a]=te.default.useState([]),[u,f]=te.default.useState(!0),[m,h]=te.default.useState(!1),F=te.default.useCallback(async b=>{console.groupCollapsed("@refinedev/inferencer is trying to detect relations");let $=[];h(!0);try{let T=b.map(async p=>{if(p&&(p.relation||p.canRelation)&&r){let P=ae(p.resource),A=o(P),s=Array.isArray(p.accessor)?void 0:p.multiple?r[p.key].map(x=>p.accessor?(0,Ee.get)(x,p.accessor):x)[0]:p.accessor?(0,Ee.get)(r[p.key],p.accessor):r[p.key];if(s&&p.resource)try{let{data:x}=await A.getOne({resource:p.resource.name,id:s});$.push({status:"success",resource:p.resource.name,field:p.key});let M=i("__",x,{},i);return{...p,relationInfer:M}}catch{return $.push({status:"error",resource:p.resource.name,field:p.key}),{...p,relationInfer:null}}if(s){let x,M;try{let{data:t}=await A.getOne({resource:re(G(p.key)),id:s});$.push({status:"success",resource:re(G(p.key)),field:p.key}),x=t,M=!0}catch{$.push({status:"error",resource:re(G(p.key)),field:p.key});try{let{data:k}=await A.getOne({resource:H(G(p.key)),id:s});$.push({status:"success",resource:H(G(p.key)),field:p.key}),x=k,M=!1}catch{return $.push({status:"error",resource:H(G(p.key)),field:p.key}),{...p,relationInfer:null}}}let e=i("__",x,{},i),y=G(p.key);return{...p,relation:!0,type:"relation",resource:{name:M?re(y):H(y)},fieldable:!1,canRelation:void 0,relationInfer:e}}return{...p,relationInfer:null}}return p}),L=await Promise.all(T);a(L.filter(p=>p)),setTimeout(()=>{h(!1)},500)}catch{setTimeout(()=>{h(!1)},500)}setTimeout(()=>{console.log(`Tried to detect relations with ${$.length} attempts and succeeded with ${$.filter(T=>T.status==="success").length} attempts.`),console.groupEnd()},500)},[o,r]);return te.default.useEffect(()=>{f(!1),!m&&n&&n.length>0&&c.length===0&&F(n)},[F,m,n,F]),{fields:c,loading:m,initial:u}};var W=({type:r,additionalScope:n=[],customElements:i=[],fieldTransformers:o=[],renderer:c,loadingComponent:a,errorComponent:u,codeViewerComponent:f})=>{let m=rr([...yr,...i]),h=tr([...$r,...o]),F=({resourceName:$,fieldTransformer:T,id:L})=>{var N,C,D,Q,ne,_e;let{resource:p,resources:P}=(0,Be.useResource)($),{resource:A}=(0,Be.useResource)(),{data:s,loading:x,initial:M,error:e}=br(r,$!=null?$:p==null?void 0:p.name,L),y=K.default.useMemo(()=>{if(s){let wr=Object.keys(s).map(oe=>{let He=s[oe];return m(oe,He,s,m)}).filter(Boolean);if(p){let oe=h(wr,P,p,s,m);return T?oe.flatMap(Ue=>{let We=T(Ue);return We?[We]:[]}):oe}return[]}return[]},[s,P,p,T]),{fields:t,loading:k}=Cr({record:s,fields:y,infer:m}),S=K.default.useMemo(()=>!x&&!k&&!M&&p?c({resource:p,resources:P,fields:t,infer:m,isCustomPage:p.name!==(A==null?void 0:A.name),id:L}):"",[p,P,t,x,k]);return K.default.createElement(K.default.Fragment,null,a&&(x||k)&&K.default.createElement(a,null),!x&&!k&&K.default.createElement(K.default.Fragment,null,K.default.createElement(De,{fetchError:!x&&e?e:!x&&!M&&!s,code:Re(S,O((_e=(ne=(Q=(D=(N=p==null?void 0:p.meta)==null?void 0:N.label)!=null?D:(C=p==null?void 0:p.options)==null?void 0:C.label)!=null?Q:p==null?void 0:p.label)!=null?ne:p==null?void 0:p.name)!=null?_e:"Resource",r)),errorComponent:u,additionalScope:n}),f&&K.default.createElement(f,{code:we(S),loading:x||k})))};return({name:$,resource:T,fieldTransformer:L,id:p})=>K.default.createElement(F,{fieldTransformer:L,resourceName:T!=null?T:$,key:T!=null?T:$,id:p})};var ce=v(require("react")),ye=require("@mantine/core"),vr=require("@tabler/icons"),q=({error:r})=>r?ce.default.createElement(ye.Center,{style:{minHeight:300}},ce.default.createElement(ye.Alert,{title:"Error",color:"red",icon:ce.default.createElement(vr.IconAlertCircle,null)},ce.default.createElement("div",{dangerouslySetInnerHTML:{__html:r!=null?r:""}}))):null;var Tr=v(require("react")),Ar=require("@mantine/core"),Z=()=>Tr.default.createElement(Ar.LoadingOverlay,{visible:!0});var w=v(require("react")),B=require("@mantine/core"),z=require("@tabler/icons");var J=({code:r,loading:n})=>{let i=w.default.useMemo(()=>be(r!=null?r:""),[r]),o=w.default.useRef(null),[c,a]=w.default.useState(!1),[u,f]=w.default.useState(!1);if(n)return null;let m=()=>{var h,F,b,$;(h=o==null?void 0:o.current)==null||h.select(),(F=o==null?void 0:o.current)==null||F.setSelectionRange(0,Number.MAX_SAFE_INTEGER),typeof navigator<"u"&&(navigator.clipboard.writeText(($=(b=o==null?void 0:o.current)==null?void 0:b.value)!=null?$:""),f(!0),setTimeout(()=>{f(!1)},1e3))};return i?w.default.createElement(w.default.Fragment,null,w.default.createElement(B.Affix,{position:{bottom:12,right:60}},w.default.createElement(B.Group,{spacing:"xs"},w.default.createElement(B.Button,{leftIcon:w.default.createElement(z.IconCode,{size:18}),variant:"filled",color:"primary",onClick:()=>a(!0)},"Show Code"),w.default.createElement(B.Button,{leftIcon:w.default.createElement(z.IconMessageCircle,{size:18}),variant:"default",component:"a",target:"_blank",href:"https://github.com/refinedev/refine/discussions/3046"},"Give Feedback"))),w.default.createElement("div",{style:{height:"50px"}}),w.default.createElement(B.Modal,{size:800,opened:c,onClose:()=>a(!1),styles:{modal:{padding:"0px !important",borderRadius:0},header:{display:"none"}}},w.default.createElement(B.ActionIcon,{onClick:()=>a(!1),variant:"transparent",sx:{position:"absolute",right:0,top:0,height:56,width:56}},w.default.createElement(z.IconX,{size:18,style:{color:"#666b7a"}})),w.default.createElement(Pe,{code:i}),w.default.createElement("textarea",{ref:o,defaultValue:(i!=null?i:"").replace(/\\n/g,`\r
`),id:"code-input",style:{padding:0,margin:0,width:0,height:0,opacity:0,border:"none",display:"block"}}),w.default.createElement(B.Button,{sx:{position:"absolute",bottom:12,right:12,width:115},key:"copy",variant:"default",leftIcon:u?w.default.createElement(z.IconCheck,{size:18,style:{color:"green"}}):w.default.createElement(z.IconCopy,{size:18}),onClick:m},u?"Copied":"Copy"))):null};var Oe=({resource:r,fields:n,isCustomPage:i,id:o})=>{var M;let c=O((M=r.label)!=null?M:r.name,"show"),a="record",u=[["useShow","@refinedev/core"],["Show","@refinedev/mantine"],["Title","@mantine/core"]],m=n.filter(e=>(e==null?void 0:e.relation)&&!(e!=null&&e.fieldable)&&(e==null?void 0:e.resource)).filter(Boolean).map(e=>{if((e==null?void 0:e.relation)&&!e.fieldable&&e.resource){if(e.multiple){u.push(["useMany","@refinedev/core"]);let y=l(a,e.key);return e.accessor&&(y=`${l(a,e.key)}?.map((item: any) => ${l("item",void 0,e.accessor)})`),`
                const { data: ${R(e.key,"Data")}, isLoading: ${R(e.key,"IsLoading")} } =
                useMany({
                    resource: "${e.resource.name}",
                    ids: ${y} || [],
                    queryOptions: {
                        enabled: !!${a},
                    },
                });
                `}return u.push(["useOne","@refinedev/core"]),`
                const { data: ${R(e.key,"Data")}, isLoading: ${R(e.key,"IsLoading")} } =
                useOne({
                    resource: "${e.resource.name}",
                    id: ${l(a,e.key,e.accessor,!1)} || "",
                    queryOptions: {
                        enabled: !!${a},
                    },
                });
            `}}).filter(Boolean),h=e=>{if(e.relation&&e.resource){let y=R(e.key,"Data"),t=R(e.key,"IsLoading");return e.multiple?(u.push(["TagField","@refinedev/mantine"],["Group","@mantine/core"]),g`
                <Title my="xs" order={5}>${I(e.key)}</Title>
                {${t} ? <>Loading...</> : (
                    <>
                    ${(()=>{var k,S;if(e.relationInfer)if((k=e.relationInfer)!=null&&k.accessor){if(Array.isArray(e.relationInfer.accessor))return"Not Handled.";{let N=H((S=e.resource)==null?void 0:S.name),C=l(N,void 0,e.relationInfer.accessor);return`
                                    <Group spacing="xs">
                                        {${y}?.data?.map((${N}: any) => <TagField key={${C}} value={${C}} />)}
                                    </Group>
                                    `}}else return"Not Handled.";else return"not-handled - relation with multiple but no resource"})()}
                    </>
                )}
                `):g`
                <Title my="xs" order={5}>${I(e.key)}</Title>
                {${t} ? <>Loading...</> : (
                    <>
                    ${(()=>{var k;return e.relationInfer?(k=e.relationInfer)!=null&&k.accessor?Array.isArray(e.relationInfer.accessor)?`{${l(`${y}?.data`,void 0,e.relationInfer.accessor,' + " " + ')}}`:`{${y}?.data?.${e.relationInfer.accessor}}`:`{${y}?.data}`:`{${y}?.data?.id}`})()}
                    </>
                )}
                
                `}},F=e=>{if(e.type==="text"){if(u.push(["TextField","@refinedev/mantine"]),e.multiple){u.push(["TagField","@refinedev/mantine"],["Group","@mantine/core"]);let y=l("item",void 0,e.accessor);return g`
                <Title my="xs" order={5}>${I(e.key)}</Title>
                <Group spacing="xs">
                    {${l(a,e.key)}?.map((item: any) => (
                        <TagField value={${y}} key={${y}} />
                    ))}
                </Group>
            `}return g`
                <Title my="xs" order={5}>${I(e.key)}</Title>
                <TextField value={${l(a,e.key,e.accessor)}} />
            `}},b=e=>{if(e.type==="image"){if(u.push(["Image","@mantine/core"]),e.multiple){u.push(["Group","@mantine/core"]);let y=l("item",void 0,e.accessor);return g`
                <Title my="xs" order={5}>${I(e.key)}</Title>
                <Group spacing="xs">
                    {${l(a,e.key)}?.map((item: any) => (
                        <Image sx={{ maxWidth: 200 }} src={${y}} key={${y}} />
                    ))}
                </Group>
            `}return g`
                <Title my="xs" order={5}>${I(e.key)}</Title>
                <Image sx={{ maxWidth: 200 }} src={${l(a,e.key,e.accessor," + ")}} />
                `}},$=e=>{if(e.type==="email"){if(u.push(["EmailField","@refinedev/mantine"]),e.multiple){u.push(["TagField","@refinedev/mantine"],["Group","@mantine/core"]);let y=l("item",void 0,e.accessor);return g`
                <Title my="xs" order={5}>${I(e.key)}</Title>
                <Group spacing="xs">
                    {${l(a,e.key)}?.map((item: any) => (
                        <TagField value={${y}} key={${y}} />
                    ))}
                </Group>
            `}return g`
                <Title my="xs" order={5}>${I(e.key)}</Title>
                <EmailField value={${l(a,e.key,e.accessor," + ")}} />
            `}},T=e=>{if(e.type==="url"){if(u.push(["UrlField","@refinedev/mantine"]),e.multiple){u.push(["TagField","@refinedev/mantine"],["Group","@mantine/core"]);let y=l("item",void 0,e.accessor);return g`
                <Title my="xs" order={5}>${I(e.key)}</Title>
                <Group spacing="xs">
                    {${l(a,e.key)}?.map((item: any) => (
                        <TagField value={${y}} key={${y}} />
                    ))}
                </Group>
            `}return g`
                <Title my="xs" order={5}>${I(e.key)}</Title>
                <UrlField value={${l(a,e.key,e.accessor," + ")}} />
            `}},L=e=>{if(e.type==="boolean"){if(u.push(["BooleanField","@refinedev/mantine"]),e.multiple){u.push(["TagField","@refinedev/mantine"],["Group","@mantine/core"]);let y=l("item",void 0,e.accessor);return g`
                <Title my="xs" order={5}>${I(e.key)}</Title>
                <Group spacing="xs">
                    {${l(a,e.key)}?.map((item: any, index: number) => (
                        <TagField value={${y}} key={index} />
                    ))}
                </Group>
            `}return g`
                <Title my="xs" order={5}>${I(e.key)}</Title>
                <BooleanField value={${l(a,e.key,e.accessor," && ")}} />
            `}},p=e=>{if(e.type==="date"){if(u.push(["DateField","@refinedev/mantine"]),e.multiple){u.push(["Group","@mantine/core"]);let y=l("item",void 0,e.accessor);return g`
                <Title my="xs" order={5}>${I(e.key)}</Title>
                <Group spacing="xs">
                    {${l(a,e.key)}?.map((item: any) => (
                        <DateField value={${y}} key={${y}} />
                    ))}
                </Group>
            `}return g`
                <Title my="xs" order={5}>${I(e.key)}</Title>
                <DateField value={${l(a,e.key,e.accessor," + ' ' + ")}} />
            `}},P=e=>{if(e.type==="richtext")return u.push(["MarkdownField","@refinedev/mantine"]),g`
                <Title mt="xs" order={5}>${I(e.key)}</Title>
                <MarkdownField value={${l(a,e.key,e.accessor,' + " " + ')}} />
            `},A=e=>{if(e.type==="number"){if(u.push(["NumberField","@refinedev/mantine"]),e.multiple){u.push(["TagField","@refinedev/mantine"],["Group","@mantine/core"]);let y=l("item",void 0,e.accessor);return g`
                <Title my="xs" order={5}>${I(e.key)}</Title>
                <Group spacing="xs">
                    {${l(a,e.key)}?.map((item: any) => (
                        <TagField value={${y}} key={${y}} />
                    ))}
                </Group>
            `}return g`
                <Title my="xs" order={5}>${I(e.key)}</Title>
                <NumberField value={${l(a,e.key,e.accessor,' + " " + ')} ?? ""} />
            `}},s=e=>{if(e)return g`
                ${e}
            `},x=n.map(e=>{switch(e==null?void 0:e.type){case"text":return s(F(e));case"number":return s(A(e));case"richtext":return s(P(e));case"email":return s($(e));case"image":return s(b(e));case"date":return s(p(e));case"boolean":return s(L(e));case"url":return s(T(e));case"relation":return s(h(e));default:return}});return _(u),g`
    ${j(u)}
    
    export const ${c} = () => {
        const { queryResult } = useShow(${i?`{ 
                    resource: "${r.name}", 
                    id: ${o}
                }`:""});
        const { data, isLoading } = queryResult;
    
        const ${a} = data?.data;
    
        ${m}

        return (
            <Show isLoading={isLoading}>
                ${x.join("")}
            </Show>
        );
    };
    `},fe=W({type:"show",additionalScope:[["@refinedev/mantine","RefineMantine",Qr],["@mantine/core","MantineCore",Yr]],codeViewerComponent:J,loadingComponent:Z,errorComponent:q,renderer:Oe});var et=v(require("@refinedev/mantine")),rt=v(require("@refinedev/react-table")),tt=v(require("@mantine/core")),nt=v(require("@tanstack/react-table"));var X=r=>Array.isArray(r.accessor)||r.multiple?`accessorKey: "${r.key}"`:r.accessor?`accessorKey: "${V(r.key,void 0,r.accessor)}"`:`accessorKey: "${r.key}"`,Ke=({resource:r,fields:n,isCustomPage:i})=>{var y;let o=O((y=r.label)!=null?y:r.name,"list"),c="tableData?.data",a=[["IResourceComponentsProps","@refinedev/core"],["useTable","@refinedev/react-table"],["ColumnDef","@tanstack/react-table"],["flexRender","@tanstack/react-table"],["ScrollArea","@mantine/core"],["List","@refinedev/mantine"],["Table","@mantine/core"],["Pagination","@mantine/core"],["Group","@mantine/core"],["EditButton","@refinedev/mantine"],["ShowButton","@refinedev/mantine"],["DeleteButton","@refinedev/mantine"]],u=n.filter(t=>(t==null?void 0:t.relation)&&!(t!=null&&t.fieldable)&&(t==null?void 0:t.resource)),f=u.filter(Boolean).map(t=>{if((t==null?void 0:t.relation)&&!t.fieldable&&t.resource){a.push(["GetManyResponse","@refinedev/core"]),a.push(["useMany","@refinedev/core"]);let k="";return t.multiple?k=`[].concat(...(${c}?.map((item) => ${l("item",t.key,t.accessor,!1)}) ?? []))`:k=`${c}?.map((item) => ${l("item",t.key,t.accessor,!1)}) ?? []`,`
                const { data: ${R(t.key,"Data")} } =
                useMany({
                    resource: "${t.resource.name}",
                    ids: ${k},
                    queryOptions: {
                        enabled: !!${c},
                    },
                });
                `}}).filter(Boolean),m=u==null?void 0:u.map(t=>{if(t&&t.resource)return R(t.key,"Data")}).filter(Boolean),h=t=>{var k;if(t.relation&&t.resource){let S=`${R(t.key,"Data")}?.data`;if(Array.isArray(t.accessor))return;let N=`id: "${t.key}"`,C=`header: "${I(t.key)}"`,D=X(t),Q="";if(t.multiple){a.push(["TagField","@refinedev/mantine"]);let ne="item";t!=null&&t.relationInfer&&(ne=l("item",void 0,t.relationInfer.accessor)),Q=`cell: function render({ getValue, table }) {
                    const meta = table.options.meta as {
                        ${R(t.key,"Data")}: GetManyResponse;
                    };

                    const ${R(t.key)} = getValue<any[]>()?.map((item) => {
                        return meta.${R(t.key,"Data")}?.data?.find(
                            (resourceItems) => resourceItems.id === ${l("item",void 0,t.accessor)}
                        );
                    })

                    return (
                        <Group spacing="xs">
                            {${R(t.key)}?.map((item, index) => (
                                <TagField key={index} value={${ne}} />
                            ))}
                        </Group>
                    )
                }
            `}else t!=null&&t.relationInfer?Q=`cell: function render({ getValue, table }) {
                        const meta = table.options.meta as {
                            ${R(t.key,"Data")}: GetManyResponse;
                        };

                        const ${R(t.key)} = meta.${S}?.find(
                            (item) => item.id === getValue<any>(),
                        );

                        return ${l(R(t.key),void 0,(k=t==null?void 0:t.relationInfer)==null?void 0:k.accessor)} ?? "Loading...";
                    },`:Q="";return`
                {
                    ${N},
                    ${C},
                    ${D},
                    ${Q}
                }
            `}},F=t=>{if(t.type==="image"){a.push(["Image","@mantine/core"]);let k=`id: "${t.key}"`,S=X(t),N=`header: "${I(t.key)}"`,C=g`
                cell: function render({ getValue }) {
                    ${t!=null&&t.accessor?"try {":""}
                        return <Image sx={{ maxWidth: "100px" }} src={${l("getValue<any>()",void 0,Array.isArray(t.accessor)?t.accessor:void 0," + ")}} />
                    ${t!=null&&t.accessor?" } catch (error) { return null; }":""}
                   
                }
            `;if(t.multiple){let D=l("item",void 0,t.accessor," + ");C=`
                    cell: function render({ getValue }) {
                        ${t!=null&&t.accessor?"try {":""}
                            return (
                                <Group spacing="xs">
                                    {getValue<any[]>()?.map((item, index) => (
                                        <Image src={${D}} key={index} sx={{ maxWidth: "100px" }} />
                                    ))}
                                </Group>
                            )
                        ${t!=null&&t.accessor?" } catch (error) { return null; }":""}
                    }
                `}return`
                {
                    ${k},
                    ${S},
                    ${N},
                    ${C}
                }
            `}},b=t=>{if(t.type==="email"){a.push(["EmailField","@refinedev/mantine"]);let k=`id: "${t.key}"`,S=X(t),N=`header: "${I(t.key)}"`,C=g`
                cell: function render({ getValue }) {
                    return <EmailField value={${l("getValue<any>()",void 0,Array.isArray(t.accessor)?t.accessor:void 0,' + " " + ')}} />
                }
            `;return t.multiple&&(a.push(["TagField","@refinedev/mantine"]),C=`
                    cell: function render({ getValue }) {
                        return (
                            <Group spacing="xs">
                                {getValue<any>()?.map((item, index) => (
                                    <TagField value={${l("item",void 0,t.accessor," + ")}} key={index} />
                                ))}
                            </Group>
                        )
                    }
                `),`
                {
                    ${k},
                    ${S},
                    ${N},
                    ${C}
                }
            `}},$=t=>{if(t.type==="url"){a.push(["UrlField","@refinedev/mantine"]);let k=`id: "${t.key}"`,S=X(t),N=`header: "${I(t.key)}"`,C=g`
                cell: function render({ getValue }) {
                    return <UrlField value={${l("getValue<any>()",void 0,Array.isArray(t.accessor)?t.accessor:void 0," + ")}} />
                }
            `;return t.multiple&&(a.push(["TagField","@refinedev/mantine"]),C=`
                    cell: function render({ getValue }) {
                        return (
                            <Group spacing="xs">
                                {getValue<any[]>()?.map((item, index) => (
                                    <TagField value={${l("item",void 0,t.accessor," + ")}} key={index} />
                                ))}
                            </Group>
                        )
                    }
                `),`
                {
                    ${k},
                    ${S},
                    ${N},
                    ${C}
                }
            `}},T=t=>{if((t==null?void 0:t.type)==="boolean"){a.push(["BooleanField","@refinedev/mantine"]);let k=`id: "${t.key}"`,S=X(t),N=`header: "${I(t.key)}"`,C=g`
                cell: function render({ getValue }) {
                    return <BooleanField value={${l("getValue<any>()",void 0,Array.isArray(t.accessor)?t.accessor:void 0," + ")}} />
                }
            `;return t.multiple&&(C=`
                    cell: function render({ getValue }) {
                        return (
                            <Group spacing="xs">
                                {getValue<any[]>()?.map((item, index) => (
                                    <BooleanField value={${l("item",void 0,t.accessor," + ")}} key={index} />
                                ))}
                            </Group>
                        )
                    }
                `),`
                {
                    ${k},
                    ${S},
                    ${N},
                    ${C}
                }
            `}},L=t=>{if(t.type==="date"){a.push(["DateField","@refinedev/mantine"]);let k=`id: "${t.key}"`,S=X(t),N=`header: "${I(t.key)}"`,C=g`
                cell: function render({ getValue }) {
                    return <DateField value={${l("getValue<any>()",void 0,Array.isArray(t.accessor)?t.accessor:void 0,' + " " + ')}} />
                }
            `;return t.multiple&&(C=`
                    cell: function render({ getValue }) {
                        return (
                            <Group spacing="xs">
                                {getValue<any[]>()?.map((item, index) => (
                                    <DateField value={${l("item",void 0,t.accessor," + ")}} key={index} />
                                ))}
                            </Group>
                        )
                    }
                `),`
                {
                    ${k},
                    ${S},
                    ${N},
                    ${C}
                }
            `}},p=t=>{if((t==null?void 0:t.type)==="richtext"){a.push(["MarkdownField","@refinedev/mantine"]);let k=`id: "${t.key}"`,S=X(t),N=`header: "${I(t.key)}"`,C=g`
                cell: function render({ getValue }) {
                    return <MarkdownField value={(${l("getValue<string>()",void 0,Array.isArray(t.accessor)?t.accessor:void 0)})?.slice(0, 80) + "..." } />
                }
            `;return t.multiple&&(C=`
                    cell: function render({ getValue }) {
                        return (
                            <Group spacing="xs">
                                {getValue<string[]>()?.map((item, index) => (
                                    <MarkdownField value={${l("item",void 0,t.accessor," + ")}} key={index} />
                                ))}
                            </Group>
                        )
                    }
                `),`
                {
                    ${k},
                    ${S},
                    ${N},
                    ${C}
                }
            `}},P=t=>{if(t&&(t.type==="text"||t.type==="number")){let k=`id: "${t.key}"`,S=X(t),N=`header: "${I(t.key)}"`,C="";return t.multiple&&(a.push(["TagField","@refinedev/mantine"]),C=`
                    cell: function render({ getValue }) {
                        return (
                            <Group spacing="xs">
                                {getValue<any[]>()?.map((item, index) => (
                                    <TagField value={${l("item",void 0,t.accessor,' + " " + ')}} key={index} />
                                ))}
                            </Group>
                        )
                    }
                `),!t.multiple&&Array.isArray(t.accessor)&&(C=`
                    cell: function render({ getValue }) {
                        return (
                            <>{${l("getValue()",t.key,t.accessor)}}</>
                        );
                    }
                `),`
                {
                    ${k},
                    ${S},
                    ${N},
                    ${C}
                }
            `}},{canEdit:A,canShow:s,canDelete:x}=r!=null?r:{};A&&a.push(["EditButton","@refinedev/mantine"]),s&&a.push(["ShowButton","@refinedev/mantine"]),x&&a.push(["DeleteButton","@refinedev/mantine"]);let M=A||s||x?g`
    {
        id: "actions",
        accessorKey: "id",
        header: "Actions",
        cell: function render({ getValue }) {
            return (
                <Group spacing="xs" noWrap>
                    ${s?g`
                    <ShowButton
                        hideText
                        recordItemId={getValue() as string}
                    />
                    `:""}
                    ${A?g`<EditButton
                        hideText
                        recordItemId={getValue() as string}
                    />`:""}
                    ${x?g`
                    <DeleteButton
                        hideText
                        recordItemId={getValue() as string}
                    />
                    `:""}
                </Group>
            );
        },
    },
        `:"",e=n.map(t=>{switch(t==null?void 0:t.type){case"text":case"number":return P(t);case"richtext":return p(t);case"email":return b(t);case"image":return F(t);case"date":return L(t);case"boolean":return T(t);case"url":return $(t);case"relation":return h(t);default:return}});return _(a),g`
    import React from "react";
    ${j(a)}
    
    export const ${o}: React.FC<IResourceComponentsProps> = () => {
        const columns = React.useMemo<ColumnDef<any>[]>(() => [
            ${[...e,M].filter(Boolean).join(",")}
        ], []);

        const {
            getHeaderGroups,
            getRowModel,
            setOptions,
            refineCore: {
                setCurrent,
                pageCount,
                current,
                tableQueryResult: { data: tableData },
            },
        } = useTable({
            columns,
            ${i?`
            refineCoreProps: {
                resource: "${r.name}",
            }
            `:""}
        });

        ${f}

        setOptions((prev) => ({
            ...prev,
            meta: {
                ...prev.meta,
                ${m.join(", ")}
            },
        }));

        return (
            <List>
                <ScrollArea>
                    <Table highlightOnHover>
                        <thead>
                            {getHeaderGroups().map((headerGroup) => (
                                <tr key={headerGroup.id}>
                                    {headerGroup.headers.map((header) => {
                                        return (
                                            <th key={header.id}>
                                                {!header.isPlaceholder && (
                                                    flexRender(
                                                        header.column
                                                            .columnDef
                                                            .header,
                                                        header.getContext(),
                                                    )
                                                )}
                                            </th>
                                        );
                                    })}
                                </tr>
                            ))}
                        </thead>
                        <tbody>
                            {getRowModel().rows.map((row) => {
                                return (
                                    <tr key={row.id}>
                                        {row.getVisibleCells().map((cell) => {
                                            return (
                                                <td key={cell.id}>
                                                    {flexRender(
                                                        cell.column.columnDef.cell,
                                                        cell.getContext(),
                                                    )}
                                                </td>
                                            );
                                        })}
                                    </tr>
                                );
                            })}
                        </tbody>
                    </Table>
                </ScrollArea>    
                <br />
                <Pagination
                    position="right"
                    total={pageCount}
                    page={current}
                    onChange={setCurrent}
                />
            </List>
        );
    };
    `},ge=W({type:"list",additionalScope:[["@refinedev/mantine","RefineMantine",et],["@refinedev/react-table","RefineReactTable",rt],["@mantine/core","MantineCore",tt],["@tanstack/react-table","TanstackReactTable",nt]],codeViewerComponent:J,loadingComponent:Z,errorComponent:q,renderer:Ke});var ot=v(require("@refinedev/mantine")),at=v(require("@mantine/core"));var ze=({resource:r,fields:n,isCustomPage:i})=>{var A;let o=O((A=r.label)!=null?A:r.name,"create"),c=[["Create","@refinedev/mantine"],["useForm","@refinedev/mantine"]],a={},f=n.filter(s=>(s==null?void 0:s.relation)&&!(s!=null&&s.fieldable)&&(s==null?void 0:s.resource)).filter(Boolean).map(s=>{if((s==null?void 0:s.relation)&&!s.fieldable&&s.resource)return c.push(["useSelect","@refinedev/mantine"]),`
                const { selectProps: ${R(s.key,"SelectProps")} } =
                useSelect({
                    resource: "${s.resource.name}",
                    ${ie(s)}
                });
            `}).filter(Boolean),m=s=>{if(s.relation&&s.resource){a={...a,[s.key]:s.multiple?[]:s.accessor?{[typeof s.accessor=="string"?s.accessor:s.accessor[0]]:""}:""};let x=R(s.key,"SelectProps");return s.multiple?(c.push(["MultiSelect","@mantine/core"]),g`
                    <MultiSelect mt="sm" label="${I(s.key)}" {...getInputProps("${V(s.key,void 0)}")} {...${x}} filterDataOnExactSearchMatch={undefined} />
                `):(c.push(["Select","@mantine/core"]),g`
                <Select mt="sm" label="${I(s.key)}" {...getInputProps("${V(s.key,void 0,s.accessor)}")} {...${x}} />
            `)}},h=s=>{if(s.type==="text"||s.type==="email"||s.type==="date"||s.type==="url")return Y(s.key)||(c.push(["TextInput","@mantine/core"]),a={...a,[s.key]:s.multiple?[]:""},s.multiple)?void 0:g`
                <TextInput mt="sm" label="${I(s.key)}" {...getInputProps("${V(s.key,void 0,s.accessor)}")} />
            `},F=s=>{if(s.type==="image")return g`
            {/* 
                Dropzone component is not included in "@refinedev/mantine" package.
                To use a <Dropzone> component, you can follow the official documentation for Mantine.
                
                Docs: https://mantine.dev/others/dropzone/
            */}
            `},b=s=>{if(s.type==="boolean")return c.push(["Checkbox","@mantine/core"]),a={...a,[s.key]:s.multiple?[]:""},s.multiple?void 0:g`
                <Checkbox mt="sm" label="${I(s.key)}" {...getInputProps("${V(s.key,void 0,s.accessor)}", { type: 'checkbox' })} />
            `},$=s=>{if(s.type==="date"){let x=h(s);return`
                {/* 
                    DatePicker component is not included in "@refinedev/mantine" package.
                    To use a <DatePicker> component, you can follow the official documentation for Mantine.
                    
                    Docs: https://mantine.dev/dates/date-picker/
                */}
                ${x!=null?x:""}
            `}},T=s=>{if(s.type==="richtext")return c.push(["Textarea","@mantine/core"]),a={...a,[s.key]:s.multiple?[]:""},s.multiple?void 0:g`
                <Textarea mt="sm" label="${I(s.key)}" autosize {...getInputProps("${V(s.key,void 0,s.accessor)}")} />
            `},L=s=>{if(s.type==="number")return Y(s.key)||(c.push(["NumberInput","@mantine/core"]),a={...a,[s.key]:s.multiple?[]:""},s.multiple)?void 0:g`
                <NumberInput mt="sm" label="${I(s.key)}" {...getInputProps("${V(s.key,void 0,s.accessor)}")}/>
            `},p=s=>{if(s)return g`
                ${s}
        `},P=n.map(s=>{switch(s==null?void 0:s.type){case"url":case"text":case"email":return p(h(s));case"number":return p(L(s));case"richtext":return p(T(s));case"image":return p(F(s));case"date":return p($(s));case"boolean":return p(b(s));case"relation":return p(m(s));default:return}});return _(c),g`
    ${j(c)}
    
    export const ${o} = () => {
        const { getInputProps, saveButtonProps, setFieldValue, refineCore: { formLoading } } = useForm({
            initialValues: ${JSON.stringify(a)},
            ${i?`refineCoreProps: {
                        resource: "${r.name}",
                        action: "create",  
                    }`:""}
        });
    
        ${f}

        return (
            <Create isLoading={formLoading} saveButtonProps={saveButtonProps}>
                ${P.join("")}
            </Create>
        );
    };
    `},Ie=W({type:"create",additionalScope:[["@refinedev/mantine","RefineMantine",ot],["@mantine/core","MantineCore",at]],codeViewerComponent:J,loadingComponent:Z,errorComponent:q,renderer:ze});var st=v(require("@refinedev/mantine")),it=v(require("@mantine/core"));var je=({resource:r,fields:n,isCustomPage:i,id:o})=>{var x,M;let c=O((x=r.label)!=null?x:r.name,"edit"),a=R((M=r.label)!=null?M:r.name,"Data"),u=[["Edit","@refinedev/mantine"],["useForm","@refinedev/mantine"]],f={},h=n.filter(e=>(e==null?void 0:e.relation)&&!(e!=null&&e.fieldable)&&(e==null?void 0:e.resource)).filter(Boolean).map(e=>{if((e==null?void 0:e.relation)&&!e.fieldable&&e.resource){u.push(["useSelect","@refinedev/mantine"]);let y=l(a,e.key,e.accessor,!1);e.multiple&&e.accessor&&(y=`${l(a,e.key)}?.map((item: any) => ${l("item",void 0,e.accessor)})`);let t="";return e.multiple&&e.accessor&&(t=`React.useEffect(() => {
                        setFieldValue("${e.key}", ${y});
                    }, [${a}]);`),`
                const { selectProps: ${R(e.key,"SelectProps")} } =
                useSelect({
                    resource: "${e.resource.name}",
                    defaultValue: ${y},
                    ${ie(e)}
                });

                ${t}
            `}}).filter(Boolean),F=e=>{if(e.relation&&e.resource){f={...f,[e.key]:e.multiple?[]:e.accessor?{[typeof e.accessor=="string"?e.accessor:e.accessor[0]]:""}:""};let y=R(e.key,"SelectProps");return e.multiple?(u.push(["MultiSelect","@mantine/core"]),g`
                    <MultiSelect mt="sm" label="${I(e.key)}" {...getInputProps("${V(e.key,void 0)}")} {...${y}} filterDataOnExactSearchMatch={undefined} />
                `):(u.push(["Select","@mantine/core"]),g`
                <Select mt="sm" label="${I(e.key)}" {...getInputProps("${V(e.key,void 0,e.accessor)}")} {...${y}} />
            `)}},b=e=>{if(e.type==="text"||e.type==="email"||e.type==="date"||e.type==="url"){if(u.push(["TextInput","@mantine/core"]),f={...f,[e.key]:e.multiple?[]:""},e.multiple){u.push(["Group","@mantine/core"]);let y=V(e.key,"${index}",e.accessor);return`
                <Group spacing="xs">
                    {${l(a,e.key)}?.map((item: any, index: number) => (
                        <TextInput mt="sm" key={index} label={\`${I(e.key)} \${index + 1} \`} {...getInputProps(\`${y}\`)} />
                    ))}
                </Group>
                `}return g`
                <TextInput mt="sm" ${Y(e.key)?"disabled":""} label="${I(e.key)}" {...getInputProps("${V(e.key,void 0,e.accessor)}")} />
            `}},$=e=>{if(e.type==="image")return g`
            {/* 
                Dropzone component is not included in "@refinedev/mantine" package.
                To use a <Dropzone> component, you can follow the official documentation for Mantine.
                
                Docs: https://mantine.dev/others/dropzone/
            */}
            `},T=e=>{if(e.type==="boolean"){if(u.push(["Checkbox","@mantine/core"]),f={...f,[e.key]:e.multiple?[]:""},e.multiple){u.push(["Group","@mantine/core"]);let y=V(e.key,"${index}",e.accessor);return`
                <Group spacing="xs">
                    {${l(a,e.key)}?.map((item: any, index: number) => (
                        <Checkbox mt="sm" key={index} label={\`${I(e.key)} \${index + 1} \`} {...getInputProps(\`${y}\`, { type: 'checkbox' })} />
                    ))}
                </Group>
                `}return g`
                <Checkbox mt="sm" label="${I(e.key)}" {...getInputProps("${V(e.key,void 0,e.accessor)}", { type: 'checkbox' })} />
            `}},L=e=>{if(e.type==="date")return`
                {/* 
                    DatePicker component is not included in "@refinedev/mantine" package.
                    To use a <DatePicker> component, you can follow the official documentation for Mantine.
                    
                    Docs: https://mantine.dev/dates/date-picker/
                */}
                ${b(e)}
            `},p=e=>{if(e.type==="richtext"){if(u.push(["Textarea","@mantine/core"]),f={...f,[e.key]:e.multiple?[]:""},e.multiple){u.push(["Group","@mantine/core"]);let y=V(e.key,"${index}",e.accessor);return`
                <Group spacing="xs">
                    {${l(a,e.key)}?.map((item: any, index: number) => (
                        <Textarea mt="sm" key={index} label={\`${I(e.key)} \${index + 1} \`} {...getInputProps(\`${y}\`)} />
                    ))}
                </Group>
                `}return g`
                <Textarea mt="sm" label="${I(e.key)}" autosize {...getInputProps("${V(e.key,void 0,e.accessor)}")} />
            `}},P=e=>{if(e.type==="number"){if(u.push(["NumberInput","@mantine/core"]),f={...f,[e.key]:e.multiple?[]:""},e.multiple){u.push(["Group","@mantine/core"]);let y=V(e.key,"${index}",e.accessor);return`
                <Group spacing="xs">
                    {${l(a,e.key)}?.map((item: any, index: number) => (
                        <NumberInput mt="sm" key={index} label={\`${I(e.key)} \${index + 1} \`} {...getInputProps(\`${y}\`)} />
                    ))}
                </Group>
                `}return g`
                <NumberInput mt="sm" ${Y(e.key)?"disabled":""} label="${I(e.key)}" {...getInputProps("${V(e.key,void 0,e.accessor)}")}/>
            `}},A=e=>{if(e)return g`
                ${e}
        `},s=n.map(e=>{switch(e==null?void 0:e.type){case"url":case"text":case"email":return A(b(e));case"number":return A(P(e));case"richtext":return A(p(e));case"image":return A($(e));case"date":return A(L(e));case"boolean":return A(T(e));case"relation":return A(F(e));default:return}});return _(u),g`
    ${j(u)}
    
    export const ${c} = () => {
        const { getInputProps, saveButtonProps, setFieldValue, refineCore: { queryResult } } = useForm({
            initialValues: ${JSON.stringify(f)},
            ${i?`refineCoreProps: {
                        resource: "${r.name}",
                        id: ${o},
                        action: "edit",  
                    }`:""}
        });
    
        const ${a} = queryResult?.data?.data;
    
        ${h}

        return (
            <Edit saveButtonProps={saveButtonProps}>
                ${s.join("")}
            </Edit>
        );
    };
    `},he=W({type:"edit",additionalScope:[["@refinedev/mantine","RefineMantine",st],["@mantine/core","MantineCore",it]],codeViewerComponent:J,loadingComponent:Z,errorComponent:q,renderer:je});var ct=({action:r,id:n,...i})=>{let{action:o,id:c}=(0,Rr.useResource)();switch(r!=null?r:o){case"show":return ue.default.createElement(fe,{...i,id:n!=null?n:c});case"create":return ue.default.createElement(Ie,{...i,id:n!=null?n:c});case"edit":return ue.default.createElement(he,{...i,id:n!=null?n:c});default:return ue.default.createElement(ge,{...i,id:n!=null?n:c})}};
//# sourceMappingURL=mantine.js.map