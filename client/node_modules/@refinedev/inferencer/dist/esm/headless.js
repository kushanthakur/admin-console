import se from"react";import{useResource as Qr}from"@refinedev/core";import K from"react";import{useResource as ar}from"@refinedev/core";var lr=/(image|photo|avatar|url|logo|cover|thumbnail|icon)/i,ie=(e,t)=>{let i=["name","label","title","count","content","username","nickname","login","firstName","lastName","url"];lr.test(e)&&i.unshift("url");let o=i.find(p=>p in t&&!!t[p]);if(o)return o==="firstName"&&"lastName"in t?["firstName","lastName"]:o};import{pickNotDeprecated as mr}from"@refinedev/core";function ce(e,t,i){if(t)return t;let o=i==null?void 0:i.find(c=>c.name===e),p=mr(o==null?void 0:o.meta,o==null?void 0:o.options);return p!=null&&p.dataProviderName?p.dataProviderName:"default"}var J=e=>{var t;return(t=e==null?void 0:e.options)==null?void 0:t.dataProviderName};var pe=e=>{let t=[...e].filter(Boolean).sort((i,o)=>(o.priority||0)-(i.priority||0))[0];return t||null};import dr from"prettier/standalone";import yr from"prettier/parser-typescript";var ue=e=>{try{return dr.format(e,{parser:"typescript",plugins:[yr],arrowParens:"always",trailingComma:"all",semi:!0,tabWidth:4,printWidth:80})}catch(t){return console.warn("Formatting error in inferencer",t),e}};var le=e=>e.replace(/ {2,}/g," ").replace(/\n{2,}/g,`
`);var me=/(-id|-ids|_id|_ids|Id|Ids|ID|IDs)(\[\])?$/,Te=(e,t)=>{let i=me.test(e),o=typeof t=="string"||typeof t=="number",p=Array.isArray(t)&&t.every(c=>typeof c=="string"||typeof c=="number");return i&&o||i&&p?{key:e,relation:!0,multiple:!!p,type:"relation",priority:1}:!1};var O=e=>e.replace(me,"");var y=e=>O(e).replace(/([a-z])([A-Z])/g,"$1 $2").replace(/_/g," ").replace(/-/g," ").split(" ").map(u=>u.charAt(0).toUpperCase()+u.slice(1)).join(" ");var de=e=>e.replace(/export\s+(const|let|var|type|interface|function|class)\s+(\w+)\s*(=|:)\s*/g,"$1 $2 = ").split(`
`).filter(p=>!p.trim().startsWith("export default")).join(`
`);var Le=/import(?:(?:(?:[ \n\t]+([^ *\n\t\{\},]+)[ \n\t]*(?:,|[ \n\t]+))?([ \n\t]*\{(?:[ \n\t]*[^ \n\t"'\{\}]+[ \n\t]*,?)+\})?[ \n\t]*)|[ \n\t]*\*[ \n\t]*as[ \n\t]+([^ \n\t\{\}]+)[ \n\t]+)from[ \n\t]*(?:['"])([^'"\n]+)(?:['"])(?:;?)/g,gr=/import[ \n\t](?:['"])([^'"\n]+)(?:['"])(?:;?)/g,fr=/((?:\w|\s|_)*)( as )((?:\w|\s|_)*)( |,)?/g,ye=(e,t={})=>{let i=e.matchAll(Le),o=new Set;for(let p of i){let[,c,u,f,m]=p;if(m in t){let h=t[m];if(m==="react")continue;c&&o.add(`const { default: ${c} } = ${h};`),u&&o.add(`const${u.replace(fr,"$1: $3$4")} = ${h};`),f&&o.add(`const ${f} = ${h};`)}}return le(`
    ${Array.from(o).join(`
`)}
    ${e.replace(Le,"").replace(gr,"")}
    `)};import ae from"pluralize";var ge=(e,t)=>e?t.find(o=>{let p=O(e.key);return o.name===p||o.name===(ae.isPlural(p)?p:ae.plural(p))||o.name===(ae.isSingular(p)?p:ae.singular(p))}):void 0;import hr from"pluralize";var H=(e,t,i="Inferred")=>{let o=e.replace(/[^a-zA-Z0-9]/g," "),p=hr.singular(o),u=y(p).replace(/ /g,"")||i,f=t.charAt(0).toUpperCase()+t.slice(1);return/^[a-zA-Z]/.test(u)?`${u}${f}`:`${f}${u}`};var $r=e=>e?Array.isArray(e)?e.join(""):typeof e=="string"?e:typeof e=="object"||typeof e=="function"?e.toString():typeof e=="number"?String(e):typeof e=="boolean"&&e?"true":e:"",g=(e,...t)=>e.reduce((o,p,c)=>`${o}${p}${$r(t[c])}`,"").trim();var fe=(e,t)=>`
    ${e!=null?e:""}
    
    render(typeof ${t} !== "undefined" ? <${t} /> : <></>);
    `;var he=e=>e==null?void 0:e.replace(/(\/\* hidden-start \*\/)(.|\n)*?(\/\* hidden-end \*\/)/g,"");var xr=/^[a-zA-Z_$][a-zA-Z_$0-9]*$/,$e=e=>xr.test(e);function xe(e,t,i){let o=`${e}`;return t&&(o+="?.",$e(t)?o+=t:o+=`['${t}']`),i&&(o+="?.",$e(i)?o+=i:o+=`['${i}']`),o}function br(e,t,i){return(i!=null?i:[]).map(p=>xe(e,t,p))}var l=(e,t,i,o=' + " " + ')=>Array.isArray(i)?o?br(e,t,i).join(o):xe(e,t,i[0]):xe(e,t,i),V=(e,t,i)=>{let o=e;return t&&(o+=`.${t}`),i&&(Array.isArray(i)?o+=`.${i[0]}`:o+=`.${i}`),o};var M=e=>{let t=e.reduce((o,[p,c,u])=>(o[c]||(o[c]=[]),o[c].includes(p)||(u?o[c].push([p,!0]):o[c].push(p)),o),{});return Object.entries(t).map(([o,p])=>{let c=p.find(h=>Array.isArray(h)&&h[1]),u=p.filter(h=>typeof h=="string"),f=c?`${c[0]}`:"",m=u.length?`{ ${u.join(", ")} }`:"";return`import ${f}${f&&m?", ":""}${m} from "${o}";`})};import Ve from"pluralize";var E=(e="")=>Ve.isSingular(e)?e:Ve.singular(e);import Ee from"pluralize";var j=(e="")=>Ee.isPlural(e)?e:Ee.plural(e);var Ir=/^id$/i,ee=e=>Ir.test(e);var re=e=>e.relationInfer&&e.relationInfer.accessor?Array.isArray(e.relationInfer.accessor)?`optionLabel: "${e.relationInfer.accessor[0]}",`:e.relationInfer.accessor!=="title"?`optionLabel: "${e.relationInfer.accessor}",`:"":"";var _=e=>{};var F=(e,t="")=>{if(Number.isInteger(Number(e)))return t.charAt(0).toLowerCase()+t.slice(1)+e;let o=e.replace(/^\d+/,"").replace(/[^a-zA-Z0-9]/g,"-"),p=y(o).replace(/ /g,"");return`${p.charAt(0).toLowerCase()+p.slice(1)}${t.charAt(0).toUpperCase()+t.slice(1)}`};var Pe=e=>{let t=(i,o,p,c=t)=>{let u=e.map(m=>m(i,o,p,c));return pe(u)};return t};var De=e=>(i,o,p,c,u)=>e.reduce((f,m)=>m(f,o,p,c,u),i);var Oe=(e,t,i,o)=>{let p=Array.isArray(t),c=Array.isArray(t)&&t.every(u=>typeof u=="string"||typeof u=="number");if(p){if(!c){let f=o(e,t[0],i,o);return f?{...f,key:e,multiple:!0,priority:1}:!1}let u=o(e,t[0],i,o)||{type:"string"};return{key:e,multiple:!0,priority:1,type:u==null?void 0:u.type}}return!1};var je=(e,t)=>typeof t=="boolean"?{key:e,type:"boolean"}:!1;import He from"dayjs";var vr=/(_at|_on|At|On|AT|ON)(\[\])?$/,kr=["/",":","-","."],ze=(e,t)=>{let i=vr.test(e)&&He(t).isValid(),o=typeof t=="string"&&He(t).isValid();return typeof t=="string"&&kr.some(c=>t.includes(c))&&(i||o)?{key:e,type:"date",priority:1}:!1};var Cr=/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,Ke=(e,t)=>typeof t=="string"&&Cr.test(t)?{key:e,type:"email",priority:1}:!1;var Fr=/\.(gif|jpe?g|tiff?|png|webp|bmp|svg)$/i,Me=(e,t)=>typeof t=="string"&&Fr.test(t)?{key:e,type:"image",priority:2}:!1;var _e=(e,t)=>typeof t>"u"||t===null?null:!1;var Be=(e,t)=>{let i=typeof t=="string"&&t.length>0,o=!isNaN(t);return i&&o||typeof t=="number"?{key:e,type:"number"}:!1};var Ar=/id$/i,qe=(e,t,i,o)=>{let p=t!==null,c=!Array.isArray(t);if(p&&c&&typeof t=="object"){if(Object.keys(t).length===1&&Ar.test(Object.keys(t)[0]))return{key:e,type:"relation",relation:!0,accessor:"id",priority:1};let m=ie(e,t);if((m?m.length>0:!1)&&m){let C=m&&Array.isArray(m)?m[0]:m,I=o(C,t[C],t,o);if(I){let $=Array.isArray(m)?m.map(x=>I.accessor?`${x}.${Array.isArray(I.accessor)?I.accessor[0]:I.accessor}`:x):I.accessor?Array.isArray(I.accessor)?`${m}.${I.accessor[0]}`:`${m}.${I.accessor}`:m;return{...I,fieldable:!0,key:e,accessor:$,priority:1}}}return{key:e,fieldable:!1,type:"object",priority:1}}return!1};var Ue=(e,t)=>typeof t=="string"&&t.length>100?{key:e,type:"richtext",priority:1}:!1;var We=(e,t)=>typeof t=="string"?{key:e,type:"text"}:!1;var wr=/^(https?|ftp):\/\/(-\.)?([^\s/?\.#-]+\.?)+(\/[^\s]*)?$/i,Ze=(e,t)=>typeof t=="string"&&wr.test(t)?{key:e,type:"url",priority:1}:!1;var Ge=[Oe,je,ze,Ke,Me,_e,Be,qe,Te,Ue,We,Ze];var Ye=(e,t,i,o)=>e.map(c=>{if(!c.relation&&(c.type==="text"||c.type==="richtext"||c.type==="number")&&!c.canRelation){let u=/^[a-z0-9-]+$/,f=$=>u.test(`${$}`),m=c.key.toLowerCase()!=="id";return!(!c.accessor||typeof c.accessor=="string")||!m?c:(c.multiple?o[c.key]:[o[c.key]]).every($=>f(c.accessor?$[c.accessor]:$))?{...c,canRelation:!0}:c}return c});var Rr=/(image|photo|avatar|cover|thumbnail|icon)/i,Qe=e=>e.map(i=>i.type==="url"&&Rr.test(i.key)?{...i,type:"image"}:i);var Xe=(e,t)=>e.map(o=>{let p=ge(o,t);return p?{...o,relation:!0,type:"relation",resource:p}:o});var Je=(e,t,i,o,p)=>e.map(u=>{if(u.relation&&u.type==="relation"&&!u.resource){let f=u.accessor?o[u.key][u.accessor]:o[u.key],m=p(u.key,f,o,p);if(m&&m.type!=="relation")return{...u,fieldable:!0,relation:!1,type:m.type,canRelation:!0}}return u});var er=[Qe,Xe,Je,Ye];import te,{useEffect as Sr}from"react";import Nr,{defaultProps as Tr}from"prism-react-renderer";import Lr from"prism-react-renderer/themes/vsDark";var be=({code:e,wrapperProps:t})=>(Sr(()=>{var o;let i=document.createElement("style");i.appendChild(document.createTextNode(`
                #code-highlight::-webkit-scrollbar {-webkit-appearance: none; height: 7px; width: 7px;}
                #code-highlight::-webkit-scrollbar-thumb {background-color: #666b7a;}
                #code-highlight::-webkit-scrollbar-corner {background-color: rgb(30, 30, 30);}
                `)),(o=document.getElementById("code-highlight"))==null||o.appendChild(i)},[]),te.createElement("div",{id:"code-highlight",style:{maxHeight:"75vh",height:"100%",overflow:"auto",backgroundColor:"rgb(30, 30, 30)"},...t!=null?t:{}},te.createElement(Nr,{...Tr,theme:Lr,code:e,language:"tsx"},({className:i,style:o,tokens:p,getLineProps:c,getTokenProps:u})=>te.createElement("pre",{className:i,style:{...o,padding:"14px 14px 14px 14px",margin:"0",width:"100%",boxSizing:"border-box"}},p.map((f,m)=>te.createElement("div",{key:m,...c({line:f,key:m})},f.map((h,C)=>te.createElement("span",{key:C,...u({token:h,key:C})}))))))));import z from"react";import*as Vr from"@refinedev/core";import{LivePreview as Er,LiveProvider as Pr}from"@aliemir/react-live";var rr=[["react","React",z],["@refinedev/core","RefineCore",Vr]],Ie=z.createContext({}),ve=({fetchError:e,code:t,additionalScope:i,errorComponent:o})=>{var f;let p=(f=t&&de(ye(t,[...rr,...i!=null?i:[]].reduce((m,[h,C,I,$])=>$?m:{...m,[h]:C},{}))))!=null?f:"",c=z.useMemo(()=>({React:z,...z,...[...rr,...i!=null?i:[]].reduce((m,[h,C,I])=>({...m,[C]:I}),{})}),[i]),u=z.useMemo(()=>()=>{let{error:h}=z.useContext(Ie);return o?z.createElement(o,{error:h?`<p>An error occured while rendering the generated component.You can check the generated code from the below "Show Code" button and fix the error manually.</p>
                                    <p>If you think this is a bug, please report the issue at <a target="_blank" rel="noopener noreferrer" href="https://github.com/refinedev/refine/issues">https://github.com/refinedev/refine/issues</a></p>
                                    <p>Exception:</p>
                                    <code>${h}</code>`:typeof e=="string"?e:e?`<p>Something went wrong while fetching the resource data.</p>
                                    <p>To learn more about the Inferencer, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`:void 0}):null},[o,e]);return z.createElement(Pr,{Context:Ie,code:p,scope:c,noInline:!0},!e&&z.createElement(Er,{Context:Ie}),z.createElement(u,null))};import Y from"react";import{useDataProvider as Dr,useResource as Or}from"@refinedev/core";var tr=(e,t,i)=>{let{resource:o,id:p,resources:c}=Or(t),u=i!=null?i:p,f=Dr(),[m,h]=Y.useState(void 0),[C,I]=Y.useState(void 0),[$,x]=Y.useState(!0),[w,a]=Y.useState(!1),A=Y.useCallback(async R=>{var S,T;let s=(S=J(o))!=null?S:ce(o==null?void 0:o.name,void 0,c),b=f(s);a(!0),h(void 0);try{if((e==="list"||e==="create")&&o){let r=(T=(await b.getList({resource:o==null?void 0:o.name})).data)==null?void 0:T[0];r||h(`<p>No records/data found for resource "${o==null?void 0:o.name}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),I(r),setTimeout(()=>{a(!1)},500)}if((e==="edit"||e==="show")&&R&&o){let r=(await b.getOne({resource:o==null?void 0:o.name,id:R})).data;r||h(`<p>No records/data found for resource "${o==null?void 0:o.name}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),I(r),setTimeout(()=>{a(!1)},500)}}catch(P){console.warn("An error occured while fetching the resource data. Please check the error message below:",P),h(`<p>Something went wrong while fetching the resource data.</p>
                    <p>Please check your data provider and API for resource "${o==null?void 0:o.name}".</p>
                    <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),setTimeout(()=>{a(!1)},500)}},[e,f,o,c]);return Y.useEffect(()=>{x(!1),!w&&!C&&A(u)},[A,u]),{data:C,loading:w,initial:$,error:m}};import ne from"react";import{useDataProvider as jr}from"@refinedev/core";import{get as nr}from"lodash";var or=({record:e,fields:t,infer:i})=>{let o=jr(),[p,c]=ne.useState([]),[u,f]=ne.useState(!0),[m,h]=ne.useState(!1),C=ne.useCallback(async I=>{console.groupCollapsed("@refinedev/inferencer is trying to detect relations");let $=[];h(!0);try{let x=I.map(async a=>{if(a&&(a.relation||a.canRelation)&&e){let A=J(a.resource),R=o(A),s=Array.isArray(a.accessor)?void 0:a.multiple?e[a.key].map(b=>a.accessor?nr(b,a.accessor):b)[0]:a.accessor?nr(e[a.key],a.accessor):e[a.key];if(s&&a.resource)try{let{data:b}=await R.getOne({resource:a.resource.name,id:s});$.push({status:"success",resource:a.resource.name,field:a.key});let S=i("__",b,{},i);return{...a,relationInfer:S}}catch{return $.push({status:"error",resource:a.resource.name,field:a.key}),{...a,relationInfer:null}}if(s){let b,S;try{let{data:r}=await R.getOne({resource:j(O(a.key)),id:s});$.push({status:"success",resource:j(O(a.key)),field:a.key}),b=r,S=!0}catch{$.push({status:"error",resource:j(O(a.key)),field:a.key});try{let{data:v}=await R.getOne({resource:E(O(a.key)),id:s});$.push({status:"success",resource:E(O(a.key)),field:a.key}),b=v,S=!1}catch{return $.push({status:"error",resource:E(O(a.key)),field:a.key}),{...a,relationInfer:null}}}let T=i("__",b,{},i),P=O(a.key);return{...a,relation:!0,type:"relation",resource:{name:S?j(P):E(P)},fieldable:!1,canRelation:void 0,relationInfer:T}}return{...a,relationInfer:null}}return a}),w=await Promise.all(x);c(w.filter(a=>a)),setTimeout(()=>{h(!1)},500)}catch{setTimeout(()=>{h(!1)},500)}setTimeout(()=>{console.log(`Tried to detect relations with ${$.length} attempts and succeeded with ${$.filter(x=>x.status==="success").length} attempts.`),console.groupEnd()},500)},[o,e]);return ne.useEffect(()=>{f(!1),!m&&t&&t.length>0&&p.length===0&&C(t)},[C,m,t,C]),{fields:p,loading:m,initial:u}};var q=({type:e,additionalScope:t=[],customElements:i=[],fieldTransformers:o=[],renderer:p,loadingComponent:c,errorComponent:u,codeViewerComponent:f})=>{let m=Pe([...Ge,...i]),h=De([...er,...o]),C=({resourceName:$,fieldTransformer:x,id:w})=>{var n,d,L,D,B,Q;let{resource:a,resources:A}=ar($),{resource:R}=ar(),{data:s,loading:b,initial:S,error:T}=tr(e,$!=null?$:a==null?void 0:a.name,w),P=K.useMemo(()=>{if(s){let ur=Object.keys(s).map(X=>{let Re=s[X];return m(X,Re,s,m)}).filter(Boolean);if(a){let X=h(ur,A,a,s,m);return x?X.flatMap(Se=>{let Ne=x(Se);return Ne?[Ne]:[]}):X}return[]}return[]},[s,A,a,x]),{fields:r,loading:v}=or({record:s,fields:P,infer:m}),N=K.useMemo(()=>!b&&!v&&!S&&a?p({resource:a,resources:A,fields:r,infer:m,isCustomPage:a.name!==(R==null?void 0:R.name),id:w}):"",[a,A,r,b,v]);return K.createElement(K.Fragment,null,c&&(b||v)&&K.createElement(c,null),!b&&!v&&K.createElement(K.Fragment,null,K.createElement(ve,{fetchError:!b&&T?T:!b&&!S&&!s,code:fe(N,H((Q=(B=(D=(L=(n=a==null?void 0:a.meta)==null?void 0:n.label)!=null?L:(d=a==null?void 0:a.options)==null?void 0:d.label)!=null?D:a==null?void 0:a.label)!=null?B:a==null?void 0:a.name)!=null?Q:"Resource",e)),errorComponent:u,additionalScope:t}),f&&K.createElement(f,{code:he(N),loading:b||v})))};return({name:$,resource:x,fieldTransformer:w,id:a})=>K.createElement(C,{fieldTransformer:w,resourceName:x!=null?x:$,key:x!=null?x:$,id:a})};import ke from"react";var U=({error:e})=>e?ke.createElement("div",{style:{display:"flex",justifyContent:"center",alignItems:"center",minHeight:"300px",position:"relative"}},ke.createElement("div",{style:{position:"absolute",top:"50%",left:"50%",transform:"translate(-50%, -50%)"}},ke.createElement("div",{style:{fontSize:"1.5rem",fontWeight:"bold"},dangerouslySetInnerHTML:{__html:e!=null?e:""}}))):null;import oe from"react";var W=()=>{let[e,t]=oe.useState(0);return oe.useEffect(()=>{if(typeof window<"u"){let i=setInterval(()=>{t(o=>o===3?0:o+1)},300);return()=>{clearInterval(i)}}return()=>{}},[]),oe.createElement("div",{style:{display:"flex",justifyContent:"center",alignItems:"center",minHeight:"120px",position:"relative"}},oe.createElement("div",{style:{position:"absolute",top:"50%",left:"50%",transform:"translate(-50%, -50%)"}},oe.createElement("span",{style:{fontSize:"1rem",fontWeight:600}},"loading",".".repeat(e))))};import k from"react";import{IconCode as Hr,IconMessageCircle as zr,IconCopy as Kr,IconCheck as Mr}from"@tabler/icons";var _r=({visible:e,onClose:t,children:i})=>e?k.createElement("div",{style:{position:"fixed",top:0,left:0,right:0,bottom:0,zIndex:9999,backgroundColor:"rgba(0, 0, 0, 0.5)"}},k.createElement("div",{style:{position:"absolute",top:"50%",left:"50%",transform:"translate(-50%, -50%)",width:"80%",height:"80%",backgroundColor:"#fff",maxWidth:"700px",borderRadius:"4px",padding:"16px",paddingTop:"32px"}},k.createElement("div",{style:{position:"absolute",top:4,right:6,width:"32px",height:"32px",fontSize:"24px",lineHeight:"32px",cursor:"pointer",textAlign:"center"},onClick:t},"\xD7"),i)):null,Z=({code:e,loading:t})=>{let i=k.useMemo(()=>ue(e!=null?e:""),[e]),o=k.useRef(null),[p,c]=k.useState(!1),[u,f]=k.useState(!1),m=k.useCallback(()=>{f(!0)},[]),h=k.useCallback(()=>{f(!1)},[]);if(t)return null;let C=()=>{var I,$,x,w;(I=o==null?void 0:o.current)==null||I.select(),($=o==null?void 0:o.current)==null||$.setSelectionRange(0,Number.MAX_SAFE_INTEGER),typeof navigator<"u"&&(navigator.clipboard.writeText((w=(x=o==null?void 0:o.current)==null?void 0:x.value)!=null?w:""),c(!0),setTimeout(()=>{c(!1)},1e3))};return i?k.createElement(k.Fragment,null,k.createElement("div",{style:{position:"fixed",bottom:"12px",right:"64px"}},k.createElement("div",{style:{display:"flex",flexDirection:"row",alignItems:"center",justifyContent:"center",width:"100%",height:"100%",gap:"12px"}},k.createElement("button",{style:{backgroundColor:"#fff",border:"1px solid #e2e8f0",borderRadius:"4px",padding:"8px 16px",cursor:"pointer",display:"flex",fontFamily:"sans-serif",alignItems:"center"},onClick:m},k.createElement(Hr,{size:18}),k.createElement("span",{style:{marginLeft:"8px",fontSize:"14px",color:"#666B7A"}},"Show Code")),k.createElement("a",{href:"https://github.com/refinedev/refine/discussions/3046",target:"_blank",rel:"noreferrer",style:{backgroundColor:"#fff",border:"1px solid #e2e8f0",borderRadius:"4px",padding:"8px 16px",cursor:"pointer",display:"flex",alignItems:"center",textDecoration:"none",color:"#666B7A",fontFamily:"sans-serif"}},k.createElement(zr,{size:18}),k.createElement("span",{style:{marginLeft:"8px",fontSize:"14px",color:"#666B7A"}},"Give Feedback")))),k.createElement("div",{style:{height:"50px"}}),k.createElement(_r,{visible:u,onClose:h},k.createElement("div",{style:{display:"flex",flexDirection:"column",alignItems:"center",justifyContent:"space-between",width:"100%",height:"100%"}},k.createElement("div",{style:{display:"flex",flexDirection:"row",alignItems:"center",justifyContent:"center",width:"100%",height:"100%"}},k.createElement(be,{code:i,wrapperProps:{style:{width:"100%",maxHeight:"75vh",height:"100%",overflow:"auto",backgroundColor:"rgb(30, 30, 30)"}}}),k.createElement("textarea",{ref:o,defaultValue:(i!=null?i:"").replace(/\\n/g,`\r
`),id:"code-input",style:{padding:0,margin:0,width:0,height:0,opacity:0,border:"none",display:"block"}})),k.createElement("div",{style:{display:"flex",flexDirection:"column",alignItems:"flex-end",justifyContent:"center",paddingTop:"8px",width:"100%",height:"100%"}},k.createElement("button",{style:{backgroundColor:"#fff",border:"1px solid #e2e8f0",borderRadius:"4px",padding:"8px 16px",cursor:"pointer",display:"flex",alignItems:"center"},onClick:C},p?k.createElement(Mr,{size:18}):k.createElement(Kr,{size:18}),k.createElement("span",{style:{marginLeft:"8px",fontSize:"14px",color:"#666B7A"}},p?"Copied":"Copy")))))):null};var sr=({resource:e,fields:t,isCustomPage:i,id:o})=>{var r,v,N;let p=H((r=e.label)!=null?r:e.name,"show"),c="record",u=[["React","react",!0],["useShow","@refinedev/core"],["useResource","@refinedev/core"],["useNavigation","@refinedev/core"]],m=t.filter(n=>(n==null?void 0:n.relation)&&!(n!=null&&n.fieldable)&&(n==null?void 0:n.resource)).filter(Boolean).map(n=>{if((n==null?void 0:n.relation)&&!n.fieldable&&n.resource){if(n.multiple){u.push(["useMany","@refinedev/core"]);let d=l(c,n.key);return n.accessor&&(d=`${l(c,n.key)}?.map((item: any) => ${l("item",void 0,n.accessor)})`),`
                const { data: ${F(n.key,"Data")}, isLoading: ${F(n.key,"IsLoading")} } =
                useMany({
                    resource: "${n.resource.name}",
                    ids: ${d} || [],
                    queryOptions: {
                        enabled: !!${c},
                    },
                });
                `}return u.push(["useOne","@refinedev/core"]),`
                const { data: ${F(n.key,"Data")}, isLoading: ${F(n.key,"IsLoading")} } =
                useOne({
                    resource: "${n.resource.name}",
                    id: ${l(c,n.key,n.accessor,!1)} || "",
                    queryOptions: {
                        enabled: !!${c},
                    },
                });
            `}}).filter(Boolean),h=n=>{if(n.relation&&n.resource){let d=F(n.key,"Data"),L=F(n.key,"IsLoading");return n.multiple?g`
                <div style={{ marginTop: "6px" }}>
                    <h5>${y(n.key)}</h5>
                    <ul>
                    {${L} ? <>Loading...</> : (
                        <>
                        ${(()=>{var D;if(n.relationInfer)if((D=n.relationInfer)!=null&&D.accessor){if(Array.isArray(n.relationInfer.accessor))return"";{let B=F(n.key),Q=l(B,void 0,n.relationInfer.accessor);return g`
                                            {${d}?.data?.map((${B}: any) => <li key={${Q}}>{${Q}}</li>)}
                                        `}}else return"";else return""})()}
                        </>
                    )}
                    </ul>
                </div>
                `:g`
                <div style={{ marginTop: "6px" }}>
                    <h5>${y(n.key)}</h5>
                    <div>
                    {${L} ? <>Loading...</> : (
                        <>
                        ${(()=>{var D;return n.relationInfer?(D=n.relationInfer)!=null&&D.accessor?Array.isArray(n.relationInfer.accessor)?`{${l(`${d}?.data`,void 0,n.relationInfer.accessor,' + " " + ')}}`:`{${d}?.data?.${n.relationInfer.accessor}}`:`{${d}?.data}`:`{${d}?.data?.id}`})()}
                        </>
                    )}
                    </div>
                </div>
                `}},C=n=>{if(n.type==="text"){if(n.multiple){let d=l("item",void 0,n.accessor);return g`
                <div style={{ marginTop: "6px" }}>
                    <h5>${y(n.key)}</h5>
                    <ul>
                        {${l(c,n.key)}?.map((item: any) => (
                            <li key={${d}}>
                                {${d}}
                            </li>
                        ))}
                    </ul>
                </div>
            `}return g`
                <div style={{ marginTop: "6px" }}>
                    <h5>${y(n.key)}</h5>
                    <div>
                    {${l(c,n.key,n.accessor)}}
                    </div>
                </div>
            `}},I=n=>{if(n.type==="image"){if(n.multiple){let d=l("item",void 0,n.accessor);return g`
                <div style={{ marginTop: "6px" }}>
                    <h5>${y(n.key)}</h5>
                    <ul>
                    {${l(c,n.key)}?.map((item: any) => (
                        <li key={${d}}>
                            <img style={{ maxWidth: 200 }} src={${d}}/>
                        </li>
                    ))}
                    </ul>
                </div>
            `}return g`
                <div style={{ marginTop: "6px" }}>
                    <h5>${y(n.key)}</h5>
                    <img src={{ maxWidth: 200 }} src={${l(c,n.key,n.accessor," + ")}} />
                </div>
                `}},$=n=>{if(n.type==="email"){if(n.multiple){let d=l("item",void 0,n.accessor);return g`
                <div style={{ marginTop: "6px" }}>
                    <h5>${y(n.key)}</h5>
                    <ul>
                        {${l(c,n.key)}?.map((item: any) => (
                            <li key={${d}}>
                                <a href={"mailto:" + ${d}}>{${d}}</a>
                            </li>
                        ))}
                    </ul>
                </div>
            `}return g`
                <div style={{ marginTop: "6px" }}>
                    <h5>${y(n.key)}</h5>
                    <div>
                        <a href={"mailto:" + ${l(c,n.key,n.accessor," + ")}}>
                            {${l(c,n.key,n.accessor," + ")}}
                        </a>
                    </div>
                </div>
            `}},x=n=>{if(n.type==="url"){if(n.multiple){let d=l("item",void 0,n.accessor);return g`
                <div style={{ marginTop: "6px" }}>
                    <h5>${y(n.key)}</h5>
                    <ul>
                        {${l(c,n.key)}?.map((item: any) => (
                            <li key={${d}}>
                                <a href={${d}}>{${d}}</a>
                            </li>
                        ))}
                    </ul>
                </div>
            `}return g`
            <div style={{ marginTop: "6px" }}>
                <h5>${y(n.key)}</h5>
                <div>
                    <a href={${l(c,n.key,n.accessor," + ")}} target="_blank" rel="noreferrer">
                        {${l(c,n.key,n.accessor," + ")}}
                    </a>
                </div>
            </div>
            `}},w=n=>{if(n.type==="boolean"){if(n.multiple){let d=l("item",void 0,n.accessor);return g`
                <div style={{ marginTop: "6px" }}>
                    <h5>${y(n.key)}</h5>
                    <ul>
                        {${l(c,n.key)}?.map((item: any) => (
                            <li key={${d}}>
                                {${d} ? "Yes" : "No"}
                            </li>
                        ))}
                    </ul>
                </div>
            `}return g`
            <div style={{ marginTop: "6px" }}>
                <h5>${y(n.key)}</h5>
                <div>
                {${l(c,n.key,n.accessor," && ")} ? "Yes" : "No"}
                </div>
            </div>
            `}},a=n=>{if(n.type==="date"){if(n.multiple){let d=l("item",void 0,n.accessor);return g`
                <div style={{ marginTop: "6px" }}>
                    <h5>${y(n.key)}</h5>
                    <ul>
                    {${l(c,n.key)}?.map((item: any) => (
                        <li key={${d}}>
                            {(new Date(${d})).toLocaleString(undefined, { timeZone: "UTC" })}
                        </li>
                    ))}
                    </ul>
                </div>
            `}return g`
            <div style={{ marginTop: "6px" }}>
                <h5>${y(n.key)}</h5>
                <div>
                    {(new Date(${l(c,n.key,n.accessor," + ' ' + ")})).toLocaleString(undefined, { timeZone: "UTC" })}
                </div>
            </div>
            `}},A=n=>{if(n.type==="richtext")return g`
            <div style={{ marginTop: "6px" }}>
                <h5>${y(n.key)}</h5>
                <p>
                {${l(c,n.key,n.accessor,' + " " + ')}}
                </p>
            </div>
            `},R=n=>{if(n.type==="number"){if(n.multiple){let d=l("item",void 0,n.accessor);return g`
                <div style={{ marginTop: "6px" }}>
                    <h5>${y(n.key)}</h5>
                    <ul>
                        {${l(c,n.key)}?.map((item: any) => (
                        <li key={${d}}>
                            {${d}}
                        </li>
                        ))}
                    </ul>
                </div>
                `}return g`
                <div style={{ marginTop: "6px" }}>
                    <h5>${y(n.key)}</h5>
                    <div>
                    {${l(c,n.key,n.accessor,' + " " + ')} ?? ""}
                    </div>
                </div>
            `}},s=n=>{if(n)return g`
                ${n}
            `},b=t.map(n=>{switch(n==null?void 0:n.type){case"text":return s(C(n));case"number":return s(R(n));case"richtext":return s(A(n));case"email":return s($(n));case"image":return s(I(n));case"date":return s(a(n));case"boolean":return s(w(n));case"url":return s(x(n));case"relation":return s(h(n));default:return}}),{canEdit:S,list:T}=e!=null?e:{},P=!!T;return _(u),g`
    ${M(u)}
    
    export const ${p} = () => {
        const { edit, list } = useNavigation();
        ${i?"":"const { id } = useResource();"}
        const { queryResult } = useShow(${i?`{ 
                    resource: "${e.name}", 
                    id: ${o}
                }`:""});
        const { data, isLoading } = queryResult;

        const ${c} = data?.data;
    
        ${m}

        return (
            <div style={{ padding: "16px" }}>
            <div style={{ display: "flex", alignItems: "center", justifyContent: "space-between" }}>
                <h1>
                ${y(E((v=e.label)!=null?v:e.name))}
                </h1>
                <div style={{ display: "flex", gap: "8px" }}>
                ${P?g`<button onClick={() => list("${e.name}")}>${y(j((N=e.label)!=null?N:e.name)+" list")}</button>`:""}
                ${S?g`<button onClick={() => edit("${e.name}", ${i?`"${o}"`:"id ?? ''"})}>Edit</button>`:""}
                </div>
            </div>
                <div>
                    ${b.join("")}
                </div>
            </div>
        );
    };
    `},Ce=q({type:"show",additionalScope:[],codeViewerComponent:Z,loadingComponent:W,errorComponent:U,renderer:sr});import*as Br from"@refinedev/react-table";import*as qr from"@tanstack/react-table";var G=e=>Array.isArray(e.accessor)||e.multiple?`accessorKey: "${e.key}"`:e.accessor?`accessorKey: "${V(e.key,void 0,e.accessor)}"`:`accessorKey: "${e.key}"`,ir=({resource:e,fields:t,isCustomPage:i})=>{var T,P;let o=H((T=e.label)!=null?T:e.name,"list"),p="tableData?.data",c=[["React","react",!0],["IResourceComponentsProps","@refinedev/core"],["useNavigation","@refinedev/core"],["useTable","@refinedev/react-table"],["ColumnDef","@tanstack/react-table"],["flexRender","@tanstack/react-table"]],u=t.filter(r=>(r==null?void 0:r.relation)&&!(r!=null&&r.fieldable)&&(r==null?void 0:r.resource)),f=u.filter(Boolean).map(r=>{if((r==null?void 0:r.relation)&&!r.fieldable&&r.resource){c.push(["GetManyResponse","@refinedev/core"]),c.push(["useMany","@refinedev/core"]);let v="";return r.multiple?v=`[].concat(...(${p}?.map((item) => ${l("item",r.key,r.accessor,!1)}) ?? []))`:v=`${p}?.map((item) => ${l("item",r.key,r.accessor,!1)}) ?? []`,`
                const { data: ${F(r.key,"Data")} } =
                useMany({
                    resource: "${r.resource.name}",
                    ids: ${v},
                    queryOptions: {
                        enabled: !!${p},
                    },
                });
                `}}).filter(Boolean),m=u==null?void 0:u.map(r=>{if(r&&r.resource)return F(r.key,"Data")}).filter(Boolean),h=r=>{var v;if(r.relation&&r.resource){let N=`${F(r.key,"Data")}?.data`;if(Array.isArray(r.accessor))return;let n=`id: "${r.key}"`,d=`header: "${y(r.key)}"`,L=G(r),D="";if(r.multiple){let B="item";r!=null&&r.relationInfer&&(B=l("item",void 0,r.relationInfer.accessor)),D=`cell: function render({ getValue, table }) {
                    const meta = table.options.meta as {
                        ${F(r.key,"Data")}: GetManyResponse;
                    };

                    ${r!=null&&r.accessor?"try {":""}

                    const ${F(r.key,"")} = getValue<any[]>()?.map((item) => {
                        return meta.${F(r.key,"Data")}?.data?.find(
                            (resourceItems) => resourceItems.id === ${l("item",void 0,r.accessor)}
                        );
                    })


                    return (
                        <ul>
                            {${F(r.key,"")}?.map((item, index) => (
                                <li key={index}>
                                    {${B}}
                                </li>
                            ))}
                        </ul>
                    )
                    ${r!=null&&r.accessor?" } catch (error) { return null; }":""}
                }
            `}else r!=null&&r.relationInfer?D=`cell: function render({ getValue, table }) {
                        const meta = table.options.meta as {
                            ${F(r.key,"Data")}: GetManyResponse;
                        };

                        ${r!=null&&r.accessor?"try {":""}

                        const ${F(r.key,"")} = meta.${N}?.find(
                            (item) => item.id === getValue<any>(),
                        );

                        return ${l(F(r.key),void 0,(v=r==null?void 0:r.relationInfer)==null?void 0:v.accessor)} ?? "Loading...";

                        ${r!=null&&r.accessor?" } catch (error) { return null; }":""}
                    },`:D="";return`
                {
                    ${n},
                    ${d},
                    ${L},
                    ${D}
                }
            `}},C=r=>{if(r.type==="image"){let v=`id: "${r.key}"`,N=G(r),n=`header: "${y(r.key)}"`,d=g`
                cell: function render({ getValue }) {
                    ${r!=null&&r.accessor?"try {":""}
                        return <img style={{ maxWidth: "100px" }} src={${l("getValue<any>()",void 0,Array.isArray(r.accessor)?r.accessor:void 0," + ")}} />
                    ${r!=null&&r.accessor?" } catch (error) { return null; }":""}
                }
            `;if(r.multiple){let L=l("item",void 0,r.accessor," + ");d=`
                    cell: function render({ getValue }) {
                        ${r!=null&&r.accessor?"try {":""}
                            return (
                                <ul>
                                    {getValue<any[]>()?.map((item, index) => (
                                        <li key={index}><img src={${L}} style={{ height: "50px", maxWidth: "100px" }} /></li>
                                    ))}
                                </ul>
                            )
                        ${r!=null&&r.accessor?" } catch (error) { return null; }":""}
                    }
                `}return`
                {
                    ${v},
                    ${N},
                    ${n},
                    ${d}
                }
            `}},I=r=>{if(r.type==="email"){let v=`id: "${r.key}"`,N=G(r),n=`header: "${y(r.key)}"`,d=g`
                cell: function render({ getValue }) {
                    return <a href={"mailto:" + ${l("getValue<any>()",void 0,Array.isArray(r.accessor)?r.accessor:void 0,' + " " + ')}}>{${l("getValue<any>()",void 0,Array.isArray(r.accessor)?r.accessor:void 0,' + " " + ')}}</a>
                }
            `;return r.multiple&&(d=`
                    cell: function render({ getValue }) {
                        return (
                            <ul>
                                {getValue<any[]>()?.map((item, index) => (
                                    <li key={index}>
                                        {${l("item",void 0,r.accessor," + ")}}
                                    </li>
                                ))}
                            </ul>
                        )
                    }
                `),`
                {
                    ${v},
                    ${N},
                    ${n},
                    ${d}
                }
            `}},$=r=>{if(r.type==="url"){let v=`id: "${r.key}"`,N=G(r),n=`header: "${y(r.key)}"`,d=g`
                cell: function render({ getValue }) {
                    return <a href={${l("getValue<any>()",void 0,Array.isArray(r.accessor)?r.accessor:void 0," + ")}}>{${l("getValue<any>()",void 0,Array.isArray(r.accessor)?r.accessor:void 0," + ")}}</a>
                }
            `;return r.multiple&&(d=`
                    cell: function render({ getValue }) {
                        return (
                            <ul>
                                {getValue<any[]>()?.map((item, index) => (
                                    <li key={index}>
                                        {${l("item",void 0,r.accessor," + ")}}
                                    </li>
                                ))}
                            </ul>
                        )
                    }
                `),`
                {
                    ${v},
                    ${N},
                    ${n},
                    ${d}
                }
            `}},x=r=>{if((r==null?void 0:r.type)==="boolean"){let v=`id: "${r.key}"`,N=G(r),n=`header: "${y(r.key)}"`,d=g`
                cell: function render({ getValue }) {
                    return ${l("getValue<any>()",void 0,Array.isArray(r.accessor)?r.accessor:void 0," + ")} ? "yes" : "no"
                }
            `;return r.multiple&&(d=`
                    cell: function render({ getValue }) {
                        return (
                            <ul>
                                {getValue<any[]>()?.map((item, index) => (
                                    <li key={index}>
                                        {${l("item",void 0,r.accessor," + ")} ? "yes" : "no"}
                                    </li>
                                ))}
                            </ul>
                        );
                    }
                `),`
                {
                    ${v},
                    ${N},
                    ${n},
                    ${d}
                }
            `}},w=r=>{if(r.type==="date"){let v=`id: "${r.key}"`,N=G(r),n=`header: "${y(r.key)}"`,d=g`
                cell: function render({ getValue }) {
                    return (new Date(${l("getValue<any>()",void 0,Array.isArray(r.accessor)?r.accessor:void 0,' + " " + ')})).toLocaleString(undefined, { timeZone: "UTC" })
                }
            `;return r.multiple&&(d=`
                    cell: function render({ getValue }) {
                        return (
                            <ul>
                                {getValue<any[]>()?.map((item, index) => (
                                    <li key={index}>
                                    {(new Date(${l("item",void 0,r.accessor," + ")})).toLocaleString(undefined, { timeZone: "UTC" })}
                                    </li>
                                ))}
                            </ul>
                        )
                    }
                `),`
                {
                    ${v},
                    ${N},
                    ${n},
                    ${d}
                }
            `}},a=r=>{if(r&&(r.type==="text"||r.type==="number"||r.type==="richtext")){let v=`id: "${r.key}"`,N=G(r),n=`header: "${y(r.key)}"`,d="";return r.multiple&&(d=`
                    cell: function render({ getValue }) {
                        return (
                            <ul>
                                {getValue<any[]>()?.map((item, index) => (
                                    <li key={index}>
                                        {${l("item",void 0,r.accessor,' + " " + ')}}
                                    </li>
                                ))}
                            </ul>
                        )
                    }
                `),!r.multiple&&Array.isArray(r.accessor)&&(d=`
                    cell: function render({ getValue }) {
                        return (
                            <>{${l("getValue<any>()",r.key,r.accessor)}}</>
                        );
                    }
                `),`
                {
                    ${v},
                    ${N},
                    ${n},
                    ${d}
                }
            `}},{canEdit:A,canShow:R,canCreate:s}=e!=null?e:{},b=A||R?g`
    {
        id: "actions",
        accessorKey: "id",
        header: "Actions",
        cell: function render({ getValue }) {
            return (
                <div
                    style={{
                        display: "flex",
                        flexDirection: "row",
                        flexWrap: "wrap",
                        gap: "4px",
                    }}
                >
                ${R?g`
                    <button
                        onClick={() => {
                            show("${e.name}", getValue() as string);
                        }}
                    >
                        Show
                    </button>
                    `:""}
                    ${A?g`
                            <button
                            onClick={() => {
                                edit("${e.name}", getValue() as string);
                            }}
                        >
                            Edit
                        </button>
                    `:""}
                </div>
            );
        },
    },
        `:"",S=t.map(r=>{switch(r==null?void 0:r.type){case"text":case"number":case"richtext":return a(r);case"email":return I(r);case"image":return C(r);case"date":return w(r);case"boolean":return x(r);case"url":return $(r);case"relation":return h(r);default:return}});return _(c),g`
    ${M(c)}
    
    export const ${o}: React.FC<IResourceComponentsProps> = () => {
        const columns = React.useMemo<ColumnDef<any>[]>(() => [
            ${[...S,b].filter(Boolean).join(",")}
        ], []);

        ${A||R?g`
        const { ${A?"edit,":""} ${R?"show,":""} ${s?"create,":""} } = useNavigation();
        `:""}

        const {
            getHeaderGroups,
            getRowModel,
            setOptions,
            refineCore: {
                tableQueryResult: { data: tableData },
            },
            getState,
            setPageIndex,
            getCanPreviousPage,
            getPageCount,
            getCanNextPage,
            nextPage,
            previousPage,
            setPageSize,
            getColumn,
        } = useTable({
            columns,
            ${i?`
            refineCoreProps: {
                resource: "${e.name}",
            }
            `:""}
            
        });

        ${f}

        setOptions((prev) => ({
            ...prev,
            meta: {
                ...prev.meta,
                ${m.join(", ")}
            },
        }));

        return (
            <div style={{ padding: "16px" }}>
            <div style={{ display: "flex", alignItems: "center", justifyContent: "space-between" }}>
                <h1>${y((P=e.label)!=null?P:e.name)}</h1>
                ${s?g`<button onClick={() => create("${e.name}")}>Create</button>`:""}
            </div>
                <div style={{ maxWidth: "100%", overflowY: "scroll" }}>
                    <table>
                        <thead>
                            {getHeaderGroups().map((headerGroup) => (
                                <tr key={headerGroup.id}>
                                    {headerGroup.headers.map((header) => (
                                        <th key={header.id}>
                                            {!header.isPlaceholder && (
                                                flexRender(
                                                    header.column.columnDef
                                                        .header,
                                                    header.getContext(),
                                                )
                                            )}
                                        </th>
                                    ))}
                                </tr>
                            ))}
                        </thead>
                        <tbody>
                            {getRowModel().rows.map((row) => (
                                <tr key={row.id}>
                                    {row.getVisibleCells().map((cell) => (
                                        <td key={cell.id}>
                                            {flexRender(
                                                cell.column.columnDef.cell,
                                                cell.getContext(),
                                            )}
                                        </td>
                                    ))}
                                </tr>
                            ))}
                        </tbody>
                    </table>
                </div>
                <div style={{ marginTop: "12px" }}>
                    <button
                        onClick={() => setPageIndex(0)}
                        disabled={!getCanPreviousPage()}
                    >
                        {"<<"}
                    </button>
                    <button
                        onClick={() => previousPage()}
                        disabled={!getCanPreviousPage()}
                    >
                        {"<"}
                    </button>
                    <button onClick={() => nextPage()} disabled={!getCanNextPage()}>
                        {">"}
                    </button>
                    <button
                        onClick={() => setPageIndex(getPageCount() - 1)}
                        disabled={!getCanNextPage()}
                    >
                        {">>"}
                    </button>
                    <span>
                        Page
                        <strong>
                            {getState().pagination.pageIndex + 1} of{" "}
                            {getPageCount()}
                        </strong>
                    </span>
                    <span>
                        | Go to page:
                        <input
                            type="number"
                            defaultValue={getState().pagination.pageIndex + 1}
                            onChange={(e) => {
                                const page = e.target.value
                                    ? Number(e.target.value) - 1
                                    : 0;
                                setPageIndex(page);
                            }}
                        />
                    </span>{" "}
                    <select
                        value={getState().pagination.pageSize}
                        onChange={(e) => {
                            setPageSize(Number(e.target.value));
                        }}
                    >
                        {[10, 20, 30, 40, 50].map((pageSize) => (
                            <option key={pageSize} value={pageSize}>
                                Show {pageSize}
                            </option>
                        ))}
                    </select>
                </div>
            </div>   
        );
    };
    `},Fe=q({type:"list",additionalScope:[["@refinedev/react-table","RefineReactTable",Br],["@tanstack/react-table","TanstackReactTable",qr]],codeViewerComponent:Z,loadingComponent:W,errorComponent:U,renderer:ir});import*as Ur from"@refinedev/core";import*as Wr from"@refinedev/react-hook-form";var cr=({resource:e,fields:t,isCustomPage:i})=>{var $,x,w;let o=H(($=e.label)!=null?$:e.name,"create"),p=[["React","react",!0],["useNavigation","@refinedev/core"],["useForm","@refinedev/react-hook-form"]],u=t.filter(a=>(a==null?void 0:a.relation)&&!(a!=null&&a.fieldable)&&(a==null?void 0:a.resource)).filter(Boolean).map(a=>{if((a==null?void 0:a.relation)&&!a.fieldable&&a.resource)return p.push(["useSelect","@refinedev/core"]),`
                const { options: ${F(a.key,"Options")} } =
                useSelect({
                    resource: "${a.resource.name}",
                    ${re(a)}
                });
            `}).filter(Boolean),f=a=>{if(a.relation&&a.resource){p.push(["useSelect","@refinedev/core"]);let A=F(a.key,"Options");return g`
            <label>
                <span style={{ marginRight: "8px" }}>
                    ${y(a.key)}
                </span>
                <select
                    placeholder="Select ${E(a.resource.name)}"
                    {...register("${V(a.key,void 0,a.accessor)}", {
                        required: ${a.multiple?"false":'"This field is required"'},
                    })}
                >
                    {${A}?.map((option) => (
                        <option value={option.value} key={option.value}>
                            {option.label}
                        </option>
                    ))}
                </select>
                <span style={{ color: "red" }}>
                    {${l("(errors as any)",a.key,a.accessor,!1)}?.message as string}
                </span>
            </label>
            `}},m=a=>{if(a.type==="text"||a.type==="url"||a.type==="email"||a.type==="number"||a.type==="date"||a.type==="richtext"){if(ee(a.key)||a.multiple)return;let A=a.type==="richtext"?"textarea":"input";return g`
                <label>
                    <span style={{ marginRight: "8px" }}>
                        ${y(a.key)}
                    </span>
                    <${A}
                        ${a.type!=="date"&&a.type!=="richtext"?`type="${a.type}"`:""}
                        ${A==="textarea"?`
                            rows={5}
                            cols={33}
                            style={{ verticalAlign: "top" }}
                        `:""}
                        {...register("${V(a.key,void 0,a.accessor)}", {
                            required: "This field is required",
                            ${a.type==="number"?"valueAsNumber: true,":""}
                        })}

                    />
                    <span style={{ color: "red" }}>
                        {${l("(errors as any)",a.key,a.accessor,!1)}?.message as string}
                    </span>
                </label>
            `}},h=a=>{if(a.type==="boolean")return a.multiple?void 0:g`
                <label>
                    <span style={{ marginRight: "8px" }}>
                        ${y(a.key)}
                    </span>
                    <input
                        type="checkbox"
                        {...register("${V(a.key,void 0,a.accessor)}", {
                            required: "This field is required",
                        })}
                    />
                    <span style={{ color: "red" }}>
                        {${l("errors",a.key,a.accessor,!1)}?.message as string}
                    </span>
                </label>
            `},C=t.map(a=>{switch(a==null?void 0:a.type){case"text":case"number":case"email":case"url":case"richtext":case"date":return m(a);case"boolean":return h(a);case"relation":return f(a);default:return}}),I=!!e.list;return _(p),g`
    ${M(p)}
    
    export const ${o} = () => {
        ${I?`
        const { list } = useNavigation();
        `:""}
        const {
            refineCore: { onFinish, formLoading },
            register,
            handleSubmit,
            resetField,
            formState: { errors },
        } = useForm(
            ${i?`
            { 
                refineCoreProps: {
                    resource: "${e.name}",
                    action: "create",
                }
            }`:""}
        );
    
        ${u}

        return (
            <div style={{ padding: "16px" }}>
                <div style={{ display: "flex", justifyContent: ${I?'"space-between"':'"flex-start"'} }}>
                    <h1>
                        ${y(E((x=e.label)!=null?x:e.name)+" Create")}
                    </h1>
                    ${I?g`
                            <div>
                        <button
                                onClick={() => {
                                    list("${e.name}");
                                }}
                        >
                            ${y(j((w=e.label)!=null?w:e.name)+" List")}
                        </button>
                        </div>
                    `:""}
                </div>
                <form onSubmit={handleSubmit(onFinish)}>
                    <div style={{ display: "flex", flexDirection: "column", gap: "8px" }}>
                        ${C.join("")}
                        <div>
                            <input type="submit" value="Save" />
                        </div>
                    </div>
                </form>
            </div>
        );
    };
    `},Ae=q({type:"create",additionalScope:[["@refinedev/core","RefineCore",Ur],["@refinedev/react-hook-form","RefineReactHookForm",Wr]],codeViewerComponent:Z,loadingComponent:W,errorComponent:U,renderer:cr});import*as Zr from"@refinedev/core";import*as Gr from"@refinedev/react-hook-form";import*as Yr from"react-hook-form";var pr=({resource:e,fields:t,isCustomPage:i,id:o})=>{var w,a,A,R;let p=H((w=e.label)!=null?w:e.name,"edit"),c=F((a=e.label)!=null?a:e.name,"Data"),u=[["React","react",!0],["useNavigation","@refinedev/core"],["useForm","@refinedev/react-hook-form"]],m=t.filter(s=>(s==null?void 0:s.relation)&&!(s!=null&&s.fieldable)&&(s==null?void 0:s.resource)).filter(Boolean).map(s=>{if((s==null?void 0:s.relation)&&!s.fieldable&&s.resource){u.push(["useSelect","@refinedev/core"]);let b=l(c,s.key,s.accessor,!1);return s.multiple&&s.accessor&&(b=`${l(c,s.key)}?.map((item: any) => ${l("item",void 0,s.accessor)})`),`
                const { options: ${F(s.key,"Options")} } =
                useSelect({
                    resource: "${s.resource.name}",
                    defaultValue: ${b},
                    ${re(s)}
                });

                React.useEffect(() => {
                    resetField("${V(s.key,void 0,s.accessor)}");
                }, [${F(s.key,"Options")}]);
            `}}).filter(Boolean),h=s=>{if(s.relation&&s.resource){u.push(["useSelect","@refinedev/core"]);let b=F(s.key,"Options");return g`
            <label>
                <span style={{ marginRight: "8px" }}>${y(s.key)}</span>
                <select
                    placeholder="Select ${E(s.resource.name)}"
                    {...register("${V(s.key,void 0,s.accessor)}", {
                        required: ${s.multiple?"false":'"This field is required"'},
                    })}
                >
                    {${b}?.map((option) => (
                        <option value={option.value} key={option.value}>
                            {option.label}
                        </option>
                    ))}
                </select>
                <span style={{ color: "red" }}>
                    {${l("(errors as any)",s.key,s.accessor,!1)}?.message as string}
                </span>
            </label>
            `}},C=s=>{if(s.type==="text"||s.type==="url"||s.type==="email"||s.type==="number"||s.type==="date"||s.type==="richtext"){if(s.multiple){let S=V(s.key,"${index}",s.accessor),T=l(l("(errors as any)",s.key,void 0,!1)+"?.[index]",void 0,s.accessor);return`
                    <>
                        {${l(c,s.key)}?.map((item: any, index: number) => (
                            <label key={index}>
                                <span style={{ marginRight: "8px" }}>
                                    ${y(s.key)} #{index + 1}
                                </span>
                                <input ${s.type!=="richtext"?`
                                type="${s.type!=="date"?s.type:"text"}"
                                `:""} {...register(\`${S}\`, { required: "This field is required", ${s.type==="number"?"valueAsNumber: true,":""} })} />
                                <span style={{color: "red"}}>
                                {${l(T,"message")} as string}
                                </span>
                            </label>
                        ))}
                    </>
                `}let b=s.type==="richtext"?"textarea":"input";return g`
            <label>
                <span style={{ marginRight: "8px" }}>${y(s.key)}</span>
                <${b}
                ${ee(s.key)?"disabled":""}
                ${s.type!=="date"&&s.type!=="richtext"?`type="${s.type}"`:""}
                ${b==="textarea"?`
                    rows={5}
                    cols={33}
                    style={{ verticalAlign: "top" }}
                `:""}
                {...register("${V(s.key,void 0,s.accessor)}", {
                    required: "This field is required",
                    ${s.type==="number"?"valueAsNumber: true,":""}
                })}
                />
                <span style={{ color: "red" }}>
                {${l("(errors as any)",s.key,s.accessor,!1)}?.message as string}
                </span>
            </label>
            `}},I=s=>{if(s.type==="boolean"){if(s.multiple){let b=V(s.key,void 0,s.accessor),S=l("(errors as any)",s.key,void 0,!1)+"?.[index]";return`
                    <>
                        {${l(c,s.key)}?.map((item: any, index: number) => (
                            <label key={index}>
                            <span style={{ marginRight: "8px" }}>
                            ${y(s.key)} #{index + 1}
                            </span>
                            <input
                                type="checkbox"
                                {...register(\`${b}.\${index}\`, {
                                    required: "This field is required",
                                })}
                            />
                            <span style={{ color: "red" }}>
                                {${S}?.message as string}
                            </span>
                        ))}
                    </>
                `}return g`
            <label>
                <span style={{ marginRight: "8px" }}>${y(s.key)}</span>
                <input type="checkbox" {...register("${V(s.key,void 0,s.accessor)}", {
                    required: "This field is required",
                })} />
                <span style={{ color: "red" }}>
                    {${l("errors",s.key,s.accessor,!1)}?.message as string}
                </span>
            </label>
            `}},$=t.map(s=>{switch(s==null?void 0:s.type){case"text":case"number":case"email":case"url":case"richtext":case"date":return C(s);case"boolean":return I(s);case"relation":return h(s);default:return}}),x=!!e.list;return _(u),g`
    ${M(u)}
    
    export const ${p} = () => {
        ${x?`
        const { list } = useNavigation();
        `:""}
        const {
            refineCore: { onFinish, formLoading, queryResult },
            register,
            handleSubmit,
            resetField,
            formState: { errors },
        } = useForm(
            ${i?`
            { 
                refineCoreProps: {
                    resource: "${e.name}",
                    id: ${o},
                    action: "edit",
                }
            }`:""}
        );
    
        const ${c} = queryResult?.data?.data;
    
        ${m}

        return (
            <div style={{ padding: "16px" }}>
                <div style={{ display: "flex", justifyContent: ${x?'"space-between"':'"flex-start"'} }}>
                    <h1>
                        ${y(E((A=e.label)!=null?A:e.name)+" Edit")}
                    </h1>
                    ${x?g`
                    <div>
                        <button
                                onClick={() => {
                                    list("${e.name}");
                                }}
                        >
                            ${y(j((R=e.label)!=null?R:e.name)+" List")}
                        </button>
                    </div>
                    `:""}
                </div>
                <form onSubmit={handleSubmit(onFinish)}>
                    <div style={{ display: "flex", flexDirection: "column", gap: "8px" }}>
                        ${$.join("")}
                        <div>
                            <input type="submit" value="Save" />
                        </div>
                    </div>
                </form>
            </div>
        );
    };
    `},we=q({type:"edit",additionalScope:[["@refinedev/core","RefineCore",Zr],["@refinedev/react-hook-form","RefineReactHookForm",Gr],["react-hook-form","ReactHookForm",Yr]],codeViewerComponent:Z,loadingComponent:W,errorComponent:U,renderer:pr});var pa=({action:e,id:t,...i})=>{let{action:o,id:p}=Qr();switch(e!=null?e:o){case"show":return se.createElement(Ce,{...i,id:t!=null?t:p});case"create":return se.createElement(Ae,{...i,id:t!=null?t:p});case"edit":return se.createElement(we,{...i,id:t!=null?t:p});default:return se.createElement(Fe,{...i,id:t!=null?t:p})}};export{Ae as HeadlessCreateInferencer,cr as HeadlessCreateRenderer,we as HeadlessEditInferencer,pr as HeadlessEditRenderer,pa as HeadlessInferencer,Fe as HeadlessListInferencer,ir as HeadlessListRenderer,Ce as HeadlessShowInferencer,sr as HeadlessShowRenderer};
//# sourceMappingURL=headless.js.map