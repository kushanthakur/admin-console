import ae from"react";import{useResource as ut}from"@refinedev/core";import*as Yr from"@refinedev/mantine";import*as et from"@mantine/core";import E from"react";import{useResource as ar}from"@refinedev/core";var mr=/(image|photo|avatar|url|logo|cover|thumbnail|icon)/i,se=(r,n)=>{let i=["name","label","title","count","content","username","nickname","login","firstName","lastName","url"];mr.test(r)&&i.unshift("url");let o=i.find(u=>u in n&&!!n[u]);if(o)return o==="firstName"&&"lastName"in n?["firstName","lastName"]:o};import{pickNotDeprecated as lr}from"@refinedev/core";function ie(r,n,i){if(n)return n;let o=i==null?void 0:i.find(a=>a.name===r),u=lr(o==null?void 0:o.meta,o==null?void 0:o.options);return u!=null&&u.dataProviderName?u.dataProviderName:"default"}var Y=r=>{var n;return(n=r==null?void 0:r.options)==null?void 0:n.dataProviderName};var ce=r=>{let n=[...r].filter(Boolean).sort((i,o)=>(o.priority||0)-(i.priority||0))[0];return n||null};import dr from"prettier/standalone";import yr from"prettier/parser-typescript";var ue=r=>{try{return dr.format(r,{parser:"typescript",plugins:[yr],arrowParens:"always",trailingComma:"all",semi:!0,tabWidth:4,printWidth:80})}catch(n){return console.warn("Formatting error in inferencer",n),r}};var pe=r=>r.replace(/ {2,}/g," ").replace(/\n{2,}/g,`
`);var me=/(-id|-ids|_id|_ids|Id|Ids|ID|IDs)(\[\])?$/,Ne=(r,n)=>{let i=me.test(r),o=typeof n=="string"||typeof n=="number",u=Array.isArray(n)&&n.every(a=>typeof a=="string"||typeof a=="number");return i&&o||i&&u?{key:r,relation:!0,multiple:!!u,type:"relation",priority:1}:!1};var L=r=>r.replace(me,"");var g=r=>L(r).replace(/([a-z])([A-Z])/g,"$1 $2").replace(/_/g," ").replace(/-/g," ").split(" ").map(c=>c.charAt(0).toUpperCase()+c.slice(1)).join(" ");var le=r=>r.replace(/export\s+(const|let|var|type|interface|function|class)\s+(\w+)\s*(=|:)\s*/g,"$1 $2 = ").split(`
`).filter(u=>!u.trim().startsWith("export default")).join(`
`);var Ve=/import(?:(?:(?:[ \n\t]+([^ *\n\t\{\},]+)[ \n\t]*(?:,|[ \n\t]+))?([ \n\t]*\{(?:[ \n\t]*[^ \n\t"'\{\}]+[ \n\t]*,?)+\})?[ \n\t]*)|[ \n\t]*\*[ \n\t]*as[ \n\t]+([^ \n\t\{\}]+)[ \n\t]+)from[ \n\t]*(?:['"])([^'"\n]+)(?:['"])(?:;?)/g,fr=/import[ \n\t](?:['"])([^'"\n]+)(?:['"])(?:;?)/g,gr=/((?:\w|\s|_)*)( as )((?:\w|\s|_)*)( |,)?/g,de=(r,n={})=>{let i=r.matchAll(Ve),o=new Set;for(let u of i){let[,a,c,y,m]=u;if(m in n){let h=n[m];if(m==="react")continue;a&&o.add(`const { default: ${a} } = ${h};`),c&&o.add(`const${c.replace(gr,"$1: $3$4")} = ${h};`),y&&o.add(`const ${y} = ${h};`)}}return pe(`
    ${Array.from(o).join(`
`)}
    ${r.replace(Ve,"").replace(fr,"")}
    `)};import ne from"pluralize";var ye=(r,n)=>r?n.find(o=>{let u=L(r.key);return o.name===u||o.name===(ne.isPlural(u)?u:ne.plural(u))||o.name===(ne.isSingular(u)?u:ne.singular(u))}):void 0;import hr from"pluralize";var D=(r,n,i="Inferred")=>{let o=r.replace(/[^a-zA-Z0-9]/g," "),u=hr.singular(o),c=g(u).replace(/ /g,"")||i,y=n.charAt(0).toUpperCase()+n.slice(1);return/^[a-zA-Z]/.test(c)?`${c}${y}`:`${y}${c}`};var $r=r=>r?Array.isArray(r)?r.join(""):typeof r=="string"?r:typeof r=="object"||typeof r=="function"?r.toString():typeof r=="number"?String(r):typeof r=="boolean"&&r?"true":r:"",f=(r,...n)=>r.reduce((o,u,a)=>`${o}${u}${$r(n[a])}`,"").trim();var fe=(r,n)=>`
    ${r!=null?r:""}
    
    render(typeof ${n} !== "undefined" ? <${n} /> : <></>);
    `;var ge=r=>r==null?void 0:r.replace(/(\/\* hidden-start \*\/)(.|\n)*?(\/\* hidden-end \*\/)/g,"");var Ir=/^[a-zA-Z_$][a-zA-Z_$0-9]*$/,he=r=>Ir.test(r);function $e(r,n,i){let o=`${r}`;return n&&(o+="?.",he(n)?o+=n:o+=`['${n}']`),i&&(o+="?.",he(i)?o+=i:o+=`['${i}']`),o}function xr(r,n,i){return(i!=null?i:[]).map(u=>$e(r,n,u))}var l=(r,n,i,o=' + " " + ')=>Array.isArray(i)?o?xr(r,n,i).join(o):$e(r,n,i[0]):$e(r,n,i),R=(r,n,i)=>{let o=r;return n&&(o+=`.${n}`),i&&(Array.isArray(i)?o+=`.${i[0]}`:o+=`.${i}`),o};var B=r=>{let n=r.reduce((o,[u,a,c])=>(o[a]||(o[a]=[]),o[a].includes(u)||(c?o[a].push([u,!0]):o[a].push(u)),o),{});return Object.entries(n).map(([o,u])=>{let a=u.find(h=>Array.isArray(h)&&h[1]),c=u.filter(h=>typeof h=="string"),y=a?`${a[0]}`:"",m=c.length?`{ ${c.join(", ")} }`:"";return`import ${y}${y&&m?", ":""}${m} from "${o}";`})};import Me from"pluralize";var K=(r="")=>Me.isSingular(r)?r:Me.singular(r);import Le from"pluralize";var Z=(r="")=>Le.isPlural(r)?r:Le.plural(r);var kr=/^id$/i,q=r=>kr.test(r);var ee=r=>r.relationInfer&&r.relationInfer.accessor?Array.isArray(r.relationInfer.accessor)?`optionLabel: "${r.relationInfer.accessor[0]}",`:r.relationInfer.accessor!=="title"?`optionLabel: "${r.relationInfer.accessor}",`:"":"";var O=r=>{};var T=(r,n="")=>{if(Number.isInteger(Number(r)))return n.charAt(0).toLowerCase()+n.slice(1)+r;let o=r.replace(/^\d+/,"").replace(/[^a-zA-Z0-9]/g,"-"),u=g(o).replace(/ /g,"");return`${u.charAt(0).toLowerCase()+u.slice(1)}${n.charAt(0).toUpperCase()+n.slice(1)}`};var Ge=r=>{let n=(i,o,u,a=n)=>{let c=r.map(m=>m(i,o,u,a));return ce(c)};return n};var De=r=>(i,o,u,a,c)=>r.reduce((y,m)=>m(y,o,u,a,c),i);var Pe=(r,n,i,o)=>{let u=Array.isArray(n),a=Array.isArray(n)&&n.every(c=>typeof c=="string"||typeof c=="number");if(u){if(!a){let y=o(r,n[0],i,o);return y?{...y,key:r,multiple:!0,priority:1}:!1}let c=o(r,n[0],i,o)||{type:"string"};return{key:r,multiple:!0,priority:1,type:c==null?void 0:c.type}}return!1};var Ee=(r,n)=>typeof n=="boolean"?{key:r,type:"boolean"}:!1;import Be from"dayjs";var br=/(_at|_on|At|On|AT|ON)(\[\])?$/,Fr=["/",":","-","."],Oe=(r,n)=>{let i=br.test(r)&&Be(n).isValid(),o=typeof n=="string"&&Be(n).isValid();return typeof n=="string"&&Fr.some(a=>n.includes(a))&&(i||o)?{key:r,type:"date",priority:1}:!1};var Cr=/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,Ke=(r,n)=>typeof n=="string"&&Cr.test(n)?{key:r,type:"email",priority:1}:!1;var vr=/\.(gif|jpe?g|tiff?|png|webp|bmp|svg)$/i,ze=(r,n)=>typeof n=="string"&&vr.test(n)?{key:r,type:"image",priority:2}:!1;var je=(r,n)=>typeof n>"u"||n===null?null:!1;var _e=(r,n)=>{let i=typeof n=="string"&&n.length>0,o=!isNaN(n);return i&&o||typeof n=="number"?{key:r,type:"number"}:!1};var Tr=/id$/i,He=(r,n,i,o)=>{let u=n!==null,a=!Array.isArray(n);if(u&&a&&typeof n=="object"){if(Object.keys(n).length===1&&Tr.test(Object.keys(n)[0]))return{key:r,type:"relation",relation:!0,accessor:"id",priority:1};let m=se(r,n);if((m?m.length>0:!1)&&m){let b=m&&Array.isArray(m)?m[0]:m,k=o(b,n[b],n,o);if(k){let $=Array.isArray(m)?m.map(C=>k.accessor?`${C}.${Array.isArray(k.accessor)?k.accessor[0]:k.accessor}`:C):k.accessor?Array.isArray(k.accessor)?`${m}.${k.accessor[0]}`:`${m}.${k.accessor}`:m;return{...k,fieldable:!0,key:r,accessor:$,priority:1}}}return{key:r,fieldable:!1,type:"object",priority:1}}return!1};var Ue=(r,n)=>typeof n=="string"&&n.length>100?{key:r,type:"richtext",priority:1}:!1;var We=(r,n)=>typeof n=="string"?{key:r,type:"text"}:!1;var Ar=/^(https?|ftp):\/\/(-\.)?([^\s/?\.#-]+\.?)+(\/[^\s]*)?$/i,qe=(r,n)=>typeof n=="string"&&Ar.test(n)?{key:r,type:"url",priority:1}:!1;var Ze=[Pe,Ee,Oe,Ke,ze,je,_e,He,Ne,Ue,We,qe];var Je=(r,n,i,o)=>r.map(a=>{if(!a.relation&&(a.type==="text"||a.type==="richtext"||a.type==="number")&&!a.canRelation){let c=/^[a-z0-9-]+$/,y=$=>c.test(`${$}`),m=a.key.toLowerCase()!=="id";return!(!a.accessor||typeof a.accessor=="string")||!m?a:(a.multiple?o[a.key]:[o[a.key]]).every($=>y(a.accessor?$[a.accessor]:$))?{...a,canRelation:!0}:a}return a});var wr=/(image|photo|avatar|cover|thumbnail|icon)/i,Xe=r=>r.map(i=>i.type==="url"&&wr.test(i.key)?{...i,type:"image"}:i);var Qe=(r,n)=>r.map(o=>{let u=ye(o,n);return u?{...o,relation:!0,type:"relation",resource:u}:o});var Ye=(r,n,i,o,u)=>r.map(c=>{if(c.relation&&c.type==="relation"&&!c.resource){let y=c.accessor?o[c.key][c.accessor]:o[c.key],m=u(c.key,y,o,u);if(m&&m.type!=="relation")return{...c,fieldable:!0,relation:!1,type:m.type,canRelation:!0}}return c});var er=[Xe,Qe,Ye,Je];import re,{useEffect as Rr}from"react";import Sr,{defaultProps as Nr}from"prism-react-renderer";import Vr from"prism-react-renderer/themes/vsDark";var Ie=({code:r,wrapperProps:n})=>(Rr(()=>{var o;let i=document.createElement("style");i.appendChild(document.createTextNode(`
                #code-highlight::-webkit-scrollbar {-webkit-appearance: none; height: 7px; width: 7px;}
                #code-highlight::-webkit-scrollbar-thumb {background-color: #666b7a;}
                #code-highlight::-webkit-scrollbar-corner {background-color: rgb(30, 30, 30);}
                `)),(o=document.getElementById("code-highlight"))==null||o.appendChild(i)},[]),re.createElement("div",{id:"code-highlight",style:{maxHeight:"75vh",height:"100%",overflow:"auto",backgroundColor:"rgb(30, 30, 30)"},...n!=null?n:{}},re.createElement(Sr,{...Nr,theme:Vr,code:r,language:"tsx"},({className:i,style:o,tokens:u,getLineProps:a,getTokenProps:c})=>re.createElement("pre",{className:i,style:{...o,padding:"14px 14px 14px 14px",margin:"0",width:"100%",boxSizing:"border-box"}},u.map((y,m)=>re.createElement("div",{key:m,...a({line:y,key:m})},y.map((h,b)=>re.createElement("span",{key:b,...c({token:h,key:b})}))))))));import P from"react";import*as Mr from"@refinedev/core";import{LivePreview as Lr,LiveProvider as Gr}from"@aliemir/react-live";var rr=[["react","React",P],["@refinedev/core","RefineCore",Mr]],xe=P.createContext({}),ke=({fetchError:r,code:n,additionalScope:i,errorComponent:o})=>{var y;let u=(y=n&&le(de(n,[...rr,...i!=null?i:[]].reduce((m,[h,b,k,$])=>$?m:{...m,[h]:b},{}))))!=null?y:"",a=P.useMemo(()=>({React:P,...P,...[...rr,...i!=null?i:[]].reduce((m,[h,b,k])=>({...m,[b]:k}),{})}),[i]),c=P.useMemo(()=>()=>{let{error:h}=P.useContext(xe);return o?P.createElement(o,{error:h?`<p>An error occured while rendering the generated component.You can check the generated code from the below "Show Code" button and fix the error manually.</p>
                                    <p>If you think this is a bug, please report the issue at <a target="_blank" rel="noopener noreferrer" href="https://github.com/refinedev/refine/issues">https://github.com/refinedev/refine/issues</a></p>
                                    <p>Exception:</p>
                                    <code>${h}</code>`:typeof r=="string"?r:r?`<p>Something went wrong while fetching the resource data.</p>
                                    <p>To learn more about the Inferencer, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`:void 0}):null},[o,r]);return P.createElement(Gr,{Context:xe,code:u,scope:a,noInline:!0},!r&&P.createElement(Lr,{Context:xe}),P.createElement(c,null))};import J from"react";import{useDataProvider as Dr,useResource as Pr}from"@refinedev/core";var tr=(r,n,i)=>{let{resource:o,id:u,resources:a}=Pr(n),c=i!=null?i:u,y=Dr(),[m,h]=J.useState(void 0),[b,k]=J.useState(void 0),[$,C]=J.useState(!0),[V,p]=J.useState(!1),M=J.useCallback(async v=>{var N,e;let s=(N=Y(o))!=null?N:ie(o==null?void 0:o.name,void 0,a),I=y(s);p(!0),h(void 0);try{if((r==="list"||r==="create")&&o){let t=(e=(await I.getList({resource:o==null?void 0:o.name})).data)==null?void 0:e[0];t||h(`<p>No records/data found for resource "${o==null?void 0:o.name}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),k(t),setTimeout(()=>{p(!1)},500)}if((r==="edit"||r==="show")&&v&&o){let t=(await I.getOne({resource:o==null?void 0:o.name,id:v})).data;t||h(`<p>No records/data found for resource "${o==null?void 0:o.name}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),k(t),setTimeout(()=>{p(!1)},500)}}catch(d){console.warn("An error occured while fetching the resource data. Please check the error message below:",d),h(`<p>Something went wrong while fetching the resource data.</p>
                    <p>Please check your data provider and API for resource "${o==null?void 0:o.name}".</p>
                    <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),setTimeout(()=>{p(!1)},500)}},[r,y,o,a]);return J.useEffect(()=>{C(!1),!V&&!b&&M(c)},[M,c]),{data:b,loading:V,initial:$,error:m}};import te from"react";import{useDataProvider as Er}from"@refinedev/core";import{get as nr}from"lodash";var or=({record:r,fields:n,infer:i})=>{let o=Er(),[u,a]=te.useState([]),[c,y]=te.useState(!0),[m,h]=te.useState(!1),b=te.useCallback(async k=>{console.groupCollapsed("@refinedev/inferencer is trying to detect relations");let $=[];h(!0);try{let C=k.map(async p=>{if(p&&(p.relation||p.canRelation)&&r){let M=Y(p.resource),v=o(M),s=Array.isArray(p.accessor)?void 0:p.multiple?r[p.key].map(I=>p.accessor?nr(I,p.accessor):I)[0]:p.accessor?nr(r[p.key],p.accessor):r[p.key];if(s&&p.resource)try{let{data:I}=await v.getOne({resource:p.resource.name,id:s});$.push({status:"success",resource:p.resource.name,field:p.key});let N=i("__",I,{},i);return{...p,relationInfer:N}}catch{return $.push({status:"error",resource:p.resource.name,field:p.key}),{...p,relationInfer:null}}if(s){let I,N;try{let{data:t}=await v.getOne({resource:Z(L(p.key)),id:s});$.push({status:"success",resource:Z(L(p.key)),field:p.key}),I=t,N=!0}catch{$.push({status:"error",resource:Z(L(p.key)),field:p.key});try{let{data:x}=await v.getOne({resource:K(L(p.key)),id:s});$.push({status:"success",resource:K(L(p.key)),field:p.key}),I=x,N=!1}catch{return $.push({status:"error",resource:K(L(p.key)),field:p.key}),{...p,relationInfer:null}}}let e=i("__",I,{},i),d=L(p.key);return{...p,relation:!0,type:"relation",resource:{name:N?Z(d):K(d)},fieldable:!1,canRelation:void 0,relationInfer:e}}return{...p,relationInfer:null}}return p}),V=await Promise.all(C);a(V.filter(p=>p)),setTimeout(()=>{h(!1)},500)}catch{setTimeout(()=>{h(!1)},500)}setTimeout(()=>{console.log(`Tried to detect relations with ${$.length} attempts and succeeded with ${$.filter(C=>C.status==="success").length} attempts.`),console.groupEnd()},500)},[o,r]);return te.useEffect(()=>{y(!1),!m&&n&&n.length>0&&u.length===0&&b(n)},[b,m,n,b]),{fields:u,loading:m,initial:c}};var z=({type:r,additionalScope:n=[],customElements:i=[],fieldTransformers:o=[],renderer:u,loadingComponent:a,errorComponent:c,codeViewerComponent:y})=>{let m=Ge([...Ze,...i]),h=De([...er,...o]),b=({resourceName:$,fieldTransformer:C,id:V})=>{var w,F,G,W,X,Ae;let{resource:p,resources:M}=ar($),{resource:v}=ar(),{data:s,loading:I,initial:N,error:e}=tr(r,$!=null?$:p==null?void 0:p.name,V),d=E.useMemo(()=>{if(s){let pr=Object.keys(s).map(Q=>{let we=s[Q];return m(Q,we,s,m)}).filter(Boolean);if(p){let Q=h(pr,M,p,s,m);return C?Q.flatMap(Re=>{let Se=C(Re);return Se?[Se]:[]}):Q}return[]}return[]},[s,M,p,C]),{fields:t,loading:x}=or({record:s,fields:d,infer:m}),A=E.useMemo(()=>!I&&!x&&!N&&p?u({resource:p,resources:M,fields:t,infer:m,isCustomPage:p.name!==(v==null?void 0:v.name),id:V}):"",[p,M,t,I,x]);return E.createElement(E.Fragment,null,a&&(I||x)&&E.createElement(a,null),!I&&!x&&E.createElement(E.Fragment,null,E.createElement(ke,{fetchError:!I&&e?e:!I&&!N&&!s,code:fe(A,D((Ae=(X=(W=(G=(w=p==null?void 0:p.meta)==null?void 0:w.label)!=null?G:(F=p==null?void 0:p.options)==null?void 0:F.label)!=null?W:p==null?void 0:p.label)!=null?X:p==null?void 0:p.name)!=null?Ae:"Resource",r)),errorComponent:c,additionalScope:n}),y&&E.createElement(y,{code:ge(A),loading:I||x})))};return({name:$,resource:C,fieldTransformer:V,id:p})=>E.createElement(b,{fieldTransformer:V,resourceName:C!=null?C:$,key:C!=null?C:$,id:p})};import oe from"react";import{Alert as Br,Center as Or}from"@mantine/core";import{IconAlertCircle as Kr}from"@tabler/icons";var j=({error:r})=>r?oe.createElement(Or,{style:{minHeight:300}},oe.createElement(Br,{title:"Error",color:"red",icon:oe.createElement(Kr,null)},oe.createElement("div",{dangerouslySetInnerHTML:{__html:r!=null?r:""}}))):null;import zr from"react";import{LoadingOverlay as jr}from"@mantine/core";var _=()=>zr.createElement(jr,{visible:!0});import S from"react";import{Affix as _r,Button as be,Modal as Hr,Group as Ur,ActionIcon as Wr}from"@mantine/core";import{IconCode as qr,IconMessageCircle as Zr,IconX as Jr,IconCopy as Xr,IconCheck as Qr}from"@tabler/icons";var H=({code:r,loading:n})=>{let i=S.useMemo(()=>ue(r!=null?r:""),[r]),o=S.useRef(null),[u,a]=S.useState(!1),[c,y]=S.useState(!1);if(n)return null;let m=()=>{var h,b,k,$;(h=o==null?void 0:o.current)==null||h.select(),(b=o==null?void 0:o.current)==null||b.setSelectionRange(0,Number.MAX_SAFE_INTEGER),typeof navigator<"u"&&(navigator.clipboard.writeText(($=(k=o==null?void 0:o.current)==null?void 0:k.value)!=null?$:""),y(!0),setTimeout(()=>{y(!1)},1e3))};return i?S.createElement(S.Fragment,null,S.createElement(_r,{position:{bottom:12,right:60}},S.createElement(Ur,{spacing:"xs"},S.createElement(be,{leftIcon:S.createElement(qr,{size:18}),variant:"filled",color:"primary",onClick:()=>a(!0)},"Show Code"),S.createElement(be,{leftIcon:S.createElement(Zr,{size:18}),variant:"default",component:"a",target:"_blank",href:"https://github.com/refinedev/refine/discussions/3046"},"Give Feedback"))),S.createElement("div",{style:{height:"50px"}}),S.createElement(Hr,{size:800,opened:u,onClose:()=>a(!1),styles:{modal:{padding:"0px !important",borderRadius:0},header:{display:"none"}}},S.createElement(Wr,{onClick:()=>a(!1),variant:"transparent",sx:{position:"absolute",right:0,top:0,height:56,width:56}},S.createElement(Jr,{size:18,style:{color:"#666b7a"}})),S.createElement(Ie,{code:i}),S.createElement("textarea",{ref:o,defaultValue:(i!=null?i:"").replace(/\\n/g,`\r
`),id:"code-input",style:{padding:0,margin:0,width:0,height:0,opacity:0,border:"none",display:"block"}}),S.createElement(be,{sx:{position:"absolute",bottom:12,right:12,width:115},key:"copy",variant:"default",leftIcon:c?S.createElement(Qr,{size:18,style:{color:"green"}}):S.createElement(Xr,{size:18}),onClick:m},c?"Copied":"Copy"))):null};var sr=({resource:r,fields:n,isCustomPage:i,id:o})=>{var N;let u=D((N=r.label)!=null?N:r.name,"show"),a="record",c=[["useShow","@refinedev/core"],["Show","@refinedev/mantine"],["Title","@mantine/core"]],m=n.filter(e=>(e==null?void 0:e.relation)&&!(e!=null&&e.fieldable)&&(e==null?void 0:e.resource)).filter(Boolean).map(e=>{if((e==null?void 0:e.relation)&&!e.fieldable&&e.resource){if(e.multiple){c.push(["useMany","@refinedev/core"]);let d=l(a,e.key);return e.accessor&&(d=`${l(a,e.key)}?.map((item: any) => ${l("item",void 0,e.accessor)})`),`
                const { data: ${T(e.key,"Data")}, isLoading: ${T(e.key,"IsLoading")} } =
                useMany({
                    resource: "${e.resource.name}",
                    ids: ${d} || [],
                    queryOptions: {
                        enabled: !!${a},
                    },
                });
                `}return c.push(["useOne","@refinedev/core"]),`
                const { data: ${T(e.key,"Data")}, isLoading: ${T(e.key,"IsLoading")} } =
                useOne({
                    resource: "${e.resource.name}",
                    id: ${l(a,e.key,e.accessor,!1)} || "",
                    queryOptions: {
                        enabled: !!${a},
                    },
                });
            `}}).filter(Boolean),h=e=>{if(e.relation&&e.resource){let d=T(e.key,"Data"),t=T(e.key,"IsLoading");return e.multiple?(c.push(["TagField","@refinedev/mantine"],["Group","@mantine/core"]),f`
                <Title my="xs" order={5}>${g(e.key)}</Title>
                {${t} ? <>Loading...</> : (
                    <>
                    ${(()=>{var x,A;if(e.relationInfer)if((x=e.relationInfer)!=null&&x.accessor){if(Array.isArray(e.relationInfer.accessor))return"Not Handled.";{let w=K((A=e.resource)==null?void 0:A.name),F=l(w,void 0,e.relationInfer.accessor);return`
                                    <Group spacing="xs">
                                        {${d}?.data?.map((${w}: any) => <TagField key={${F}} value={${F}} />)}
                                    </Group>
                                    `}}else return"Not Handled.";else return"not-handled - relation with multiple but no resource"})()}
                    </>
                )}
                `):f`
                <Title my="xs" order={5}>${g(e.key)}</Title>
                {${t} ? <>Loading...</> : (
                    <>
                    ${(()=>{var x;return e.relationInfer?(x=e.relationInfer)!=null&&x.accessor?Array.isArray(e.relationInfer.accessor)?`{${l(`${d}?.data`,void 0,e.relationInfer.accessor,' + " " + ')}}`:`{${d}?.data?.${e.relationInfer.accessor}}`:`{${d}?.data}`:`{${d}?.data?.id}`})()}
                    </>
                )}
                
                `}},b=e=>{if(e.type==="text"){if(c.push(["TextField","@refinedev/mantine"]),e.multiple){c.push(["TagField","@refinedev/mantine"],["Group","@mantine/core"]);let d=l("item",void 0,e.accessor);return f`
                <Title my="xs" order={5}>${g(e.key)}</Title>
                <Group spacing="xs">
                    {${l(a,e.key)}?.map((item: any) => (
                        <TagField value={${d}} key={${d}} />
                    ))}
                </Group>
            `}return f`
                <Title my="xs" order={5}>${g(e.key)}</Title>
                <TextField value={${l(a,e.key,e.accessor)}} />
            `}},k=e=>{if(e.type==="image"){if(c.push(["Image","@mantine/core"]),e.multiple){c.push(["Group","@mantine/core"]);let d=l("item",void 0,e.accessor);return f`
                <Title my="xs" order={5}>${g(e.key)}</Title>
                <Group spacing="xs">
                    {${l(a,e.key)}?.map((item: any) => (
                        <Image sx={{ maxWidth: 200 }} src={${d}} key={${d}} />
                    ))}
                </Group>
            `}return f`
                <Title my="xs" order={5}>${g(e.key)}</Title>
                <Image sx={{ maxWidth: 200 }} src={${l(a,e.key,e.accessor," + ")}} />
                `}},$=e=>{if(e.type==="email"){if(c.push(["EmailField","@refinedev/mantine"]),e.multiple){c.push(["TagField","@refinedev/mantine"],["Group","@mantine/core"]);let d=l("item",void 0,e.accessor);return f`
                <Title my="xs" order={5}>${g(e.key)}</Title>
                <Group spacing="xs">
                    {${l(a,e.key)}?.map((item: any) => (
                        <TagField value={${d}} key={${d}} />
                    ))}
                </Group>
            `}return f`
                <Title my="xs" order={5}>${g(e.key)}</Title>
                <EmailField value={${l(a,e.key,e.accessor," + ")}} />
            `}},C=e=>{if(e.type==="url"){if(c.push(["UrlField","@refinedev/mantine"]),e.multiple){c.push(["TagField","@refinedev/mantine"],["Group","@mantine/core"]);let d=l("item",void 0,e.accessor);return f`
                <Title my="xs" order={5}>${g(e.key)}</Title>
                <Group spacing="xs">
                    {${l(a,e.key)}?.map((item: any) => (
                        <TagField value={${d}} key={${d}} />
                    ))}
                </Group>
            `}return f`
                <Title my="xs" order={5}>${g(e.key)}</Title>
                <UrlField value={${l(a,e.key,e.accessor," + ")}} />
            `}},V=e=>{if(e.type==="boolean"){if(c.push(["BooleanField","@refinedev/mantine"]),e.multiple){c.push(["TagField","@refinedev/mantine"],["Group","@mantine/core"]);let d=l("item",void 0,e.accessor);return f`
                <Title my="xs" order={5}>${g(e.key)}</Title>
                <Group spacing="xs">
                    {${l(a,e.key)}?.map((item: any, index: number) => (
                        <TagField value={${d}} key={index} />
                    ))}
                </Group>
            `}return f`
                <Title my="xs" order={5}>${g(e.key)}</Title>
                <BooleanField value={${l(a,e.key,e.accessor," && ")}} />
            `}},p=e=>{if(e.type==="date"){if(c.push(["DateField","@refinedev/mantine"]),e.multiple){c.push(["Group","@mantine/core"]);let d=l("item",void 0,e.accessor);return f`
                <Title my="xs" order={5}>${g(e.key)}</Title>
                <Group spacing="xs">
                    {${l(a,e.key)}?.map((item: any) => (
                        <DateField value={${d}} key={${d}} />
                    ))}
                </Group>
            `}return f`
                <Title my="xs" order={5}>${g(e.key)}</Title>
                <DateField value={${l(a,e.key,e.accessor," + ' ' + ")}} />
            `}},M=e=>{if(e.type==="richtext")return c.push(["MarkdownField","@refinedev/mantine"]),f`
                <Title mt="xs" order={5}>${g(e.key)}</Title>
                <MarkdownField value={${l(a,e.key,e.accessor,' + " " + ')}} />
            `},v=e=>{if(e.type==="number"){if(c.push(["NumberField","@refinedev/mantine"]),e.multiple){c.push(["TagField","@refinedev/mantine"],["Group","@mantine/core"]);let d=l("item",void 0,e.accessor);return f`
                <Title my="xs" order={5}>${g(e.key)}</Title>
                <Group spacing="xs">
                    {${l(a,e.key)}?.map((item: any) => (
                        <TagField value={${d}} key={${d}} />
                    ))}
                </Group>
            `}return f`
                <Title my="xs" order={5}>${g(e.key)}</Title>
                <NumberField value={${l(a,e.key,e.accessor,' + " " + ')} ?? ""} />
            `}},s=e=>{if(e)return f`
                ${e}
            `},I=n.map(e=>{switch(e==null?void 0:e.type){case"text":return s(b(e));case"number":return s(v(e));case"richtext":return s(M(e));case"email":return s($(e));case"image":return s(k(e));case"date":return s(p(e));case"boolean":return s(V(e));case"url":return s(C(e));case"relation":return s(h(e));default:return}});return O(c),f`
    ${B(c)}
    
    export const ${u} = () => {
        const { queryResult } = useShow(${i?`{ 
                    resource: "${r.name}", 
                    id: ${o}
                }`:""});
        const { data, isLoading } = queryResult;
    
        const ${a} = data?.data;
    
        ${m}

        return (
            <Show isLoading={isLoading}>
                ${I.join("")}
            </Show>
        );
    };
    `},Fe=z({type:"show",additionalScope:[["@refinedev/mantine","RefineMantine",Yr],["@mantine/core","MantineCore",et]],codeViewerComponent:H,loadingComponent:_,errorComponent:j,renderer:sr});import*as rt from"@refinedev/mantine";import*as tt from"@refinedev/react-table";import*as nt from"@mantine/core";import*as ot from"@tanstack/react-table";var U=r=>Array.isArray(r.accessor)||r.multiple?`accessorKey: "${r.key}"`:r.accessor?`accessorKey: "${R(r.key,void 0,r.accessor)}"`:`accessorKey: "${r.key}"`,ir=({resource:r,fields:n,isCustomPage:i})=>{var d;let o=D((d=r.label)!=null?d:r.name,"list"),u="tableData?.data",a=[["IResourceComponentsProps","@refinedev/core"],["useTable","@refinedev/react-table"],["ColumnDef","@tanstack/react-table"],["flexRender","@tanstack/react-table"],["ScrollArea","@mantine/core"],["List","@refinedev/mantine"],["Table","@mantine/core"],["Pagination","@mantine/core"],["Group","@mantine/core"],["EditButton","@refinedev/mantine"],["ShowButton","@refinedev/mantine"],["DeleteButton","@refinedev/mantine"]],c=n.filter(t=>(t==null?void 0:t.relation)&&!(t!=null&&t.fieldable)&&(t==null?void 0:t.resource)),y=c.filter(Boolean).map(t=>{if((t==null?void 0:t.relation)&&!t.fieldable&&t.resource){a.push(["GetManyResponse","@refinedev/core"]),a.push(["useMany","@refinedev/core"]);let x="";return t.multiple?x=`[].concat(...(${u}?.map((item) => ${l("item",t.key,t.accessor,!1)}) ?? []))`:x=`${u}?.map((item) => ${l("item",t.key,t.accessor,!1)}) ?? []`,`
                const { data: ${T(t.key,"Data")} } =
                useMany({
                    resource: "${t.resource.name}",
                    ids: ${x},
                    queryOptions: {
                        enabled: !!${u},
                    },
                });
                `}}).filter(Boolean),m=c==null?void 0:c.map(t=>{if(t&&t.resource)return T(t.key,"Data")}).filter(Boolean),h=t=>{var x;if(t.relation&&t.resource){let A=`${T(t.key,"Data")}?.data`;if(Array.isArray(t.accessor))return;let w=`id: "${t.key}"`,F=`header: "${g(t.key)}"`,G=U(t),W="";if(t.multiple){a.push(["TagField","@refinedev/mantine"]);let X="item";t!=null&&t.relationInfer&&(X=l("item",void 0,t.relationInfer.accessor)),W=`cell: function render({ getValue, table }) {
                    const meta = table.options.meta as {
                        ${T(t.key,"Data")}: GetManyResponse;
                    };

                    const ${T(t.key)} = getValue<any[]>()?.map((item) => {
                        return meta.${T(t.key,"Data")}?.data?.find(
                            (resourceItems) => resourceItems.id === ${l("item",void 0,t.accessor)}
                        );
                    })

                    return (
                        <Group spacing="xs">
                            {${T(t.key)}?.map((item, index) => (
                                <TagField key={index} value={${X}} />
                            ))}
                        </Group>
                    )
                }
            `}else t!=null&&t.relationInfer?W=`cell: function render({ getValue, table }) {
                        const meta = table.options.meta as {
                            ${T(t.key,"Data")}: GetManyResponse;
                        };

                        const ${T(t.key)} = meta.${A}?.find(
                            (item) => item.id === getValue<any>(),
                        );

                        return ${l(T(t.key),void 0,(x=t==null?void 0:t.relationInfer)==null?void 0:x.accessor)} ?? "Loading...";
                    },`:W="";return`
                {
                    ${w},
                    ${F},
                    ${G},
                    ${W}
                }
            `}},b=t=>{if(t.type==="image"){a.push(["Image","@mantine/core"]);let x=`id: "${t.key}"`,A=U(t),w=`header: "${g(t.key)}"`,F=f`
                cell: function render({ getValue }) {
                    ${t!=null&&t.accessor?"try {":""}
                        return <Image sx={{ maxWidth: "100px" }} src={${l("getValue<any>()",void 0,Array.isArray(t.accessor)?t.accessor:void 0," + ")}} />
                    ${t!=null&&t.accessor?" } catch (error) { return null; }":""}
                   
                }
            `;if(t.multiple){let G=l("item",void 0,t.accessor," + ");F=`
                    cell: function render({ getValue }) {
                        ${t!=null&&t.accessor?"try {":""}
                            return (
                                <Group spacing="xs">
                                    {getValue<any[]>()?.map((item, index) => (
                                        <Image src={${G}} key={index} sx={{ maxWidth: "100px" }} />
                                    ))}
                                </Group>
                            )
                        ${t!=null&&t.accessor?" } catch (error) { return null; }":""}
                    }
                `}return`
                {
                    ${x},
                    ${A},
                    ${w},
                    ${F}
                }
            `}},k=t=>{if(t.type==="email"){a.push(["EmailField","@refinedev/mantine"]);let x=`id: "${t.key}"`,A=U(t),w=`header: "${g(t.key)}"`,F=f`
                cell: function render({ getValue }) {
                    return <EmailField value={${l("getValue<any>()",void 0,Array.isArray(t.accessor)?t.accessor:void 0,' + " " + ')}} />
                }
            `;return t.multiple&&(a.push(["TagField","@refinedev/mantine"]),F=`
                    cell: function render({ getValue }) {
                        return (
                            <Group spacing="xs">
                                {getValue<any>()?.map((item, index) => (
                                    <TagField value={${l("item",void 0,t.accessor," + ")}} key={index} />
                                ))}
                            </Group>
                        )
                    }
                `),`
                {
                    ${x},
                    ${A},
                    ${w},
                    ${F}
                }
            `}},$=t=>{if(t.type==="url"){a.push(["UrlField","@refinedev/mantine"]);let x=`id: "${t.key}"`,A=U(t),w=`header: "${g(t.key)}"`,F=f`
                cell: function render({ getValue }) {
                    return <UrlField value={${l("getValue<any>()",void 0,Array.isArray(t.accessor)?t.accessor:void 0," + ")}} />
                }
            `;return t.multiple&&(a.push(["TagField","@refinedev/mantine"]),F=`
                    cell: function render({ getValue }) {
                        return (
                            <Group spacing="xs">
                                {getValue<any[]>()?.map((item, index) => (
                                    <TagField value={${l("item",void 0,t.accessor," + ")}} key={index} />
                                ))}
                            </Group>
                        )
                    }
                `),`
                {
                    ${x},
                    ${A},
                    ${w},
                    ${F}
                }
            `}},C=t=>{if((t==null?void 0:t.type)==="boolean"){a.push(["BooleanField","@refinedev/mantine"]);let x=`id: "${t.key}"`,A=U(t),w=`header: "${g(t.key)}"`,F=f`
                cell: function render({ getValue }) {
                    return <BooleanField value={${l("getValue<any>()",void 0,Array.isArray(t.accessor)?t.accessor:void 0," + ")}} />
                }
            `;return t.multiple&&(F=`
                    cell: function render({ getValue }) {
                        return (
                            <Group spacing="xs">
                                {getValue<any[]>()?.map((item, index) => (
                                    <BooleanField value={${l("item",void 0,t.accessor," + ")}} key={index} />
                                ))}
                            </Group>
                        )
                    }
                `),`
                {
                    ${x},
                    ${A},
                    ${w},
                    ${F}
                }
            `}},V=t=>{if(t.type==="date"){a.push(["DateField","@refinedev/mantine"]);let x=`id: "${t.key}"`,A=U(t),w=`header: "${g(t.key)}"`,F=f`
                cell: function render({ getValue }) {
                    return <DateField value={${l("getValue<any>()",void 0,Array.isArray(t.accessor)?t.accessor:void 0,' + " " + ')}} />
                }
            `;return t.multiple&&(F=`
                    cell: function render({ getValue }) {
                        return (
                            <Group spacing="xs">
                                {getValue<any[]>()?.map((item, index) => (
                                    <DateField value={${l("item",void 0,t.accessor," + ")}} key={index} />
                                ))}
                            </Group>
                        )
                    }
                `),`
                {
                    ${x},
                    ${A},
                    ${w},
                    ${F}
                }
            `}},p=t=>{if((t==null?void 0:t.type)==="richtext"){a.push(["MarkdownField","@refinedev/mantine"]);let x=`id: "${t.key}"`,A=U(t),w=`header: "${g(t.key)}"`,F=f`
                cell: function render({ getValue }) {
                    return <MarkdownField value={(${l("getValue<string>()",void 0,Array.isArray(t.accessor)?t.accessor:void 0)})?.slice(0, 80) + "..." } />
                }
            `;return t.multiple&&(F=`
                    cell: function render({ getValue }) {
                        return (
                            <Group spacing="xs">
                                {getValue<string[]>()?.map((item, index) => (
                                    <MarkdownField value={${l("item",void 0,t.accessor," + ")}} key={index} />
                                ))}
                            </Group>
                        )
                    }
                `),`
                {
                    ${x},
                    ${A},
                    ${w},
                    ${F}
                }
            `}},M=t=>{if(t&&(t.type==="text"||t.type==="number")){let x=`id: "${t.key}"`,A=U(t),w=`header: "${g(t.key)}"`,F="";return t.multiple&&(a.push(["TagField","@refinedev/mantine"]),F=`
                    cell: function render({ getValue }) {
                        return (
                            <Group spacing="xs">
                                {getValue<any[]>()?.map((item, index) => (
                                    <TagField value={${l("item",void 0,t.accessor,' + " " + ')}} key={index} />
                                ))}
                            </Group>
                        )
                    }
                `),!t.multiple&&Array.isArray(t.accessor)&&(F=`
                    cell: function render({ getValue }) {
                        return (
                            <>{${l("getValue()",t.key,t.accessor)}}</>
                        );
                    }
                `),`
                {
                    ${x},
                    ${A},
                    ${w},
                    ${F}
                }
            `}},{canEdit:v,canShow:s,canDelete:I}=r!=null?r:{};v&&a.push(["EditButton","@refinedev/mantine"]),s&&a.push(["ShowButton","@refinedev/mantine"]),I&&a.push(["DeleteButton","@refinedev/mantine"]);let N=v||s||I?f`
    {
        id: "actions",
        accessorKey: "id",
        header: "Actions",
        cell: function render({ getValue }) {
            return (
                <Group spacing="xs" noWrap>
                    ${s?f`
                    <ShowButton
                        hideText
                        recordItemId={getValue() as string}
                    />
                    `:""}
                    ${v?f`<EditButton
                        hideText
                        recordItemId={getValue() as string}
                    />`:""}
                    ${I?f`
                    <DeleteButton
                        hideText
                        recordItemId={getValue() as string}
                    />
                    `:""}
                </Group>
            );
        },
    },
        `:"",e=n.map(t=>{switch(t==null?void 0:t.type){case"text":case"number":return M(t);case"richtext":return p(t);case"email":return k(t);case"image":return b(t);case"date":return V(t);case"boolean":return C(t);case"url":return $(t);case"relation":return h(t);default:return}});return O(a),f`
    import React from "react";
    ${B(a)}
    
    export const ${o}: React.FC<IResourceComponentsProps> = () => {
        const columns = React.useMemo<ColumnDef<any>[]>(() => [
            ${[...e,N].filter(Boolean).join(",")}
        ], []);

        const {
            getHeaderGroups,
            getRowModel,
            setOptions,
            refineCore: {
                setCurrent,
                pageCount,
                current,
                tableQueryResult: { data: tableData },
            },
        } = useTable({
            columns,
            ${i?`
            refineCoreProps: {
                resource: "${r.name}",
            }
            `:""}
        });

        ${y}

        setOptions((prev) => ({
            ...prev,
            meta: {
                ...prev.meta,
                ${m.join(", ")}
            },
        }));

        return (
            <List>
                <ScrollArea>
                    <Table highlightOnHover>
                        <thead>
                            {getHeaderGroups().map((headerGroup) => (
                                <tr key={headerGroup.id}>
                                    {headerGroup.headers.map((header) => {
                                        return (
                                            <th key={header.id}>
                                                {!header.isPlaceholder && (
                                                    flexRender(
                                                        header.column
                                                            .columnDef
                                                            .header,
                                                        header.getContext(),
                                                    )
                                                )}
                                            </th>
                                        );
                                    })}
                                </tr>
                            ))}
                        </thead>
                        <tbody>
                            {getRowModel().rows.map((row) => {
                                return (
                                    <tr key={row.id}>
                                        {row.getVisibleCells().map((cell) => {
                                            return (
                                                <td key={cell.id}>
                                                    {flexRender(
                                                        cell.column.columnDef.cell,
                                                        cell.getContext(),
                                                    )}
                                                </td>
                                            );
                                        })}
                                    </tr>
                                );
                            })}
                        </tbody>
                    </Table>
                </ScrollArea>    
                <br />
                <Pagination
                    position="right"
                    total={pageCount}
                    page={current}
                    onChange={setCurrent}
                />
            </List>
        );
    };
    `},Ce=z({type:"list",additionalScope:[["@refinedev/mantine","RefineMantine",rt],["@refinedev/react-table","RefineReactTable",tt],["@mantine/core","MantineCore",nt],["@tanstack/react-table","TanstackReactTable",ot]],codeViewerComponent:H,loadingComponent:_,errorComponent:j,renderer:ir});import*as at from"@refinedev/mantine";import*as st from"@mantine/core";var cr=({resource:r,fields:n,isCustomPage:i})=>{var v;let o=D((v=r.label)!=null?v:r.name,"create"),u=[["Create","@refinedev/mantine"],["useForm","@refinedev/mantine"]],a={},y=n.filter(s=>(s==null?void 0:s.relation)&&!(s!=null&&s.fieldable)&&(s==null?void 0:s.resource)).filter(Boolean).map(s=>{if((s==null?void 0:s.relation)&&!s.fieldable&&s.resource)return u.push(["useSelect","@refinedev/mantine"]),`
                const { selectProps: ${T(s.key,"SelectProps")} } =
                useSelect({
                    resource: "${s.resource.name}",
                    ${ee(s)}
                });
            `}).filter(Boolean),m=s=>{if(s.relation&&s.resource){a={...a,[s.key]:s.multiple?[]:s.accessor?{[typeof s.accessor=="string"?s.accessor:s.accessor[0]]:""}:""};let I=T(s.key,"SelectProps");return s.multiple?(u.push(["MultiSelect","@mantine/core"]),f`
                    <MultiSelect mt="sm" label="${g(s.key)}" {...getInputProps("${R(s.key,void 0)}")} {...${I}} filterDataOnExactSearchMatch={undefined} />
                `):(u.push(["Select","@mantine/core"]),f`
                <Select mt="sm" label="${g(s.key)}" {...getInputProps("${R(s.key,void 0,s.accessor)}")} {...${I}} />
            `)}},h=s=>{if(s.type==="text"||s.type==="email"||s.type==="date"||s.type==="url")return q(s.key)||(u.push(["TextInput","@mantine/core"]),a={...a,[s.key]:s.multiple?[]:""},s.multiple)?void 0:f`
                <TextInput mt="sm" label="${g(s.key)}" {...getInputProps("${R(s.key,void 0,s.accessor)}")} />
            `},b=s=>{if(s.type==="image")return f`
            {/* 
                Dropzone component is not included in "@refinedev/mantine" package.
                To use a <Dropzone> component, you can follow the official documentation for Mantine.
                
                Docs: https://mantine.dev/others/dropzone/
            */}
            `},k=s=>{if(s.type==="boolean")return u.push(["Checkbox","@mantine/core"]),a={...a,[s.key]:s.multiple?[]:""},s.multiple?void 0:f`
                <Checkbox mt="sm" label="${g(s.key)}" {...getInputProps("${R(s.key,void 0,s.accessor)}", { type: 'checkbox' })} />
            `},$=s=>{if(s.type==="date"){let I=h(s);return`
                {/* 
                    DatePicker component is not included in "@refinedev/mantine" package.
                    To use a <DatePicker> component, you can follow the official documentation for Mantine.
                    
                    Docs: https://mantine.dev/dates/date-picker/
                */}
                ${I!=null?I:""}
            `}},C=s=>{if(s.type==="richtext")return u.push(["Textarea","@mantine/core"]),a={...a,[s.key]:s.multiple?[]:""},s.multiple?void 0:f`
                <Textarea mt="sm" label="${g(s.key)}" autosize {...getInputProps("${R(s.key,void 0,s.accessor)}")} />
            `},V=s=>{if(s.type==="number")return q(s.key)||(u.push(["NumberInput","@mantine/core"]),a={...a,[s.key]:s.multiple?[]:""},s.multiple)?void 0:f`
                <NumberInput mt="sm" label="${g(s.key)}" {...getInputProps("${R(s.key,void 0,s.accessor)}")}/>
            `},p=s=>{if(s)return f`
                ${s}
        `},M=n.map(s=>{switch(s==null?void 0:s.type){case"url":case"text":case"email":return p(h(s));case"number":return p(V(s));case"richtext":return p(C(s));case"image":return p(b(s));case"date":return p($(s));case"boolean":return p(k(s));case"relation":return p(m(s));default:return}});return O(u),f`
    ${B(u)}
    
    export const ${o} = () => {
        const { getInputProps, saveButtonProps, setFieldValue, refineCore: { formLoading } } = useForm({
            initialValues: ${JSON.stringify(a)},
            ${i?`refineCoreProps: {
                        resource: "${r.name}",
                        action: "create",  
                    }`:""}
        });
    
        ${y}

        return (
            <Create isLoading={formLoading} saveButtonProps={saveButtonProps}>
                ${M.join("")}
            </Create>
        );
    };
    `},ve=z({type:"create",additionalScope:[["@refinedev/mantine","RefineMantine",at],["@mantine/core","MantineCore",st]],codeViewerComponent:H,loadingComponent:_,errorComponent:j,renderer:cr});import*as it from"@refinedev/mantine";import*as ct from"@mantine/core";var ur=({resource:r,fields:n,isCustomPage:i,id:o})=>{var I,N;let u=D((I=r.label)!=null?I:r.name,"edit"),a=T((N=r.label)!=null?N:r.name,"Data"),c=[["Edit","@refinedev/mantine"],["useForm","@refinedev/mantine"]],y={},h=n.filter(e=>(e==null?void 0:e.relation)&&!(e!=null&&e.fieldable)&&(e==null?void 0:e.resource)).filter(Boolean).map(e=>{if((e==null?void 0:e.relation)&&!e.fieldable&&e.resource){c.push(["useSelect","@refinedev/mantine"]);let d=l(a,e.key,e.accessor,!1);e.multiple&&e.accessor&&(d=`${l(a,e.key)}?.map((item: any) => ${l("item",void 0,e.accessor)})`);let t="";return e.multiple&&e.accessor&&(t=`React.useEffect(() => {
                        setFieldValue("${e.key}", ${d});
                    }, [${a}]);`),`
                const { selectProps: ${T(e.key,"SelectProps")} } =
                useSelect({
                    resource: "${e.resource.name}",
                    defaultValue: ${d},
                    ${ee(e)}
                });

                ${t}
            `}}).filter(Boolean),b=e=>{if(e.relation&&e.resource){y={...y,[e.key]:e.multiple?[]:e.accessor?{[typeof e.accessor=="string"?e.accessor:e.accessor[0]]:""}:""};let d=T(e.key,"SelectProps");return e.multiple?(c.push(["MultiSelect","@mantine/core"]),f`
                    <MultiSelect mt="sm" label="${g(e.key)}" {...getInputProps("${R(e.key,void 0)}")} {...${d}} filterDataOnExactSearchMatch={undefined} />
                `):(c.push(["Select","@mantine/core"]),f`
                <Select mt="sm" label="${g(e.key)}" {...getInputProps("${R(e.key,void 0,e.accessor)}")} {...${d}} />
            `)}},k=e=>{if(e.type==="text"||e.type==="email"||e.type==="date"||e.type==="url"){if(c.push(["TextInput","@mantine/core"]),y={...y,[e.key]:e.multiple?[]:""},e.multiple){c.push(["Group","@mantine/core"]);let d=R(e.key,"${index}",e.accessor);return`
                <Group spacing="xs">
                    {${l(a,e.key)}?.map((item: any, index: number) => (
                        <TextInput mt="sm" key={index} label={\`${g(e.key)} \${index + 1} \`} {...getInputProps(\`${d}\`)} />
                    ))}
                </Group>
                `}return f`
                <TextInput mt="sm" ${q(e.key)?"disabled":""} label="${g(e.key)}" {...getInputProps("${R(e.key,void 0,e.accessor)}")} />
            `}},$=e=>{if(e.type==="image")return f`
            {/* 
                Dropzone component is not included in "@refinedev/mantine" package.
                To use a <Dropzone> component, you can follow the official documentation for Mantine.
                
                Docs: https://mantine.dev/others/dropzone/
            */}
            `},C=e=>{if(e.type==="boolean"){if(c.push(["Checkbox","@mantine/core"]),y={...y,[e.key]:e.multiple?[]:""},e.multiple){c.push(["Group","@mantine/core"]);let d=R(e.key,"${index}",e.accessor);return`
                <Group spacing="xs">
                    {${l(a,e.key)}?.map((item: any, index: number) => (
                        <Checkbox mt="sm" key={index} label={\`${g(e.key)} \${index + 1} \`} {...getInputProps(\`${d}\`, { type: 'checkbox' })} />
                    ))}
                </Group>
                `}return f`
                <Checkbox mt="sm" label="${g(e.key)}" {...getInputProps("${R(e.key,void 0,e.accessor)}", { type: 'checkbox' })} />
            `}},V=e=>{if(e.type==="date")return`
                {/* 
                    DatePicker component is not included in "@refinedev/mantine" package.
                    To use a <DatePicker> component, you can follow the official documentation for Mantine.
                    
                    Docs: https://mantine.dev/dates/date-picker/
                */}
                ${k(e)}
            `},p=e=>{if(e.type==="richtext"){if(c.push(["Textarea","@mantine/core"]),y={...y,[e.key]:e.multiple?[]:""},e.multiple){c.push(["Group","@mantine/core"]);let d=R(e.key,"${index}",e.accessor);return`
                <Group spacing="xs">
                    {${l(a,e.key)}?.map((item: any, index: number) => (
                        <Textarea mt="sm" key={index} label={\`${g(e.key)} \${index + 1} \`} {...getInputProps(\`${d}\`)} />
                    ))}
                </Group>
                `}return f`
                <Textarea mt="sm" label="${g(e.key)}" autosize {...getInputProps("${R(e.key,void 0,e.accessor)}")} />
            `}},M=e=>{if(e.type==="number"){if(c.push(["NumberInput","@mantine/core"]),y={...y,[e.key]:e.multiple?[]:""},e.multiple){c.push(["Group","@mantine/core"]);let d=R(e.key,"${index}",e.accessor);return`
                <Group spacing="xs">
                    {${l(a,e.key)}?.map((item: any, index: number) => (
                        <NumberInput mt="sm" key={index} label={\`${g(e.key)} \${index + 1} \`} {...getInputProps(\`${d}\`)} />
                    ))}
                </Group>
                `}return f`
                <NumberInput mt="sm" ${q(e.key)?"disabled":""} label="${g(e.key)}" {...getInputProps("${R(e.key,void 0,e.accessor)}")}/>
            `}},v=e=>{if(e)return f`
                ${e}
        `},s=n.map(e=>{switch(e==null?void 0:e.type){case"url":case"text":case"email":return v(k(e));case"number":return v(M(e));case"richtext":return v(p(e));case"image":return v($(e));case"date":return v(V(e));case"boolean":return v(C(e));case"relation":return v(b(e));default:return}});return O(c),f`
    ${B(c)}
    
    export const ${u} = () => {
        const { getInputProps, saveButtonProps, setFieldValue, refineCore: { queryResult } } = useForm({
            initialValues: ${JSON.stringify(y)},
            ${i?`refineCoreProps: {
                        resource: "${r.name}",
                        id: ${o},
                        action: "edit",  
                    }`:""}
        });
    
        const ${a} = queryResult?.data?.data;
    
        ${h}

        return (
            <Edit saveButtonProps={saveButtonProps}>
                ${s.join("")}
            </Edit>
        );
    };
    `},Te=z({type:"edit",additionalScope:[["@refinedev/mantine","RefineMantine",it],["@mantine/core","MantineCore",ct]],codeViewerComponent:H,loadingComponent:_,errorComponent:j,renderer:ur});var va=({action:r,id:n,...i})=>{let{action:o,id:u}=ut();switch(r!=null?r:o){case"show":return ae.createElement(Fe,{...i,id:n!=null?n:u});case"create":return ae.createElement(ve,{...i,id:n!=null?n:u});case"edit":return ae.createElement(Te,{...i,id:n!=null?n:u});default:return ae.createElement(Ce,{...i,id:n!=null?n:u})}};export{ve as MantineCreateInferencer,cr as MantineCreateRenderer,Te as MantineEditInferencer,ur as MantineEditRenderer,va as MantineInferencer,Ce as MantineListInferencer,ir as MantineListRenderer,Fe as MantineShowInferencer,sr as MantineShowRenderer};
//# sourceMappingURL=mantine.js.map