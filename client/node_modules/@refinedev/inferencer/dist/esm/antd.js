import se from"react";import{useResource as nt}from"@refinedev/core";import*as Wr from"@refinedev/antd";import*as Zr from"antd";import D from"react";import{useResource as sr}from"@refinedev/core";var pr=/(image|photo|avatar|url|logo|cover|thumbnail|icon)/i,ce=(e,n)=>{let c=["name","label","title","count","content","username","nickname","login","firstName","lastName","url"];pr.test(e)&&c.unshift("url");let a=c.find(u=>u in n&&!!n[u]);if(a)return a==="firstName"&&"lastName"in n?["firstName","lastName"]:a};import{pickNotDeprecated as lr}from"@refinedev/core";function ue(e,n,c){if(n)return n;let a=c==null?void 0:c.find(i=>i.name===e),u=lr(a==null?void 0:a.meta,a==null?void 0:a.options);return u!=null&&u.dataProviderName?u.dataProviderName:"default"}var J=e=>{var n;return(n=e==null?void 0:e.options)==null?void 0:n.dataProviderName};var me=e=>{let n=[...e].filter(Boolean).sort((c,a)=>(a.priority||0)-(c.priority||0))[0];return n||null};import dr from"prettier/standalone";import yr from"prettier/parser-typescript";var pe=e=>{try{return dr.format(e,{parser:"typescript",plugins:[yr],arrowParens:"always",trailingComma:"all",semi:!0,tabWidth:4,printWidth:80})}catch(n){return console.warn("Formatting error in inferencer",n),e}};var le=e=>e.replace(/ {2,}/g," ").replace(/\n{2,}/g,`
`);var de=/(-id|-ids|_id|_ids|Id|Ids|ID|IDs)(\[\])?$/,Pe=(e,n)=>{let c=de.test(e),a=typeof n=="string"||typeof n=="number",u=Array.isArray(n)&&n.every(i=>typeof i=="string"||typeof i=="number");return c&&a||c&&u?{key:e,relation:!0,multiple:!!u,type:"relation",priority:1}:!1};var P=e=>e.replace(de,"");var y=e=>P(e).replace(/([a-z])([A-Z])/g,"$1 $2").replace(/_/g," ").replace(/-/g," ").split(" ").map(m=>m.charAt(0).toUpperCase()+m.slice(1)).join(" ");var ye=e=>e.replace(/export\s+(const|let|var|type|interface|function|class)\s+(\w+)\s*(=|:)\s*/g,"$1 $2 = ").split(`
`).filter(u=>!u.trim().startsWith("export default")).join(`
`);var Le=/import(?:(?:(?:[ \n\t]+([^ *\n\t\{\},]+)[ \n\t]*(?:,|[ \n\t]+))?([ \n\t]*\{(?:[ \n\t]*[^ \n\t"'\{\}]+[ \n\t]*,?)+\})?[ \n\t]*)|[ \n\t]*\*[ \n\t]*as[ \n\t]+([^ \n\t\{\}]+)[ \n\t]+)from[ \n\t]*(?:['"])([^'"\n]+)(?:['"])(?:;?)/g,fr=/import[ \n\t](?:['"])([^'"\n]+)(?:['"])(?:;?)/g,gr=/((?:\w|\s|_)*)( as )((?:\w|\s|_)*)( |,)?/g,fe=(e,n={})=>{let c=e.matchAll(Le),a=new Set;for(let u of c){let[,i,m,g,d]=u;if(d in n){let $=n[d];if(d==="react")continue;i&&a.add(`const { default: ${i} } = ${$};`),m&&a.add(`const${m.replace(gr,"$1: $3$4")} = ${$};`),g&&a.add(`const ${g} = ${$};`)}}return le(`
    ${Array.from(a).join(`
`)}
    ${e.replace(Le,"").replace(fr,"")}
    `)};import oe from"pluralize";var ge=(e,n)=>e?n.find(a=>{let u=P(e.key);return a.name===u||a.name===(oe.isPlural(u)?u:oe.plural(u))||a.name===(oe.isSingular(u)?u:oe.singular(u))}):void 0;import Ir from"pluralize";var L=(e,n,c="Inferred")=>{let a=e.replace(/[^a-zA-Z0-9]/g," "),u=Ir.singular(a),m=y(u).replace(/ /g,"")||c,g=n.charAt(0).toUpperCase()+n.slice(1);return/^[a-zA-Z]/.test(m)?`${m}${g}`:`${g}${m}`};var $r=e=>e?Array.isArray(e)?e.join(""):typeof e=="string"?e:typeof e=="object"||typeof e=="function"?e.toString():typeof e=="number"?String(e):typeof e=="boolean"&&e?"true":e:"",l=(e,...n)=>e.reduce((a,u,i)=>`${a}${u}${$r(n[i])}`,"").trim();var Ie=(e,n)=>`
    ${e!=null?e:""}
    
    render(typeof ${n} !== "undefined" ? <${n} /> : <></>);
    `;var $e=e=>e==null?void 0:e.replace(/(\/\* hidden-start \*\/)(.|\n)*?(\/\* hidden-end \*\/)/g,"");var vr=/^[a-zA-Z_$][a-zA-Z_$0-9]*$/,H=e=>vr.test(e);function ve(e,n,c){let a=`${e}`;return n&&(a+="?.",H(n)?a+=n:a+=`['${n}']`),c&&(a+="?.",H(c)?a+=c:a+=`['${c}']`),a}function Fr(e,n,c){return(c!=null?c:[]).map(u=>ve(e,n,u))}var p=(e,n,c,a=' + " " + ')=>Array.isArray(c)?a?Fr(e,n,c).join(a):ve(e,n,c[0]):ve(e,n,c);var j=e=>{let n=e.reduce((a,[u,i,m])=>(a[i]||(a[i]=[]),a[i].includes(u)||(m?a[i].push([u,!0]):a[i].push(u)),a),{});return Object.entries(n).map(([a,u])=>{let i=u.find($=>Array.isArray($)&&$[1]),m=u.filter($=>typeof $=="string"),g=i?`${i[0]}`:"",d=m.length?`{ ${m.join(", ")} }`:"";return`import ${g}${g&&d?", ":""}${d} from "${a}";`})};import Ee from"pluralize";var M=(e="")=>Ee.isSingular(e)?e:Ee.singular(e);import De from"pluralize";var Z=(e="")=>De.isPlural(e)?e:De.plural(e);var hr=/^id$/i,G=e=>hr.test(e);var Fe=e=>e.relationInfer&&e.relationInfer.accessor?Array.isArray(e.relationInfer.accessor)?`optionLabel: "${e.relationInfer.accessor[0]}",`:e.relationInfer.accessor!=="title"?`optionLabel: "${e.relationInfer.accessor}",`:"":"";var O=e=>{};var R=(e,n="")=>{if(Number.isInteger(Number(e)))return n.charAt(0).toLowerCase()+n.slice(1)+e;let a=e.replace(/^\d+/,"").replace(/[^a-zA-Z0-9]/g,"-"),u=y(a).replace(/ /g,"");return`${u.charAt(0).toLowerCase()+u.slice(1)}${n.charAt(0).toUpperCase()+n.slice(1)}`};var Ve=e=>{let n=(c,a,u,i=n)=>{let m=e.map(d=>d(c,a,u,i));return me(m)};return n};var Be=e=>(c,a,u,i,m)=>e.reduce((g,d)=>d(g,a,u,i,m),c);var je=(e,n,c,a)=>{let u=Array.isArray(n),i=Array.isArray(n)&&n.every(m=>typeof m=="string"||typeof m=="number");if(u){if(!i){let g=a(e,n[0],c,a);return g?{...g,key:e,multiple:!0,priority:1}:!1}let m=a(e,n[0],c,a)||{type:"string"};return{key:e,multiple:!0,priority:1,type:m==null?void 0:m.type}}return!1};var Oe=(e,n)=>typeof n=="boolean"?{key:e,type:"boolean"}:!1;import Me from"dayjs";var xr=/(_at|_on|At|On|AT|ON)(\[\])?$/,kr=["/",":","-","."],_e=(e,n)=>{let c=xr.test(e)&&Me(n).isValid(),a=typeof n=="string"&&Me(n).isValid();return typeof n=="string"&&kr.some(i=>n.includes(i))&&(c||a)?{key:e,type:"date",priority:1}:!1};var br=/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,Ue=(e,n)=>typeof n=="string"&&br.test(n)?{key:e,type:"email",priority:1}:!1;var Cr=/\.(gif|jpe?g|tiff?|png|webp|bmp|svg)$/i,Ke=(e,n)=>typeof n=="string"&&Cr.test(n)?{key:e,type:"image",priority:2}:!1;var ze=(e,n)=>typeof n>"u"||n===null?null:!1;var qe=(e,n)=>{let c=typeof n=="string"&&n.length>0,a=!isNaN(n);return c&&a||typeof n=="number"?{key:e,type:"number"}:!1};var Ar=/id$/i,He=(e,n,c,a)=>{let u=n!==null,i=!Array.isArray(n);if(u&&i&&typeof n=="object"){if(Object.keys(n).length===1&&Ar.test(Object.keys(n)[0]))return{key:e,type:"relation",relation:!0,accessor:"id",priority:1};let d=ce(e,n);if((d?d.length>0:!1)&&d){let x=d&&Array.isArray(d)?d[0]:d,h=a(x,n[x],n,a);if(h){let F=Array.isArray(d)?d.map(k=>h.accessor?`${k}.${Array.isArray(h.accessor)?h.accessor[0]:h.accessor}`:k):h.accessor?Array.isArray(h.accessor)?`${d}.${h.accessor[0]}`:`${d}.${h.accessor}`:d;return{...h,fieldable:!0,key:e,accessor:F,priority:1}}}return{key:e,fieldable:!1,type:"object",priority:1}}return!1};var We=(e,n)=>typeof n=="string"&&n.length>100?{key:e,type:"richtext",priority:1}:!1;var Ze=(e,n)=>typeof n=="string"?{key:e,type:"text"}:!1;var Tr=/^(https?|ftp):\/\/(-\.)?([^\s/?\.#-]+\.?)+(\/[^\s]*)?$/i,Ge=(e,n)=>typeof n=="string"&&Tr.test(n)?{key:e,type:"url",priority:1}:!1;var Xe=[je,Oe,_e,Ue,Ke,ze,qe,He,Pe,We,Ze,Ge];var Ye=(e,n,c,a)=>e.map(i=>{if(!i.relation&&(i.type==="text"||i.type==="richtext"||i.type==="number")&&!i.canRelation){let m=/^[a-z0-9-]+$/,g=F=>m.test(`${F}`),d=i.key.toLowerCase()!=="id";return!(!i.accessor||typeof i.accessor=="string")||!d?i:(i.multiple?a[i.key]:[a[i.key]]).every(F=>g(i.accessor?F[i.accessor]:F))?{...i,canRelation:!0}:i}return i});var wr=/(image|photo|avatar|cover|thumbnail|icon)/i,Je=e=>e.map(c=>c.type==="url"&&wr.test(c.key)?{...c,type:"image"}:c);var Qe=(e,n)=>e.map(a=>{let u=ge(a,n);return u?{...a,relation:!0,type:"relation",resource:u}:a});var er=(e,n,c,a,u)=>e.map(m=>{if(m.relation&&m.type==="relation"&&!m.resource){let g=m.accessor?a[m.key][m.accessor]:a[m.key],d=u(m.key,g,a,u);if(d&&d.type!=="relation")return{...m,fieldable:!0,relation:!1,type:d.type,canRelation:!0}}return m});var rr=[Je,Qe,er,Ye];import Q,{useEffect as Rr}from"react";import Sr,{defaultProps as Nr}from"prism-react-renderer";import Pr from"prism-react-renderer/themes/vsDark";var he=({code:e,wrapperProps:n})=>(Rr(()=>{var a;let c=document.createElement("style");c.appendChild(document.createTextNode(`
                #code-highlight::-webkit-scrollbar {-webkit-appearance: none; height: 7px; width: 7px;}
                #code-highlight::-webkit-scrollbar-thumb {background-color: #666b7a;}
                #code-highlight::-webkit-scrollbar-corner {background-color: rgb(30, 30, 30);}
                `)),(a=document.getElementById("code-highlight"))==null||a.appendChild(c)},[]),Q.createElement("div",{id:"code-highlight",style:{maxHeight:"75vh",height:"100%",overflow:"auto",backgroundColor:"rgb(30, 30, 30)"},...n!=null?n:{}},Q.createElement(Sr,{...Nr,theme:Pr,code:e,language:"tsx"},({className:c,style:a,tokens:u,getLineProps:i,getTokenProps:m})=>Q.createElement("pre",{className:c,style:{...a,padding:"14px 14px 14px 14px",margin:"0",width:"100%",boxSizing:"border-box"}},u.map((g,d)=>Q.createElement("div",{key:d,...i({line:g,key:d})},g.map(($,x)=>Q.createElement("span",{key:x,...m({token:$,key:x})}))))))));import E from"react";import*as Lr from"@refinedev/core";import{LivePreview as Er,LiveProvider as Dr}from"@aliemir/react-live";var tr=[["react","React",E],["@refinedev/core","RefineCore",Lr]],xe=E.createContext({}),ke=({fetchError:e,code:n,additionalScope:c,errorComponent:a})=>{var g;let u=(g=n&&ye(fe(n,[...tr,...c!=null?c:[]].reduce((d,[$,x,h,F])=>F?d:{...d,[$]:x},{}))))!=null?g:"",i=E.useMemo(()=>({React:E,...E,...[...tr,...c!=null?c:[]].reduce((d,[$,x,h])=>({...d,[x]:h}),{})}),[c]),m=E.useMemo(()=>()=>{let{error:$}=E.useContext(xe);return a?E.createElement(a,{error:$?`<p>An error occured while rendering the generated component.You can check the generated code from the below "Show Code" button and fix the error manually.</p>
                                    <p>If you think this is a bug, please report the issue at <a target="_blank" rel="noopener noreferrer" href="https://github.com/refinedev/refine/issues">https://github.com/refinedev/refine/issues</a></p>
                                    <p>Exception:</p>
                                    <code>${$}</code>`:typeof e=="string"?e:e?`<p>Something went wrong while fetching the resource data.</p>
                                    <p>To learn more about the Inferencer, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`:void 0}):null},[a,e]);return E.createElement(Dr,{Context:xe,code:u,scope:i,noInline:!0},!e&&E.createElement(Er,{Context:xe}),E.createElement(m,null))};import X from"react";import{useDataProvider as Vr,useResource as Br}from"@refinedev/core";var nr=(e,n,c)=>{let{resource:a,id:u,resources:i}=Br(n),m=c!=null?c:u,g=Vr(),[d,$]=X.useState(void 0),[x,h]=X.useState(void 0),[F,k]=X.useState(!0),[N,t]=X.useState(!1),A=X.useCallback(async w=>{var o,I;let s=(o=J(a))!=null?o:ue(a==null?void 0:a.name,void 0,i),f=g(s);t(!0),$(void 0);try{if((e==="list"||e==="create")&&a){let v=(I=(await f.getList({resource:a==null?void 0:a.name})).data)==null?void 0:I[0];v||$(`<p>No records/data found for resource "${a==null?void 0:a.name}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),h(v),setTimeout(()=>{t(!1)},500)}if((e==="edit"||e==="show")&&w&&a){let v=(await f.getOne({resource:a==null?void 0:a.name,id:w})).data;v||$(`<p>No records/data found for resource "${a==null?void 0:a.name}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),h(v),setTimeout(()=>{t(!1)},500)}}catch(r){console.warn("An error occured while fetching the resource data. Please check the error message below:",r),$(`<p>Something went wrong while fetching the resource data.</p>
                    <p>Please check your data provider and API for resource "${a==null?void 0:a.name}".</p>
                    <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),setTimeout(()=>{t(!1)},500)}},[e,g,a,i]);return X.useEffect(()=>{k(!1),!N&&!x&&A(m)},[A,m]),{data:x,loading:N,initial:F,error:d}};import ee from"react";import{useDataProvider as jr}from"@refinedev/core";import{get as or}from"lodash";var ar=({record:e,fields:n,infer:c})=>{let a=jr(),[u,i]=ee.useState([]),[m,g]=ee.useState(!0),[d,$]=ee.useState(!1),x=ee.useCallback(async h=>{console.groupCollapsed("@refinedev/inferencer is trying to detect relations");let F=[];$(!0);try{let k=h.map(async t=>{if(t&&(t.relation||t.canRelation)&&e){let A=J(t.resource),w=a(A),s=Array.isArray(t.accessor)?void 0:t.multiple?e[t.key].map(f=>t.accessor?or(f,t.accessor):f)[0]:t.accessor?or(e[t.key],t.accessor):e[t.key];if(s&&t.resource)try{let{data:f}=await w.getOne({resource:t.resource.name,id:s});F.push({status:"success",resource:t.resource.name,field:t.key});let o=c("__",f,{},c);return{...t,relationInfer:o}}catch{return F.push({status:"error",resource:t.resource.name,field:t.key}),{...t,relationInfer:null}}if(s){let f,o;try{let{data:v}=await w.getOne({resource:Z(P(t.key)),id:s});F.push({status:"success",resource:Z(P(t.key)),field:t.key}),f=v,o=!0}catch{F.push({status:"error",resource:Z(P(t.key)),field:t.key});try{let{data:b}=await w.getOne({resource:M(P(t.key)),id:s});F.push({status:"success",resource:M(P(t.key)),field:t.key}),f=b,o=!1}catch{return F.push({status:"error",resource:M(P(t.key)),field:t.key}),{...t,relationInfer:null}}}let I=c("__",f,{},c),r=P(t.key);return{...t,relation:!0,type:"relation",resource:{name:o?Z(r):M(r)},fieldable:!1,canRelation:void 0,relationInfer:I}}return{...t,relationInfer:null}}return t}),N=await Promise.all(k);i(N.filter(t=>t)),setTimeout(()=>{$(!1)},500)}catch{setTimeout(()=>{$(!1)},500)}setTimeout(()=>{console.log(`Tried to detect relations with ${F.length} attempts and succeeded with ${F.filter(k=>k.status==="success").length} attempts.`),console.groupEnd()},500)},[a,e]);return ee.useEffect(()=>{g(!1),!d&&n&&n.length>0&&u.length===0&&x(n)},[x,d,n,x]),{fields:u,loading:d,initial:m}};var _=({type:e,additionalScope:n=[],customElements:c=[],fieldTransformers:a=[],renderer:u,loadingComponent:i,errorComponent:m,codeViewerComponent:g})=>{let d=Ve([...Xe,...c]),$=Be([...rr,...a]),x=({resourceName:F,fieldTransformer:k,id:N})=>{var T,re,Y,te,ne,q;let{resource:t,resources:A}=sr(F),{resource:w}=sr(),{data:s,loading:f,initial:o,error:I}=nr(e,F!=null?F:t==null?void 0:t.name,N),r=D.useMemo(()=>{if(s){let W=Object.keys(s).map(B=>{let ie=s[B];return d(B,ie,s,d)}).filter(Boolean);if(t){let B=$(W,A,t,s,d);return k?B.flatMap(Se=>{let Ne=k(Se);return Ne?[Ne]:[]}):B}return[]}return[]},[s,A,t,k]),{fields:v,loading:b}=ar({record:s,fields:r,infer:d}),C=D.useMemo(()=>!f&&!b&&!o&&t?u({resource:t,resources:A,fields:v,infer:d,isCustomPage:t.name!==(w==null?void 0:w.name),id:N}):"",[t,A,v,f,b]);return D.createElement(D.Fragment,null,i&&(f||b)&&D.createElement(i,null),!f&&!b&&D.createElement(D.Fragment,null,D.createElement(ke,{fetchError:!f&&I?I:!f&&!o&&!s,code:Ie(C,L((q=(ne=(te=(Y=(T=t==null?void 0:t.meta)==null?void 0:T.label)!=null?Y:(re=t==null?void 0:t.options)==null?void 0:re.label)!=null?te:t==null?void 0:t.label)!=null?ne:t==null?void 0:t.name)!=null?q:"Resource",e)),errorComponent:m,additionalScope:n}),g&&D.createElement(g,{code:$e(C),loading:f||b})))};return({name:F,resource:k,fieldTransformer:N,id:t})=>D.createElement(x,{fieldTransformer:N,resourceName:k!=null?k:F,key:k!=null?k:F,id:t})};import ae from"react";import{Alert as Or,Row as Mr,Col as _r}from"antd";var U=({error:e})=>e?ae.createElement(Mr,{justify:"center",align:"middle",style:{minHeight:"200px"}},ae.createElement(_r,null,ae.createElement(Or,{message:"Error",description:ae.createElement("div",{dangerouslySetInnerHTML:{__html:e!=null?e:""}}),type:"error",showIcon:!0}))):null;import be from"react";import{Spin as Ur,Row as Kr,Col as zr}from"antd";var K=()=>be.createElement(Kr,{justify:"center",align:"middle",style:{minHeight:"300px"}},be.createElement(zr,null,be.createElement(Ur,{size:"large"})));import S from"react";import*as V from"@ant-design/icons";import{Button as Ce,Modal as qr,Space as Hr}from"antd";var z=({code:e,loading:n})=>{let c=S.useMemo(()=>pe(e!=null?e:""),[e]),a=S.useRef(null),[u,i]=S.useState(!1),[m,g]=S.useState(!1);if(n)return null;let d=()=>{var $,x,h,F;($=a==null?void 0:a.current)==null||$.select(),(x=a==null?void 0:a.current)==null||x.setSelectionRange(0,Number.MAX_SAFE_INTEGER),typeof navigator<"u"&&(navigator.clipboard.writeText((F=(h=a==null?void 0:a.current)==null?void 0:h.value)!=null?F:""),g(!0),setTimeout(()=>{g(!1)},1e3))};return c?S.createElement(S.Fragment,null,S.createElement("div",{style:{position:"fixed",bottom:12,right:60}},S.createElement(Hr,null,S.createElement(Ce,{type:"primary",onClick:()=>i(!0),icon:S.createElement(V.CodeOutlined,null)},"Show Code"),S.createElement(Ce,{type:"default",target:"_blank",href:"https://github.com/refinedev/refine/discussions/3046",icon:S.createElement(V.MessageOutlined,null)},"Give Feedback"))),S.createElement("div",{style:{height:"50px"}}),S.createElement(qr,{width:800,open:u,onCancel:()=>i(!1),closeIcon:S.createElement(V.CloseOutlined,{style:{color:"#666b7a"}}),footer:null,bodyStyle:{padding:0}},S.createElement(he,{code:c}),S.createElement("textarea",{ref:a,defaultValue:(c!=null?c:"").replace(/\\n/g,`\r
`),id:"code-input","aria-hidden":"true",style:{padding:0,margin:0,width:0,height:0,opacity:0,border:"none",display:"block"}}),S.createElement(Ce,{style:{position:"absolute",bottom:12,right:12,width:100},key:"copy",type:"default",icon:m?S.createElement(V.CheckOutlined,{style:{color:"green"}}):S.createElement(V.CopyOutlined,null),onClick:d},m?"Copied":"Copy"))):null};var ir=({resource:e,fields:n,isCustomPage:c,id:a})=>{var f;let u=L((f=e.label)!=null?f:e.name,"show"),i="record",m=[["React","react",!0],["IResourceComponentsProps","@refinedev/core"],["useShow","@refinedev/core"],["Show","@refinedev/antd"],["Typography","antd"]],d=n.filter(o=>(o==null?void 0:o.relation)&&!(o!=null&&o.fieldable)&&(o==null?void 0:o.resource)).filter(Boolean).map(o=>{if((o==null?void 0:o.relation)&&!o.fieldable&&o.resource){if(o.multiple){m.push(["useMany","@refinedev/core"]);let I=p(i,o.key);return o.accessor&&(I=`${p(i,o.key)}?.map((item: any) => ${p("item",void 0,o.accessor)})`),`
                const { data: ${R(o.key,"Data")}, isLoading: ${R(o.key,"IsLoading")} } =
                useMany({
                    resource: "${o.resource.name}",
                    ids: ${I} || [],
                    queryOptions: {
                        enabled: !!${i},
                    },
                });
                `}return m.push(["useOne","@refinedev/core"]),`
                const { data: ${R(o.key,"Data")}, isLoading: ${R(o.key,"IsLoading")} } =
                useOne({
                    resource: "${o.resource.name}",
                    id: ${p(i,o.key,o.accessor,!1)} || "",
                    queryOptions: {
                        enabled: !!${i},
                    },
                });
            `}}).filter(Boolean),$=o=>{if(o.relation&&o.resource){let I=R(o.key,"Data"),r=R(o.key,"IsLoading");return o.multiple?(m.push(["TagField","@refinedev/antd"]),l`
                <Title level={5}>${y(o.key)}</Title>
                {${r} ? <>Loading...</> : (
                    <>
                    ${(()=>{var v,b;if(o.relationInfer)if((v=o.relationInfer)!=null&&v.accessor){if(Array.isArray(o.relationInfer.accessor))return"Not Handled.";{let C=M((b=o.resource)==null?void 0:b.name),T=p(C,void 0,o.relationInfer.accessor);return`{${I}?.data?.map((${C}: any) => <TagField key={${T}} value={${T}} />)}`}}else return;else return})()}
                    </>
                )}
                `):l`
                <Title level={5}>${y(o.key)}</Title>
                {${r} ? <>Loading...</> : (
                    <>
                    ${(()=>{var v;return o.relationInfer?(v=o.relationInfer)!=null&&v.accessor?Array.isArray(o.relationInfer.accessor)?`{${p(`${I}?.data`,void 0,o.relationInfer.accessor,' + " " + ')}}`:`{${I}?.data?.${o.relationInfer.accessor}}`:`{${I}?.data}`:`{${I}?.data?.id}`})()}
                    </>
                )}
                
                `}},x=o=>{if(o.type==="text"){if(m.push(["TagField","@refinedev/antd"],["TextField","@refinedev/antd"]),o.multiple){let I=p("item",void 0,o.accessor);return l`
                <Title level={5}>${y(o.key)}</Title>
                {${p(i,o.key)}?.map((item: any) => (
                    <TagField value={${I}} key={${I}} />
                ))}
            `}return l`
                <Title level={5}>${y(o.key)}</Title>
                <TextField value={${p(i,o.key,o.accessor)}} />
            `}},h=o=>{if(o.type==="image"){if(m.push(["ImageField","@refinedev/antd"]),o.multiple){let I=p("item",void 0,o.accessor);return l`
                <Title level={5}>${y(o.key)}</Title>
                {${p(i,o.key)}?.map((item: any) => (
                    <ImageField style={{ maxWidth: 200 }} value={${I}} key={${I}} />
                ))}
            `}return l`
                <Title level={5}>${y(o.key)}</Title>
                <ImageField style={{ maxWidth: 200 }} value={${p(i,o.key,o.accessor," + ")}} />
                `}},F=o=>{if(o.type==="email"){if(m.push(["TagField","@refinedev/antd"],["EmailField","@refinedev/antd"]),o.multiple){let I=p("item",void 0,o.accessor);return l`
                <Title level={5}>${y(o.key)}</Title>
                <>
                {${p(i,o.key)}?.map((item: any) => (
                    <TagField value={${I}} key={${I}} />
                ))}
                </>
            `}return l`
                <Title level={5}>${y(o.key)}</Title>
                <EmailField value={${p(i,o.key,o.accessor," + ")}} />
            `}},k=o=>{if(o.type==="url"){if(m.push(["TagField","@refinedev/antd"],["UrlField","@refinedev/antd"]),o.multiple){let I=p("item",void 0,o.accessor);return l`
                <Title level={5}>${y(o.key)}</Title>
                {${p(i,o.key)}?.map((item: any) => (
                    <TagField value={${I}} key={${I}} />
                ))}
            `}return l`
                <Title level={5}>${y(o.key)}</Title>
                <UrlField value={${p(i,o.key,o.accessor," + ")}} />
            `}},N=o=>{if(o.type==="boolean"){if(m.push(["TagField","@refinedev/antd"],["BooleanField","@refinedev/antd"]),o.multiple){let I=p("item",void 0,o.accessor);return l`
                <Title level={5}>${y(o.key)}</Title>
                {(${p(i,o.key)} as any[])?.map((item, index) => (
                    <BooleanField value={${I}} key={index} />
                ))}
            `}return l`
                <Title level={5}>${y(o.key)}</Title>
                <BooleanField value={${p(i,o.key,o.accessor," && ")}} />
            `}},t=o=>{if(o.type==="date"){if(m.push(["DateField","@refinedev/antd"]),o.multiple){let I=p("item",void 0,o.accessor);return l`
                <Title level={5}>${y(o.key)}</Title>
                {${p(i,o.key)}?.map((item: any) => (
                    <DateField value={${I}} key={${I}} />
                ))}
            `}return l`
                <Title level={5}>${y(o.key)}</Title>
                <DateField value={${p(i,o.key,o.accessor," + ' ' + ")}} />
            `}},A=o=>{if(o.type==="richtext")return m.push(["MarkdownField","@refinedev/antd"]),l`
                <Title level={5}>${y(o.key)}</Title>
                <MarkdownField value={${p(i,o.key,o.accessor,' + " " + ')}} />
            `},w=o=>{if(o.type==="number"){if(m.push(["NumberField","@refinedev/antd"]),o.multiple){let I=p("item",void 0,o.accessor);return l`
                <Title level={5}>${y(o.key)}</Title>
                {${p(i,o.key)}?.map((item: any) => (
                    <TagField value={${I}} key={${I}} />
                ))}
            `}return l`
                <Title level={5}>${y(o.key)}</Title>
                <NumberField value={${p(i,o.key,o.accessor,' + " " + ')} ?? ""} />
            `}},s=n.map(o=>{switch(o==null?void 0:o.type){case"text":return x(o);case"number":return w(o);case"richtext":return A(o);case"email":return F(o);case"image":return h(o);case"date":return t(o);case"boolean":return N(o);case"url":return k(o);case"relation":return $(o);default:return}});return O(m),l`
    ${j(m)}
    
    const { Title } = Typography;

    export const ${u}: React.FC<IResourceComponentsProps> = () => {
        const { queryResult } = useShow(${c?`{ 
                    resource: "${e.name}", 
                    id: ${a}
                }`:""});
        const { data, isLoading } = queryResult;
    
        const ${i} = data?.data;

        ${d}

        return (
            <Show isLoading={isLoading}>
                ${s.join("")}
            </Show>
        );
    };
    `},Ae=_({type:"show",additionalScope:[["@refinedev/antd","RefineAntd",Wr],["antd","AntdPackage",Zr]],codeViewerComponent:z,loadingComponent:K,errorComponent:U,renderer:ir});import*as Gr from"@refinedev/antd";import*as Xr from"antd";var cr=({resource:e,fields:n,isCustomPage:c})=>{var I;let a=L((I=e.label)!=null?I:e.name,"list"),u="tableProps?.dataSource",i=[["React","react",!0],["IResourceComponentsProps","@refinedev/core"],["BaseRecord","@refinedev/core"],["useTable","@refinedev/antd"],["List","@refinedev/antd"],["Table","antd"],["Space","antd"]],g=n.filter(r=>(r==null?void 0:r.relation)&&!(r!=null&&r.fieldable)&&(r==null?void 0:r.resource)).filter(Boolean).map(r=>{if((r==null?void 0:r.relation)&&!r.fieldable&&r.resource){i.push(["useMany","@refinedev/core"]);let v="";return r.multiple?v=`[].concat(...(${u}?.map((item) => ${p("item",r.key,r.accessor,!1)}) ?? []))`:v=`${u}?.map((item) => ${p("item",r.key,r.accessor,!1)}) ?? []`,`
                const { data: ${R(r.key,"Data")}, isLoading: ${R(r.key,"IsLoading")} } =
                useMany({
                    resource: "${r.resource.name}",
                    ids: ${v},
                    queryOptions: {
                        enabled: !!${u},
                    },
                });
                `}}).filter(Boolean),d=r=>{var v,b;if(r.relation&&r.resource){let T=`${R(r.key,"Data")}?.data`,re=R(r.key,"IsLoading");if(Array.isArray(r.accessor))return;let Y=`${re} ? <>Loading...</> : `,te=r.multiple?`dataIndex="${r.key}"`:`dataIndex={["${r.key}", ${r.accessor?`"${r.accessor}"`:""}]}`,ne=`title="${y(r.key)}"`,q="";if(r.multiple){i.push(["TagField","@refinedev/antd"]);let W="item";if(r!=null&&r.relationInfer){let B=`${T}?.find((resourceItems) => resourceItems.id === ${p("item",void 0,r.accessor)})`;W=p(B,void 0,(v=r==null?void 0:r.relationInfer)==null?void 0:v.accessor)}q=`render={(value: any[]) => ${Y} (
                    <>
                        {${p("value",void 0)}?.map((item, index) => (
                            <TagField key={index} value={${W}} />
                        ))}
                    </>
                )}`}else if(r!=null&&r.relationInfer){let W=`${T}?.find((item) => item.id === value)`,B=p(W,void 0,(b=r==null?void 0:r.relationInfer)==null?void 0:b.accessor);q=`render={(value) => ${Y} ${B}}`}else q="";return l`<Table.Column ${te} ${ne} ${q} />`}},$=r=>{if(r.type==="image"){i.push(["ImageField","@refinedev/antd"]);let v=Array.isArray(r.accessor)||r.multiple?`dataIndex="${r.key}"`:`dataIndex={["${r.key}", ${r.accessor?`"${r.accessor}"`:""}]}`,b=`title="${y(r.key)}"`,C=l`render={(value: any) => <ImageField style={{ maxWidth: "100px" }} value={${p("value",void 0,Array.isArray(r.accessor)?r.accessor:void 0," + ")}} />}`;if(r.multiple){let T=p("item",void 0,r.accessor," + ");C=l`render={(value: any[]) => (<>{value?.map((item, index) => (
                    <ImageField style={{ maxWidth: "100px" }} value={${T}} key={index} />
                ))}</>)}`}return l`<Table.Column ${v} ${b} ${C} />`}},x=r=>{if(r.type==="email"){i.push(["TagField","@refinedev/antd"],["EmailField","@refinedev/antd"]);let v=Array.isArray(r.accessor)||r.multiple?`dataIndex="${r.key}"`:`dataIndex={["${r.key}", ${r.accessor?`"${r.accessor}"`:""}]}`,b=`title="${y(r.key)}"`,C=l`render={(value: any) => <EmailField value={${p("value",void 0,Array.isArray(r.accessor)?r.accessor:void 0,' + " " + ')}} />}`;if(r.multiple){let T=p("item",void 0,r.accessor,' + " " + ');C=l`render={(value: any[]) => (<>{value?.map((item, index) => (
                    <TagField value={${T}} key={index} />
                ))}</>)}`}return l`<Table.Column ${v} ${b} ${C} />`}},h=r=>{if(r.type==="url"){i.push(["UrlField","@refinedev/antd"],["TagField","@refinedev/antd"]);let v=Array.isArray(r.accessor)||r.multiple?`dataIndex="${r.key}"`:`dataIndex={["${r.key}", ${r.accessor?`"${r.accessor}"`:""}]}`,b=`title="${y(r.key)}"`,C=l`render={(value: any) => <UrlField value={${p("value",void 0,Array.isArray(r.accessor)?r.accessor:void 0," + ")}} />}`;if(r.multiple){let T=p("item",void 0,r.accessor," + ");C=l`render={(value: any[]) => (<>{value?.map((item, index) => (
                    <TagField value={${T}} key={index} />
                ))}</>)}`}return l`<Table.Column ${v} ${b} ${C} />`}},F=r=>{if((r==null?void 0:r.type)==="boolean"){i.push(["BooleanField","@refinedev/antd"]);let v=Array.isArray(r.accessor)||r.multiple?`dataIndex="${r.key}"`:`dataIndex={["${r.key}", ${r.accessor?`"${r.accessor}"`:""}]}`,b=`title="${y(r.key)}"`,C=l`render={(value: any) => <BooleanField value={${p("value",void 0,Array.isArray(r.accessor)?r.accessor:void 0," && ")}} />}`;if(r.multiple){let T=p("item",void 0,r.accessor," && ");C=l`render={(value: any[]) => (<>{value?.map((item, index) => (
                    <BooleanField value={${T}} key={index} />
                ))}</>)}`}return l`<Table.Column ${v} ${b} ${C} />`}},k=r=>{if(r.type==="date"){i.push(["DateField","@refinedev/antd"]);let v=Array.isArray(r.accessor)||r.multiple?`dataIndex="${r.key}"`:`dataIndex={["${r.key}", ${r.accessor?`"${r.accessor}"`:""}]}`,b=`title="${y(r.key)}"`,C=l`render={(value: any) => <DateField value={${p("value",void 0,Array.isArray(r.accessor)?r.accessor:void 0,' + " " + ')}} />}`;if(r.multiple){let T=p("item",void 0,r.accessor,' + " " + ');C=l`render={(value: any[]) => (<>{value?.map((item, index) => (
                    <DateField value={${T}} key={index} />
                ))}</>)}`}return l`<Table.Column ${v} ${b} ${C} />`}},N=r=>{if((r==null?void 0:r.type)==="richtext"){i.push(["MarkdownField","@refinedev/antd"]);let v=Array.isArray(r.accessor)||r.multiple?`dataIndex="${r.key}"`:r.accessor?`dataIndex={["${r.key}", "${r.accessor}"]}`:`dataIndex="${r.key}"`,b=`title="${y(r.key)}"`,C=l`render={(value: any) => <MarkdownField value={(${p("value",void 0,Array.isArray(r.accessor)?r.accessor:void 0)}).slice(0, 80) + "..."} />}`;if(r.multiple){let T=p("item",void 0,r.accessor,' + " " + ');C=l`render={(value: any[]) => (<>{value?.map((item, index) => (
                    <MarkdownField value={(${T})?.slice(0, 80) + "..."} key={index} />
                ))}</>)}`}return l`<Table.Column ${v} ${b} ${C} />`}},t=r=>{if(r&&(r.type==="text"||r.type==="number")){let v=r.accessor&&!Array.isArray(r.accessor)&&!r.multiple?`dataIndex={["${r.key}", "${r.accessor}"]}`:`dataIndex="${r.key}"`,b=`title="${y(r.key)}"`,C="";if(r.multiple){i.push(["TagField","@refinedev/antd"]);let T=p("item",void 0,r.accessor,' + " " + ');C=`render={(value: any[]) => (<>{value?.map((item) => (
                    <TagField value={${T}} key={${T}} />
                ))}</>)}`}return!r.multiple&&Array.isArray(r.accessor)&&(C=`render={(value: any) => (<>{${p("value",void 0,r.accessor)}}</>)}`),`<Table.Column ${v} ${b} ${C} />`}},{canEdit:A,canShow:w,canDelete:s}=e!=null?e:{};A&&i.push(["EditButton","@refinedev/antd"]),w&&i.push(["ShowButton","@refinedev/antd"]),s&&i.push(["DeleteButton","@refinedev/antd"]);let f=A||w||s?l`
            <Table.Column
                title="Actions"
                dataIndex="actions"
                render={(_, record: BaseRecord) => (
                    <Space>
                    ${A?l`
                        <EditButton
                            hideText
                            size="small"
                            recordItemId={record.id}
                        />
                        `:""}
                    ${w?l`
                        <ShowButton
                            hideText
                            size="small"
                            recordItemId={record.id}
                        />
                        `:""}
                    ${s?l`
                        <DeleteButton
                            hideText
                            size="small"
                            recordItemId={record.id}
                        />
                        `:""}
                    </Space>
                )}
            />
        `:"",o=n.map(r=>{switch(r==null?void 0:r.type){case"text":case"number":return t(r);case"richtext":return N(r);case"email":return x(r);case"image":return $(r);case"date":return k(r);case"boolean":return F(r);case"url":return h(r);case"relation":return d(r);default:return}});return O(i),l`
    ${j(i)}
    
    export const ${a}: React.FC<IResourceComponentsProps> = () => {
        const { tableProps } = useTable({
            syncWithLocation: true,
            ${c?` resource: "${e.name}",`:""}
        });
    
        ${g}

        return (
            <List>
                <Table {...tableProps} rowKey="id">
                    ${o.join(`\r
`)}
                    ${f}
                </Table>
            </List>
        );
    };
    `},Te=_({type:"list",additionalScope:[["@refinedev/antd","RefineAntd",Gr],["antd","AntdPackage",Xr]],codeViewerComponent:z,loadingComponent:K,errorComponent:U,renderer:cr});import*as Yr from"@refinedev/antd";import*as Jr from"antd";import Qr from"dayjs";var ur=({resource:e,fields:n,isCustomPage:c})=>{var N;let a=L((N=e.label)!=null?N:e.name,"create"),u=[["React","react",!0],["IResourceComponentsProps","@refinedev/core"],["Create","@refinedev/antd"],["Form","antd"],["useForm","@refinedev/antd"],["Input","antd"]],m=n.filter(t=>(t==null?void 0:t.relation)&&!(t!=null&&t.fieldable)&&(t==null?void 0:t.resource)).filter(Boolean).map(t=>{if((t==null?void 0:t.relation)&&!t.fieldable&&t.resource)return u.push(["useSelect","@refinedev/antd"]),`
                const { selectProps: ${R(t.key,"SelectProps")} } =
                useSelect({
                    resource: "${t.resource.name}",
                    ${Fe(t)}
                });
            `}).filter(Boolean),g=t=>{if(t.relation&&t.resource){u.push(["Select","antd"]);let A=R(t.key,"SelectProps"),w=t.accessor?t.multiple?`"${t.key}"`:`["${t.key}", "${t.accessor}"]`:`"${t.key}"`,s="",f="";return t.accessor&&t.multiple&&(f=`getValueFromEvent={(selected: string[]) => {
                    return selected?.map((item) => ({ ${H(`${t.accessor}`)?t.accessor:`["${t.accessor}"]`}: item }));
                }}`,s=`getValueProps={(value: any[]) => {
                    return {
                        value: value?.map((item) => ${p("item",void 0,t.accessor)}),
                    };
                }}`),l`
                <Form.Item
                    label="${y(t.key)}"
                    name={${w}}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                    ${s}
                    ${f}
                >
                    <Select ${t.multiple?'mode="multiple"':""} {...${A}} />
                </Form.Item>             
                `}},d=t=>{if(t.type==="text"||t.type==="url"||t.type==="email"||t.type==="number")return G(t.key)||t.multiple?void 0:l`
                <Form.Item
                    label="${y(t.key)}"
                    name={["${t.key}"${t.accessor?', "'+t.accessor+'"':""}]}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                >
                    <Input  />
                </Form.Item>
            `},$=t=>{if(t.type==="image"){u.push(["Upload","antd"],["getValueFromEvent","@refinedev/antd"]);let A='valuePropName="fileList"';return t.multiple&&!t.accessor&&(A="getValueProps={(value) => ({ fileList: value?.map((item: any) => ({ url: item, name: item, uid: item }))})}"),t.multiple||(t.accessor?A="getValueProps={(value) => ({ fileList: value ? [value] : [] })}":A="getValueProps={(value) => ({ fileList: [{ url: value, name: value, uid: value }]})}"),l`
                <Form.Item label="${y(t.key)}">
                    <Form.Item
                        name="${t.key}"
                        ${A}
                        getValueFromEvent={getValueFromEvent}
                        noStyle
                        rules={[
                            {
                                required: true,
                            },
                        ]}
                    >
                        <Upload.Dragger
                            listType="picture"
                            ${t.multiple?"multiple":""}
                            beforeUpload={() => false}
                        >
                            <p className="ant-upload-text">
                                Drag & drop a file in this area
                            </p>
                        </Upload.Dragger>
                    </Form.Item>
                </Form.Item>
                `}},x=t=>{if(t.type==="boolean")return u.push(["Checkbox","antd"]),t.multiple?void 0:l`
                <Form.Item
                    label="${y(t.key)}"
                    valuePropName="checked"
                    name={["${t.key}"${t.accessor?', "'+t.accessor+'"':""}]}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                >
                    <Checkbox>${y(t.key)}</Checkbox>
                </Form.Item>
            `},h=t=>{if(t.type==="date")return u.push(["DatePicker","antd"],["dayjs","dayjs",!0]),t.multiple?void 0:l`
                <Form.Item
                    label="${y(t.key)}"
                    name={["${t.key}"${t.accessor?', "'+t.accessor+'"':""}]}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                    getValueProps={(value) => ({ value: value ? dayjs(value) : undefined })}
                >
                    <DatePicker />
                </Form.Item>
            `},F=t=>{if(t.type==="richtext")return l`
            <Form.Item
                label="${y(t.key)}"
                name="${t.key}"
                rules={[
                    {
                        required: true,
                    },
                ]}
            >
                <Input.TextArea rows={5} />
            </Form.Item>
            `},k=n.map(t=>{switch(t==null?void 0:t.type){case"text":case"number":case"email":case"url":return d(t);case"richtext":return F(t);case"image":return $(t);case"date":return h(t);case"boolean":return x(t);case"relation":return g(t);default:return}});return O(u),l`
    ${j(u)}
    
    export const ${a}: React.FC<IResourceComponentsProps> = () => {
        const { formProps, saveButtonProps, queryResult } = useForm(${c?`{
                      resource: "${e.name}",
                      action: "create",
                  }`:""});
    
        ${m}

        return (
            <Create saveButtonProps={saveButtonProps}>
                <Form {...formProps} layout="vertical">
                    ${k.join("")}
                </Form>
            </Create>
        );
    };
    `},we=_({type:"create",additionalScope:[["@refinedev/antd","RefineAntd",Yr],["dayjs","dayjs",Qr,!0],["antd","AntdPackage",Jr]],codeViewerComponent:z,loadingComponent:K,errorComponent:U,renderer:ur});import*as et from"@refinedev/antd";import*as rt from"antd";import tt from"dayjs";var mr=({resource:e,fields:n,isCustomPage:c,id:a})=>{var A,w;let u=L((A=e.label)!=null?A:e.name,"edit"),i=R((w=e.label)!=null?w:e.name,"Data"),m=[["React","react",!0],["IResourceComponentsProps","@refinedev/core"],["Edit","@refinedev/antd"],["Form","antd"],["useForm","@refinedev/antd"],["Input","antd"]],d=n.filter(s=>(s==null?void 0:s.relation)&&!(s!=null&&s.fieldable)&&(s==null?void 0:s.resource)).filter(Boolean).map(s=>{if((s==null?void 0:s.relation)&&!s.fieldable&&s.resource){m.push(["useSelect","@refinedev/antd"]);let f=p(i,s.key,s.accessor,!1);return s.multiple&&s.accessor&&(f=`${p(i,s.key)}?.map((item: any) => ${p("item",void 0,s.accessor)})`),`
                const { selectProps: ${R(s.key,"SelectProps")} } =
                useSelect({
                    resource: "${s.resource.name}",
                    defaultValue: ${f},
                    ${s.relationInfer&&s.relationInfer.accessor?typeof s.relationInfer.accessor=="string"?s.relationInfer.accessor!=="title"?`optionLabel: "${s.relationInfer.accessor}",`:"":`optionLabel: "${s.relationInfer.accessor[0]}",`:""}
                });
            `}}).filter(Boolean),$=s=>{if(s.relation&&s.resource){m.push(["Select","antd"]);let f=R(s.key,"SelectProps"),o=s.accessor?s.multiple?`"${s.key}"`:`["${s.key}", "${s.accessor}"]`:`"${s.key}"`,I="",r="";return s.accessor&&s.multiple&&(r=`getValueFromEvent={(selected: string[]) => {
                    return selected?.map((item) => ({ ${H(`${s.accessor}`)?s.accessor:`["${s.accessor}"]`}: item }));
                }}`,I=`getValueProps={(value: any[]) => {
                    return {
                        value: value?.map((item) => ${p("item",void 0,s.accessor)}),
                    };
                }}`),l`
                <Form.Item
                    label="${y(s.key)}"
                    name={${o}}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                    ${I}
                    ${r}
                >
                    <Select ${s.multiple?'mode="multiple"':""} {...${f}} />
                </Form.Item>             
                `}},x=s=>{if(s.type==="text"||s.type==="url"||s.type==="email"||s.type==="number"){if(s.multiple){let f=p(s.key,"index",s.accessor).split("?.").map(o=>`"${o}"`).join(", ").replace(/"index"/,"index");return`
                    <>
                        {(${p(i,s.key)} as any[])?.map((item, index) => (
                            <Form.Item
                                key={index}
                                label={\`${y(s.key)} \${index+1}\`}
                                name={[${f}]}
                            >
                                <Input
                                    type="${s.type}"
                                ${G(s.key)?"readOnly disabled":""} />
                            </Form.Item>
                        ))}
                    </>
                `}return l`
                <Form.Item
                    label="${y(s.key)}"
                    name={["${s.key}"${s.accessor?', "'+s.accessor+'"':""}]}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                >
                    <Input ${G(s.key)?"readOnly disabled":""} />
                </Form.Item>
            `}},h=s=>{if(s.type==="image"){m.push(["Upload","antd"],["getValueFromEvent","@refinedev/antd"]);let f='valuePropName="fileList"';return s.multiple&&!s.accessor&&(f="getValueProps={(value) => ({ fileList: value?.map((item: any) => ({ url: item, name: item, uid: item }))})}"),s.multiple||(s.accessor?f="getValueProps={(value) => ({ fileList: value ? [value] : [] })}":f="getValueProps={(value) => ({ fileList: [{ url: value, name: value, uid: value }]})}"),l`
                <Form.Item label="${y(s.key)}">
                    <Form.Item
                        name="${s.key}"
                        ${f}
                        getValueFromEvent={getValueFromEvent}
                        noStyle
                        rules={[
                            {
                                required: true,
                            },
                        ]}
                    >
                        <Upload.Dragger
                            listType="picture"
                            ${s.multiple?"multiple":""}
                            beforeUpload={() => false}
                        >
                            <p className="ant-upload-text">
                                Drag & drop a file in this area
                            </p>
                        </Upload.Dragger>
                    </Form.Item>
                </Form.Item>
                `}},F=s=>{if(s.type==="boolean"){if(m.push(["Checkbox","antd"]),s.multiple){let f=p(s.key,"index",s.accessor).split("?.").map(o=>`"${o}"`).join(", ").replace(/"index"/,"index");return`
                    <>
                        {(${p(i,s.key)} as any[])?.map((item, index) => (
                            <Form.Item
                                key={index}
                                valuePropName="checked"
                                label={\`${y(s.key)} \${index+1}\`}
                                name={[${f}]}
                            >
                                <Checkbox>${y(s.key)}</Checkbox>
                            </Form.Item>
                        ))}
                    </>
                `}return l`
                <Form.Item
                    label="${y(s.key)}"
                    valuePropName="checked"
                    name={["${s.key}"${s.accessor?', "'+s.accessor+'"':""}]}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                >
                    <Checkbox>${y(s.key)}</Checkbox>
                </Form.Item>
            `}},k=s=>{if(s.type==="date"){if(m.push(["DatePicker","antd"],["dayjs","dayjs",!0]),s.multiple){let f=p(s.key,"index",s.accessor).split("?.").map(o=>`"${o}"`).join(", ").replace(/"index"/,"index");return l`
                    <>
                        {(${p(i,s.key)} as any[])?.map((item, index) => (
                            <Form.Item
                                key={index}
                                label={\`${y(s.key)} \${index+1}\`}
                                name={[${f}]}
                                getValueProps={(value) => ({ value: value ? dayjs(value) : undefined })}
                            >
                                <DatePicker />
                            </Form.Item>
                        ))}
                    </>
                `}return l`
                <Form.Item
                    label="${y(s.key)}"
                    name={["${s.key}"${s.accessor?', "'+s.accessor+'"':""}]}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                    getValueProps={(value) => ({ value: value ? dayjs(value) : undefined })}
                >
                    <DatePicker />
                </Form.Item>
            `}},N=s=>{if(s.type==="richtext")return l`
            <Form.Item
                label="${y(s.key)}"
                name="${s.key}"
                rules={[
                    {
                        required: true,
                    },
                ]}
            >
                <Input.TextArea rows={5} />
            </Form.Item>
            `},t=n.map(s=>{switch(s==null?void 0:s.type){case"text":case"number":case"email":case"url":return x(s);case"richtext":return N(s);case"image":return h(s);case"date":return k(s);case"boolean":return F(s);case"relation":return $(s);default:return}});return O(m),l`
    ${j(m)}
    
    export const ${u}: React.FC<IResourceComponentsProps> = () => {
        const { formProps, saveButtonProps, queryResult } = useForm(${c?`{
                      resource: "${e.name}",
                      id: ${a},
                      action: "edit",
                  }`:""});
    
        const ${i} = queryResult?.data?.data;
    
        ${d}

        return (
            <Edit saveButtonProps={saveButtonProps}>
                <Form {...formProps} layout="vertical">
                    ${t.join("")}
                </Form>
            </Edit>
        );
    };
    `},Re=_({type:"edit",additionalScope:[["@refinedev/antd","RefineAntd",et],["dayjs","dayjs",tt,!0],["antd","AntdPackage",rt]],codeViewerComponent:z,loadingComponent:K,errorComponent:U,renderer:mr});var xa=({action:e,id:n,...c})=>{let{action:a,id:u}=nt();switch(e!=null?e:a){case"show":return se.createElement(Ae,{...c,id:n!=null?n:u});case"create":return se.createElement(we,{...c,id:n!=null?n:u});case"edit":return se.createElement(Re,{...c,id:n!=null?n:u});default:return se.createElement(Te,{...c,id:n!=null?n:u})}};export{we as AntdCreateInferencer,ur as AntdCreateRenderer,Re as AntdEditInferencer,mr as AntdEditRenderer,xa as AntdInferencer,Te as AntdListInferencer,cr as AntdListRenderer,Ae as AntdShowInferencer,ir as AntdShowRenderer};
//# sourceMappingURL=antd.js.map