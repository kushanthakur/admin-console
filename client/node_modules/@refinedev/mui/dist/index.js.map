{"version":3,"sources":["../src/index.tsx","../src/components/layout/index.tsx","../src/components/layout/sider/index.tsx","../src/components/layout/header/index.tsx","../src/components/layout/title/index.tsx","../src/components/pages/login/index.tsx","../src/components/pages/ready/index.tsx","../src/components/pages/welcome/index.tsx","../src/components/pages/error/index.tsx","../src/components/pages/auth/index.tsx","../src/components/pages/auth/components/login/index.tsx","../src/components/pages/auth/components/styles.ts","../src/components/pages/auth/components/register/index.tsx","../src/components/pages/auth/components/forgotPassword/index.tsx","../src/components/pages/auth/components/updatePassword/index.tsx","../src/components/crud/create/index.tsx","../src/components/crud/edit/index.tsx","../src/components/crud/list/index.tsx","../src/components/crud/show/index.tsx","../src/components/buttons/create/index.tsx","../src/components/buttons/edit/index.tsx","../src/components/buttons/delete/index.tsx","../src/components/buttons/refresh/index.tsx","../src/components/buttons/show/index.tsx","../src/components/buttons/list/index.tsx","../src/components/buttons/export/index.tsx","../src/components/buttons/save/index.tsx","../src/components/buttons/clone/index.tsx","../src/components/buttons/import/index.tsx","../src/components/circularDeterminate/index.tsx","../src/components/fields/text/index.tsx","../src/components/fields/tag/index.tsx","../src/components/fields/email/index.tsx","../src/components/fields/boolean/index.tsx","../src/components/fields/date/index.tsx","../src/components/fields/file/index.tsx","../src/components/fields/url/index.tsx","../src/components/fields/number/index.tsx","../src/components/fields/markdown/index.tsx","../src/components/breadcrumb/index.tsx","../src/hooks/useAutocomplete/index.ts","../src/hooks/useDataGrid/index.ts","../src/definitions/dataGrid/index.ts","../src/theme/index.ts","../src/theme/palette/lightPalette.ts","../src/theme/palette/darkPalette.ts","../src/theme/typography.ts","../src/providers/notificationProvider/index.tsx","../src/providers/refineSnackbarProvider/index.tsx"],"sourcesContent":["/** @deprecated not exists anymore - this type exists as a fallback for existing usages */\nexport type ThemeInput = any;\n\n/** Notistack */\n/**\n * Part of the following typing and documentation is from material-ui/src/Snackbar/Snackbar.d.ts\n */\nexport {\n    SnackbarProvider,\n    withSnackbar,\n    SnackbarContent as NotistackSnackbarContent,\n    useSnackbar,\n} from \"notistack\";\n\nexport type {\n    WithSnackbarProps,\n    SnackbarKey,\n    ProviderContext,\n    VariantType,\n    CloseReason,\n    SnackbarMessage,\n    SnackbarAction,\n    SnackbarContentCallback,\n    TransitionCloseHandler,\n    TransitionEnterHandler,\n    TransitionHandler,\n    ContainerClassKey as NotistackContainerClassKey,\n    VariantClassKey,\n    CombinedClassKey,\n    SnackbarOrigin,\n    IconVariant,\n    TransitionHandlerProps,\n    SnackbarContentProps,\n    SnackbarProps,\n    SharedProps,\n    OptionsObject,\n    SnackbarProviderProps,\n} from \"notistack\";\n\nexport * from \"./components\";\nexport * from \"./hooks\";\nexport * from \"./theme\";\nexport * from \"./providers\";\n","import React from \"react\";\nimport { Box } from \"@mui/material\";\n\nimport { RefineLayoutLayoutProps } from \"./types\";\nimport { Sider as DefaultSider } from \"./sider\";\nimport { Header as DefaultHeader } from \"./header\";\n\nexport const Layout: React.FC<RefineLayoutLayoutProps> = ({\n    Sider,\n    Header,\n    Title,\n    Footer,\n    OffLayoutArea,\n    children,\n}) => {\n    const SiderToRender = Sider ?? DefaultSider;\n    const HeaderToRender = Header ?? DefaultHeader;\n\n    return (\n        <Box display=\"flex\" flexDirection=\"row\">\n            <SiderToRender Title={Title} />\n            <Box\n                sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    flex: 1,\n                    minHeight: \"100vh\",\n                }}\n            >\n                <HeaderToRender />\n                <Box\n                    component=\"main\"\n                    sx={{\n                        p: { xs: 1, md: 2, lg: 3 },\n                        flexGrow: 1,\n                        bgcolor: (theme) => theme.palette.background.default,\n                    }}\n                >\n                    {children}\n                </Box>\n                {Footer && <Footer />}\n            </Box>\n            {OffLayoutArea && <OffLayoutArea />}\n        </Box>\n    );\n};\n","import React, { useState } from \"react\";\nimport {\n    Box,\n    Drawer,\n    List,\n    ListItemButton,\n    ListItemIcon,\n    ListItemText,\n    Collapse,\n    Tooltip,\n    Button,\n    IconButton,\n} from \"@mui/material\";\nimport {\n    ListOutlined,\n    Logout,\n    ExpandLess,\n    ExpandMore,\n    ChevronLeft,\n    ChevronRight,\n    MenuRounded,\n    Dashboard,\n} from \"@mui/icons-material\";\nimport {\n    CanAccess,\n    ITreeMenu,\n    useIsExistAuthentication,\n    useLogout,\n    useTitle,\n    useTranslate,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    useMenu,\n    useRefineContext,\n    useActiveAuthProvider,\n    pickNotDeprecated,\n} from \"@refinedev/core\";\nimport { RefineLayoutSiderProps } from \"../types\";\n\nimport { Title as DefaultTitle } from \"@components\";\n\nexport const Sider: React.FC<RefineLayoutSiderProps> = ({\n    Title: TitleFromProps,\n    render,\n    meta,\n}) => {\n    const [collapsed, setCollapsed] = useState(false);\n    const [opened, setOpened] = useState(false);\n\n    const drawerWidth = () => {\n        if (collapsed) return 64;\n        return 200;\n    };\n\n    const t = useTranslate();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n    const { hasDashboard } = useRefineContext();\n    const translate = useTranslate();\n\n    const { menuItems, selectedKey, defaultOpenKeys } = useMenu({ meta });\n    const isExistAuthentication = useIsExistAuthentication();\n    const TitleFromContext = useTitle();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: mutateLogout } = useLogout({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const [open, setOpen] = useState<{ [k: string]: any }>({});\n\n    React.useEffect(() => {\n        setOpen((previous) => {\n            const previousKeys: string[] = Object.keys(previous);\n            const previousOpenKeys = previousKeys.filter(\n                (key) => previous[key],\n            );\n\n            const uniqueKeys = new Set([\n                ...previousOpenKeys,\n                ...defaultOpenKeys,\n            ]);\n            const uniqueKeysRecord = Object.fromEntries(\n                Array.from(uniqueKeys.values()).map((key) => [key, true]),\n            );\n            return uniqueKeysRecord;\n        });\n    }, [defaultOpenKeys]);\n\n    const RenderToTitle = TitleFromProps ?? TitleFromContext ?? DefaultTitle;\n\n    const handleClick = (key: string) => {\n        setOpen({ ...open, [key]: !open[key] });\n    };\n\n    const renderTreeView = (tree: ITreeMenu[], selectedKey?: string) => {\n        return tree.map((item: ITreeMenu) => {\n            const {\n                icon,\n                label,\n                route,\n                name,\n                children,\n                parentName,\n                meta,\n                options,\n            } = item;\n            const isOpen = open[item.key || \"\"] || false;\n\n            const isSelected = item.key === selectedKey;\n            const isNested = !(\n                pickNotDeprecated(meta?.parent, options?.parent, parentName) ===\n                undefined\n            );\n\n            if (children.length > 0) {\n                return (\n                    <CanAccess\n                        key={item.key}\n                        resource={name.toLowerCase()}\n                        action=\"list\"\n                        params={{\n                            resource: item,\n                        }}\n                    >\n                        <div key={item.key}>\n                            <Tooltip\n                                title={label ?? name}\n                                placement=\"right\"\n                                disableHoverListener={!collapsed}\n                                arrow\n                            >\n                                <ListItemButton\n                                    onClick={() => {\n                                        if (collapsed) {\n                                            setCollapsed(false);\n                                            if (!isOpen) {\n                                                handleClick(item.key || \"\");\n                                            }\n                                        } else {\n                                            handleClick(item.key || \"\");\n                                        }\n                                    }}\n                                    sx={{\n                                        pl: isNested ? 4 : 2,\n                                        justifyContent: \"center\",\n                                        \"&.Mui-selected\": {\n                                            \"&:hover\": {\n                                                backgroundColor: \"transparent\",\n                                            },\n                                            backgroundColor: \"transparent\",\n                                        },\n                                    }}\n                                >\n                                    <ListItemIcon\n                                        sx={{\n                                            justifyContent: \"center\",\n                                            minWidth: 36,\n                                            color: \"secondary.contrastText\",\n                                        }}\n                                    >\n                                        {icon ?? <ListOutlined />}\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={label}\n                                        primaryTypographyProps={{\n                                            noWrap: true,\n                                            fontSize: \"14px\",\n                                            fontWeight: isSelected\n                                                ? \"bold\"\n                                                : \"normal\",\n                                        }}\n                                    />\n                                    {!collapsed &&\n                                        (isOpen ? (\n                                            <ExpandLess />\n                                        ) : (\n                                            <ExpandMore />\n                                        ))}\n                                </ListItemButton>\n                            </Tooltip>\n                            {!collapsed && (\n                                <Collapse\n                                    in={open[item.key || \"\"]}\n                                    timeout=\"auto\"\n                                    unmountOnExit\n                                >\n                                    <List component=\"div\" disablePadding>\n                                        {renderTreeView(children, selectedKey)}\n                                    </List>\n                                </Collapse>\n                            )}\n                        </div>\n                    </CanAccess>\n                );\n            }\n\n            return (\n                <CanAccess\n                    key={item.key}\n                    resource={name.toLowerCase()}\n                    action=\"list\"\n                    params={{ resource: item }}\n                >\n                    <Tooltip\n                        title={label ?? name}\n                        placement=\"right\"\n                        disableHoverListener={!collapsed}\n                        arrow\n                    >\n                        <ListItemButton\n                            component={ActiveLink}\n                            to={route}\n                            selected={isSelected}\n                            onClick={() => {\n                                setOpened(false);\n                            }}\n                            sx={{\n                                pl: isNested ? 4 : 2,\n                                py: isNested ? 1.25 : 1,\n                                \"&.Mui-selected\": {\n                                    \"&:hover\": {\n                                        backgroundColor: \"transparent\",\n                                    },\n                                    backgroundColor: \"transparent\",\n                                },\n                                justifyContent: \"center\",\n                            }}\n                        >\n                            <ListItemIcon\n                                sx={{\n                                    justifyContent: \"center\",\n                                    minWidth: 36,\n                                    color: \"secondary.contrastText\",\n                                }}\n                            >\n                                {icon ?? <ListOutlined />}\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={label}\n                                primaryTypographyProps={{\n                                    noWrap: true,\n                                    fontSize: \"14px\",\n                                    fontWeight: isSelected ? \"bold\" : \"normal\",\n                                }}\n                            />\n                        </ListItemButton>\n                    </Tooltip>\n                </CanAccess>\n            );\n        });\n    };\n\n    const dashboard = hasDashboard ? (\n        <CanAccess resource=\"dashboard\" action=\"list\">\n            <Tooltip\n                title={translate(\"dashboard.title\", \"Dashboard\")}\n                placement=\"right\"\n                disableHoverListener={!collapsed}\n                arrow\n            >\n                <ListItemButton\n                    component={ActiveLink}\n                    to=\"/\"\n                    selected={selectedKey === \"/\"}\n                    onClick={() => {\n                        setOpened(false);\n                    }}\n                    sx={{\n                        pl: 2,\n                        py: 1,\n                        \"&.Mui-selected\": {\n                            \"&:hover\": {\n                                backgroundColor: \"transparent\",\n                            },\n                            backgroundColor: \"transparent\",\n                        },\n                        justifyContent: \"center\",\n                    }}\n                >\n                    <ListItemIcon\n                        sx={{\n                            justifyContent: \"center\",\n                            minWidth: 36,\n                            color: \"secondary.contrastText\",\n                        }}\n                    >\n                        <Dashboard />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={translate(\"dashboard.title\", \"Dashboard\")}\n                        primaryTypographyProps={{\n                            noWrap: true,\n                            fontSize: \"14px\",\n                            fontWeight: selectedKey === \"/\" ? \"bold\" : \"normal\",\n                        }}\n                    />\n                </ListItemButton>\n            </Tooltip>\n        </CanAccess>\n    ) : null;\n\n    const logout = isExistAuthentication && (\n        <Tooltip\n            title={t(\"buttons.logout\", \"Logout\")}\n            placement=\"right\"\n            disableHoverListener={!collapsed}\n            arrow\n        >\n            <ListItemButton\n                key=\"logout\"\n                onClick={() => mutateLogout()}\n                sx={{ justifyContent: \"center\" }}\n            >\n                <ListItemIcon\n                    sx={{\n                        justifyContent: \"center\",\n                        minWidth: 36,\n                        color: \"secondary.contrastText\",\n                    }}\n                >\n                    <Logout />\n                </ListItemIcon>\n                <ListItemText\n                    primary={t(\"buttons.logout\", \"Logout\")}\n                    primaryTypographyProps={{\n                        noWrap: true,\n                        fontSize: \"14px\",\n                    }}\n                />\n            </ListItemButton>\n        </Tooltip>\n    );\n\n    const items = renderTreeView(menuItems, selectedKey);\n\n    const renderSider = () => {\n        if (render) {\n            return render({\n                dashboard,\n                logout,\n                items,\n                collapsed,\n            });\n        }\n        return (\n            <>\n                {dashboard}\n                {items}\n                {logout}\n            </>\n        );\n    };\n\n    const drawer = (\n        <List disablePadding sx={{ mt: 1, color: \"secondary.contrastText\" }}>\n            {renderSider()}\n        </List>\n    );\n\n    return (\n        <>\n            <Box\n                sx={{\n                    width: { xs: drawerWidth() },\n                    display: {\n                        xs: \"none\",\n                        md: \"block\",\n                    },\n                    transition: \"width 0.3s ease\",\n                }}\n            />\n            <Box\n                component=\"nav\"\n                sx={{\n                    position: \"fixed\",\n                    zIndex: 1101,\n                    width: { sm: drawerWidth() },\n                    display: \"flex\",\n                }}\n            >\n                <Drawer\n                    variant=\"temporary\"\n                    open={opened}\n                    onClose={() => setOpened(false)}\n                    ModalProps={{\n                        keepMounted: true, // Better open performance on mobile.\n                    }}\n                    sx={{\n                        display: { sm: \"block\", md: \"none\" },\n                        \"& .MuiDrawer-paper\": {\n                            width: 256,\n                            bgcolor: \"secondary.main\",\n                        },\n                    }}\n                >\n                    <Box\n                        sx={{\n                            height: 64,\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        <RenderToTitle collapsed={false} />\n                    </Box>\n                    {drawer}\n                </Drawer>\n                <Drawer\n                    variant=\"permanent\"\n                    PaperProps={{ elevation: 1 }}\n                    sx={{\n                        display: { xs: \"none\", md: \"block\" },\n                        \"& .MuiDrawer-paper\": {\n                            width: drawerWidth,\n                            bgcolor: \"secondary.main\",\n                            overflow: \"hidden\",\n                            transition:\n                                \"width 200ms cubic-bezier(0.4, 0, 0.6, 1) 0ms\",\n                        },\n                    }}\n                    open\n                >\n                    <Box\n                        sx={{\n                            height: 64,\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        <RenderToTitle collapsed={collapsed} />\n                    </Box>\n                    <Box\n                        sx={{\n                            flexGrow: 1,\n                            overflowX: \"hidden\",\n                            overflowY: \"auto\",\n                        }}\n                    >\n                        {drawer}\n                    </Box>\n                    <Button\n                        sx={{\n                            background: \"rgba(0,0,0,.5)\",\n                            color: \"secondary.contrastText\",\n                            textAlign: \"center\",\n                            borderRadius: 0,\n                            borderTop: \"1px solid #ffffff1a\",\n                        }}\n                        fullWidth\n                        size=\"large\"\n                        onClick={() => setCollapsed((prev) => !prev)}\n                    >\n                        {collapsed ? <ChevronRight /> : <ChevronLeft />}\n                    </Button>\n                </Drawer>\n                <Box\n                    sx={{\n                        display: { xs: \"block\", md: \"none\" },\n                        position: \"fixed\",\n                        top: \"64px\",\n                        left: \"0px\",\n                        borderRadius: \"0 6px 6px 0\",\n                        bgcolor: \"secondary.main\",\n                        zIndex: 1199,\n                        width: \"36px\",\n                    }}\n                >\n                    <IconButton\n                        sx={{ color: \"#fff\", width: \"36px\" }}\n                        onClick={() => setOpened((prev) => !prev)}\n                    >\n                        <MenuRounded />\n                    </IconButton>\n                </Box>\n            </Box>\n        </>\n    );\n};\n","import React from \"react\";\nimport { useGetIdentity, useActiveAuthProvider } from \"@refinedev/core\";\nimport { AppBar, Stack, Toolbar, Typography, Avatar } from \"@mui/material\";\n\nimport { RefineLayoutHeaderProps } from \"../types\";\n\nexport const Header: React.FC<RefineLayoutHeaderProps> = () => {\n    const authProvider = useActiveAuthProvider();\n    const { data: user } = useGetIdentity({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const shouldRenderHeader = user && (user.name || user.avatar);\n\n    return shouldRenderHeader ? (\n        <AppBar color=\"default\" position=\"sticky\" elevation={1}>\n            <Toolbar>\n                <Stack\n                    direction=\"row\"\n                    width=\"100%\"\n                    justifyContent=\"flex-end\"\n                    alignItems=\"center\"\n                >\n                    <Stack\n                        direction=\"row\"\n                        gap=\"16px\"\n                        alignItems=\"center\"\n                        justifyContent=\"center\"\n                    >\n                        <Typography variant=\"subtitle2\">\n                            {user?.name}\n                        </Typography>\n                        <Avatar src={user?.avatar} alt={user?.name} />\n                    </Stack>\n                </Stack>\n            </Toolbar>\n        </AppBar>\n    ) : null;\n};\n","import React from \"react\";\nimport {\n    useRouterContext,\n    TitleProps,\n    useLink,\n    useRouterType,\n} from \"@refinedev/core\";\nimport { Button } from \"@mui/material\";\n\nexport const Title: React.FC<TitleProps> = ({ collapsed }) => {\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    return (\n        <Button fullWidth variant=\"text\" disableRipple>\n            <ActiveLink to=\"/\">\n                {collapsed ? (\n                    <img\n                        src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine-mini.svg\"\n                        alt=\"Refine\"\n                        width=\"28px\"\n                        style={{ maxHeight: \"38px\" }}\n                    />\n                ) : (\n                    <img\n                        src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine.svg\"\n                        alt=\"Refine\"\n                        width=\"140px\"\n                    />\n                )}\n            </ActiveLink>\n        </Button>\n    );\n};\n","import * as React from \"react\";\nimport { LoginPageProps, useActiveAuthProvider } from \"@refinedev/core\";\nimport { useForm } from \"@refinedev/react-hook-form\";\nimport {\n    Button,\n    TextField,\n    FormControlLabel,\n    Checkbox,\n    Link,\n    Box,\n    Typography,\n    Container,\n    Card,\n    CardContent,\n} from \"@mui/material\";\n\nimport { BaseRecord, HttpError, useLogin, useTranslate } from \"@refinedev/core\";\n\ntype ILoginForm = {\n    username: string;\n    password: string;\n    remember?: boolean;\n};\n\n/**\n * @deprecated LoginPage is deprecated. Use AuthPage instead. @see {@link https://refine.dev/docs/api-reference/mui/components/mui-auth-page} for more details.\n * **refine** has a default login page form which is served on `/login` route when the `authProvider` configuration is provided.\n *\n * @see {@link https://refine.dev/docs/api-references/components/refine-config#loginpage} for more details.\n */\nexport const LoginPage: React.FC<LoginPageProps> = () => {\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm<BaseRecord, HttpError, ILoginForm>();\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: login, isLoading } = useLogin<ILoginForm>({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const translate = useTranslate();\n\n    return (\n        <>\n            <Box\n                component=\"div\"\n                sx={{\n                    background: `radial-gradient(50% 50% at 50% 50%, #63386A 0%, #310438 100%)`,\n                    backgroundSize: \"cover\",\n                }}\n            >\n                <Container\n                    component=\"main\"\n                    maxWidth=\"xs\"\n                    sx={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                        height: \"100vh\",\n                    }}\n                >\n                    <Box\n                        sx={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            flexDirection: \"column\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        <div>\n                            <img\n                                src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine.svg\"\n                                alt=\"Refine Logo\"\n                                style={{ maxWidth: 200 }}\n                            />\n                        </div>\n                        <Box mt={4}>\n                            <Card>\n                                <CardContent sx={{ paddingX: \"32px\" }}>\n                                    <Typography\n                                        component=\"h1\"\n                                        variant=\"h5\"\n                                        align=\"center\"\n                                        sx={{\n                                            fontWeight: \"700\",\n                                            margin: \"12px 0\",\n                                        }}\n                                    >\n                                        {translate(\n                                            \"pages.login.title\",\n                                            \"Sign in your account\",\n                                        )}\n                                    </Typography>\n                                    <Box\n                                        component=\"form\"\n                                        onSubmit={handleSubmit((data) => {\n                                            login(data);\n                                        })}\n                                        gap=\"16px\"\n                                    >\n                                        <TextField\n                                            {...register(\"username\", {\n                                                required: true,\n                                            })}\n                                            id=\"username\"\n                                            margin=\"normal\"\n                                            size=\"small\"\n                                            fullWidth\n                                            label={translate(\n                                                \"pages.login.username\",\n                                                \"Username\",\n                                            )}\n                                            name=\"username\"\n                                            autoComplete=\"username\"\n                                            autoFocus\n                                        />\n                                        <TextField\n                                            {...register(\"password\", {\n                                                required: true,\n                                            })}\n                                            id=\"password\"\n                                            size=\"small\"\n                                            margin=\"normal\"\n                                            fullWidth\n                                            name=\"password\"\n                                            label={translate(\n                                                \"pages.login.password\",\n                                                \"Password\",\n                                            )}\n                                            helperText={\n                                                errors?.password?.message\n                                            }\n                                            type=\"password\"\n                                            placeholder=\"●●●●●●●●\"\n                                            autoComplete=\"current-password\"\n                                        />\n                                        <Box\n                                            component=\"div\"\n                                            sx={{\n                                                display: \"flex\",\n                                                justifyContent: \"space-between\",\n                                                alignItems: \"center\",\n                                            }}\n                                        >\n                                            <FormControlLabel\n                                                sx={{\n                                                    span: {\n                                                        fontSize: \"12px\",\n                                                        color: \"text.secondary\",\n                                                    },\n                                                }}\n                                                color=\"secondary\"\n                                                control={\n                                                    <Checkbox\n                                                        size=\"small\"\n                                                        id=\"remember\"\n                                                        {...register(\n                                                            \"remember\",\n                                                        )}\n                                                    />\n                                                }\n                                                label={translate(\n                                                    \"pages.login.remember\",\n                                                    \"Remember me\",\n                                                )}\n                                            />\n                                            <Link\n                                                href=\"#\"\n                                                sx={{\n                                                    fontSize: \"12px\",\n                                                    textDecoration: \"none\",\n                                                }}\n                                            >\n                                                <Typography\n                                                    sx={{\n                                                        fontSize: \"12px\",\n                                                    }}\n                                                >\n                                                    {translate(\n                                                        \"pages.login.forgotPassword\",\n                                                        \"Forgot password?\",\n                                                    )}\n                                                </Typography>\n                                            </Link>\n                                        </Box>\n                                        <Button\n                                            type=\"submit\"\n                                            fullWidth\n                                            variant=\"contained\"\n                                            sx={{\n                                                my: \"8px\",\n                                                color: \"white\",\n                                            }}\n                                            disabled={isLoading}\n                                        >\n                                            {translate(\n                                                \"pages.login.signin\",\n                                                \"Sign in\",\n                                            )}\n                                        </Button>\n                                        <Box style={{ marginTop: 8 }}>\n                                            <Typography variant=\"subtitle2\">\n                                                {translate(\n                                                    \"pages.login.noAccount\",\n                                                    \"Don’t have an account?\",\n                                                )}{\" \"}\n                                                <Link\n                                                    underline=\"none\"\n                                                    href=\"#\"\n                                                    style={{\n                                                        fontWeight: \"bold\",\n                                                    }}\n                                                >\n                                                    {translate(\n                                                        \"pages.login.signup\",\n                                                        \"Sign up\",\n                                                    )}\n                                                </Link>\n                                            </Typography>\n                                        </Box>\n                                    </Box>\n                                </CardContent>\n                            </Card>\n                        </Box>\n                    </Box>\n                </Container>\n            </Box>\n        </>\n    );\n};\n","import * as React from \"react\";\nimport { RefineReadyPageProps } from \"@refinedev/ui-types\";\nimport { Stack, Grid, Typography, Button, Link } from \"@mui/material\";\n\n/**\n * @deprecated `ReadyPage` is deprecated and will be removed in the next major release.\n */\nexport const ReadyPage: React.FC<RefineReadyPageProps> = () => {\n    const renderCode = (text: string) => (\n        <Typography\n            sx={{\n                backgroundColor: (theme) =>\n                    theme.palette.secondary.contrastText,\n                color: (theme) => theme.palette.secondary.main,\n                display: \"inline-block\",\n                fontFamily: \"monospace\",\n            }}\n        >\n            {text}\n        </Typography>\n    );\n    return (\n        <>\n            <Grid\n                container\n                sx={{\n                    backgroundColor: (theme) => theme.palette.secondary.main,\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    height: \"100vh\",\n                    backgroundImage:\n                        \"url('https://refine.ams3.cdn.digitaloceanspaces.com/login-background/background.png')\",\n                    backgroundSize: \"cover\",\n                }}\n                p={3}\n            >\n                <Grid\n                    display=\"flex\"\n                    flexDirection=\"column\"\n                    flex={1}\n                    alignItems=\"center\"\n                    color={(theme) => theme.palette.primary.contrastText}\n                >\n                    <Typography display=\"flex\" justifyContent=\"center\">\n                        <img\n                            style={{ marginBottom: \"48px\" }}\n                            src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine.svg\"\n                            alt=\"Refine Logo\"\n                        />\n                    </Typography>\n                    <Typography\n                        variant=\"h2\"\n                        fontWeight=\"bold\"\n                        display=\"flex\"\n                        justifyContent=\"center\"\n                    >\n                        Welcome on board\n                    </Typography>\n                    <Typography variant=\"h5\" mt={2}>\n                        Your configuration is completed.\n                    </Typography>\n                    <Typography variant=\"h6\" mt={2}>\n                        Now you can get started by adding your resources to the{\" \"}\n                        {renderCode(`resources`)} property of{\" \"}\n                        {renderCode(`Refine`)}\n                    </Typography>\n                    <Grid\n                        item\n                        sm={12}\n                        mt={12}\n                        display=\"flex\"\n                        justifyContent=\"center\"\n                    >\n                        <Stack\n                            spacing={2}\n                            direction={{ xs: \"column\", sm: \"row\" }}\n                        >\n                            <Link\n                                href=\"https://refine.dev\"\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                                style={{\n                                    textDecoration: \"none\",\n                                }}\n                            >\n                                <Button variant=\"outlined\" fullWidth>\n                                    Documentation\n                                </Button>\n                            </Link>\n                            <Link\n                                href=\"https://refine.dev/examples\"\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                                style={{\n                                    textDecoration: \"none\",\n                                }}\n                            >\n                                <Button variant=\"outlined\" fullWidth>\n                                    Examples\n                                </Button>\n                            </Link>\n                            <Link\n                                href=\"https://discord.gg/refine\"\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                                style={{\n                                    textDecoration: \"none\",\n                                }}\n                            >\n                                <Button variant=\"outlined\" fullWidth>\n                                    Community\n                                </Button>\n                            </Link>\n                        </Stack>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n","import * as React from \"react\";\nimport { Stack, Grid, Typography, Button, Link } from \"@mui/material\";\n\n/**\n * It is a page that welcomes you after the configuration is completed.\n */\nexport const WelcomePage: React.FC = () => {\n    return (\n        <>\n            <Grid\n                container\n                sx={{\n                    backgroundColor: (theme) => theme.palette.secondary.main,\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    height: \"100vh\",\n                    backgroundImage:\n                        \"url('https://refine.ams3.cdn.digitaloceanspaces.com/login-background/background.png')\",\n                    backgroundSize: \"cover\",\n                }}\n                p={3}\n            >\n                <Grid\n                    display=\"flex\"\n                    flexDirection=\"column\"\n                    flex={1}\n                    alignItems=\"center\"\n                    color={(theme) => theme.palette.primary.contrastText}\n                >\n                    <Typography display=\"flex\" justifyContent=\"center\">\n                        <img\n                            style={{ marginBottom: \"48px\" }}\n                            src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine.svg\"\n                            alt=\"Refine Logo\"\n                        />\n                    </Typography>\n                    <Typography\n                        variant=\"h2\"\n                        fontWeight=\"bold\"\n                        display=\"flex\"\n                        justifyContent=\"center\"\n                    >\n                        Welcome on board\n                    </Typography>\n                    <Typography variant=\"h5\" mt={2}>\n                        Your configuration is completed.\n                    </Typography>\n                    <Grid\n                        item\n                        sm={12}\n                        mt={12}\n                        display=\"flex\"\n                        justifyContent=\"center\"\n                    >\n                        <Stack\n                            spacing={2}\n                            direction={{ xs: \"column\", sm: \"row\" }}\n                        >\n                            <Link\n                                href=\"https://refine.dev\"\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                                style={{\n                                    textDecoration: \"none\",\n                                }}\n                            >\n                                <Button variant=\"outlined\" fullWidth>\n                                    Documentation\n                                </Button>\n                            </Link>\n                            <Link\n                                href=\"https://refine.dev/examples\"\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                                style={{\n                                    textDecoration: \"none\",\n                                }}\n                            >\n                                <Button variant=\"outlined\" fullWidth>\n                                    Examples\n                                </Button>\n                            </Link>\n                            <Link\n                                href=\"https://discord.gg/refine\"\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                                style={{\n                                    textDecoration: \"none\",\n                                }}\n                            >\n                                <Button variant=\"outlined\" fullWidth>\n                                    Community\n                                </Button>\n                            </Link>\n                        </Stack>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useGo, useResource, useRouterType } from \"@refinedev/core\";\nimport { RefineErrorPageProps } from \"@refinedev/ui-types\";\nimport { useNavigation, useTranslate } from \"@refinedev/core\";\nimport { Stack, Button, Tooltip, Typography, Grid } from \"@mui/material\";\nimport { Info } from \"@mui/icons-material\";\n\nexport const ErrorComponent: React.FC<RefineErrorPageProps> = () => {\n    const [errorMessage, setErrorMessage] = useState<string>();\n    const { push } = useNavigation();\n    const go = useGo();\n    const routerType = useRouterType();\n\n    const { resource, action } = useResource();\n\n    const translate = useTranslate();\n\n    useEffect(() => {\n        if (resource && action) {\n            setErrorMessage(\n                translate(\n                    \"pages.error.info\",\n                    {\n                        action,\n                        resource: resource?.name,\n                    },\n                    `You may have forgotten to add the \"${action}\" component to \"${resource?.name}\" resource.`,\n                ),\n            );\n        }\n    }, [action, resource]);\n\n    return (\n        <Grid\n            display=\"flex\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            mt={20}\n        >\n            <Grid\n                container\n                direction=\"column\"\n                display=\"flex\"\n                alignItems=\"center\"\n            >\n                <Typography variant=\"h1\">404</Typography>\n                <Stack direction=\"row\" spacing=\"2\">\n                    <Typography>\n                        {translate(\n                            \"pages.error.404\",\n                            \"Sorry, the page you visited does not exist.\",\n                        )}\n                    </Typography>\n\n                    {errorMessage && (\n                        <Tooltip title={errorMessage}>\n                            <Info data-testid=\"error-component-tooltip\" />\n                        </Tooltip>\n                    )}\n                </Stack>\n                <Button\n                    onClick={() => {\n                        if (routerType === \"legacy\") {\n                            push(\"/\");\n                        } else {\n                            go({ to: \"/\" });\n                        }\n                    }}\n                >\n                    {translate(\"pages.error.backHome\", \"Back Home\")}\n                </Button>\n            </Grid>\n        </Grid>\n    );\n};\n","import React from \"react\";\nimport { BoxProps, CardProps } from \"@mui/material\";\nimport { AuthPageProps, RegisterFormTypes } from \"@refinedev/core\";\nimport { UseFormProps } from \"@refinedev/react-hook-form\";\n\nimport {\n    LoginPage,\n    RegisterPage,\n    ForgotPasswordPage,\n    UpdatePasswordPage,\n} from \"./components\";\n\nexport interface FormPropsType extends UseFormProps {\n    onSubmit?: (values: RegisterFormTypes) => void;\n}\n\nexport type AuthProps = AuthPageProps<BoxProps, CardProps, FormPropsType>;\n\n/**\n * **refine** has a default auth page form served on the `/login` route when the `authProvider` configuration is provided.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/mui-auth-page/} for more details.\n */\nexport const AuthPage: React.FC<AuthProps> = (props) => {\n    const { type } = props;\n    const renderView = () => {\n        switch (type) {\n            case \"register\":\n                return <RegisterPage {...props} />;\n            case \"forgotPassword\":\n                return <ForgotPasswordPage {...props} />;\n            case \"updatePassword\":\n                return <UpdatePasswordPage {...props} />;\n            default:\n                return <LoginPage {...props} />;\n        }\n    };\n\n    return <>{renderView()}</>;\n};\n","import * as React from \"react\";\nimport {\n    LoginPageProps,\n    LoginFormTypes,\n    useActiveAuthProvider,\n} from \"@refinedev/core\";\nimport { useForm } from \"@refinedev/react-hook-form\";\nimport { FormProvider } from \"react-hook-form\";\nimport {\n    Button,\n    BoxProps,\n    Box,\n    Checkbox,\n    Container,\n    Card,\n    CardContent,\n    CardContentProps,\n    FormControlLabel,\n    TextField,\n    Typography,\n    Divider,\n    Link as MuiLink,\n} from \"@mui/material\";\n\nimport {\n    BaseRecord,\n    HttpError,\n    useLogin,\n    useTranslate,\n    useRouterContext,\n    useRouterType,\n    useLink,\n} from \"@refinedev/core\";\nimport { layoutStyles, titleStyles } from \"../styles\";\n\nimport { FormPropsType } from \"../../index\";\ntype LoginProps = LoginPageProps<BoxProps, CardContentProps, FormPropsType>;\n\n/**\n * login will be used as the default type of the <AuthPage> component. The login page will be used to log in to the system.\n * @see {@link https://refine.dev/docs/api-reference/mui/components/mui-auth-page/#login} for more details.\n */\nexport const LoginPage: React.FC<LoginProps> = ({\n    providers,\n    registerLink,\n    forgotPasswordLink,\n    rememberMe,\n    contentProps,\n    wrapperProps,\n    renderContent,\n    formProps,\n}) => {\n    const { onSubmit, ...useFormProps } = formProps || {};\n    const methods = useForm<BaseRecord, HttpError, LoginFormTypes>({\n        ...useFormProps,\n    });\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = methods;\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: login, isLoading } = useLogin<LoginFormTypes>({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const translate = useTranslate();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const renderProviders = () => {\n        if (providers && providers.length > 0) {\n            return (\n                <>\n                    {providers.map((provider: any) => {\n                        return (\n                            <Button\n                                key={provider.name}\n                                fullWidth\n                                variant=\"outlined\"\n                                sx={{\n                                    my: \"8px\",\n                                    textTransform: \"none\",\n                                }}\n                                onClick={() =>\n                                    login({ providerName: provider.name })\n                                }\n                                startIcon={provider.icon}\n                            >\n                                {provider.label}\n                            </Button>\n                        );\n                    })}\n                    <Divider style={{ fontSize: 12 }}>\n                        {translate(\"pages.login.divider\", \"or\")}\n                    </Divider>\n                </>\n            );\n        }\n        return null;\n    };\n\n    const Content = (\n        <Card {...(contentProps ?? {})}>\n            <CardContent sx={{ paddingX: \"32px\" }}>\n                <Typography\n                    component=\"h1\"\n                    variant=\"h5\"\n                    align=\"center\"\n                    style={titleStyles}\n                    color=\"primary\"\n                >\n                    {translate(\"pages.login.title\", \"Sign in to your account\")}\n                </Typography>\n                <Box\n                    component=\"form\"\n                    onSubmit={handleSubmit((data) => {\n                        if (onSubmit) {\n                            return onSubmit(data);\n                        }\n\n                        return login(data);\n                    })}\n                    gap=\"16px\"\n                >\n                    {renderProviders()}\n                    <TextField\n                        {...register(\"email\", {\n                            required: true,\n                        })}\n                        id=\"email\"\n                        margin=\"normal\"\n                        fullWidth\n                        label={translate(\"pages.login.fields.email\", \"Email\")}\n                        error={!!errors.email}\n                        name=\"email\"\n                        type=\"email\"\n                        autoComplete=\"email\"\n                    />\n                    <TextField\n                        {...register(\"password\", {\n                            required: true,\n                        })}\n                        id=\"password\"\n                        margin=\"normal\"\n                        fullWidth\n                        name=\"password\"\n                        label={translate(\n                            \"pages.login.fields.password\",\n                            \"Password\",\n                        )}\n                        helperText={errors?.password?.message}\n                        error={!!errors.password}\n                        type=\"password\"\n                        placeholder=\"●●●●●●●●\"\n                        autoComplete=\"current-password\"\n                    />\n\n                    <Box\n                        component=\"div\"\n                        sx={{\n                            display: \"flex\",\n                            justifyContent: \"space-between\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        {rememberMe ?? (\n                            <FormControlLabel\n                                sx={{\n                                    span: {\n                                        fontSize: \"14px\",\n                                        color: \"text.secondary\",\n                                    },\n                                }}\n                                color=\"secondary\"\n                                control={\n                                    <Checkbox\n                                        size=\"small\"\n                                        id=\"remember\"\n                                        {...register(\"remember\")}\n                                    />\n                                }\n                                label={translate(\n                                    \"pages.login.buttons.rememberMe\",\n                                    \"Remember me\",\n                                )}\n                            />\n                        )}\n                        {forgotPasswordLink ?? (\n                            <MuiLink\n                                variant=\"body2\"\n                                component={ActiveLink}\n                                underline=\"none\"\n                                to=\"/forgot-password\"\n                            >\n                                {translate(\n                                    \"pages.login.buttons.forgotPassword\",\n                                    \"Forgot password?\",\n                                )}\n                            </MuiLink>\n                        )}\n                    </Box>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{\n                            mt: \"8px\",\n                        }}\n                        disabled={isLoading}\n                    >\n                        {translate(\"pages.login.signin\", \"Sign in\")}\n                    </Button>\n                    {registerLink ?? (\n                        <Box style={{ marginTop: 8 }}>\n                            <Typography variant=\"body2\" component=\"span\">\n                                {translate(\n                                    \"pages.login.buttons.noAccount\",\n                                    \"Don’t have an account?\",\n                                )}\n                            </Typography>\n                            <MuiLink\n                                ml=\"8px\"\n                                variant=\"body2\"\n                                component={ActiveLink}\n                                underline=\"none\"\n                                to=\"/register\"\n                                fontWeight=\"bold\"\n                            >\n                                {translate(\"pages.login.signup\", \"Sign up\")}\n                            </MuiLink>\n                        </Box>\n                    )}\n                </Box>\n            </CardContent>\n        </Card>\n    );\n\n    return (\n        <FormProvider {...methods}>\n            <Box component=\"div\" style={layoutStyles} {...(wrapperProps ?? {})}>\n                <Container\n                    component=\"main\"\n                    maxWidth=\"xs\"\n                    sx={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                        height: \"100vh\",\n                    }}\n                >\n                    <Box\n                        sx={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            flexDirection: \"column\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        {renderContent ? renderContent(Content) : Content}\n                    </Box>\n                </Container>\n            </Box>\n        </FormProvider>\n    );\n};\n","import { CSSProperties } from \"react\";\n\nexport const layoutStyles: CSSProperties = {\n    background: `radial-gradient(50% 50% at 50% 50%, #6813CB 0%, #2A2A42 100%)`,\n    backgroundSize: \"cover\",\n};\n\nexport const titleStyles: CSSProperties = {\n    textAlign: \"center\",\n    fontSize: \"24px\",\n    letterSpacing: \"-0.04em\",\n    marginBottom: \"24px\",\n    overflowWrap: \"break-word\",\n    hyphens: \"manual\",\n    textOverflow: \"unset\",\n    whiteSpace: \"pre-wrap\",\n};\n","import * as React from \"react\";\nimport {\n    RegisterFormTypes,\n    RegisterPageProps,\n    useActiveAuthProvider,\n} from \"@refinedev/core\";\nimport { useForm } from \"@refinedev/react-hook-form\";\n\nimport {\n    Button,\n    TextField,\n    Box,\n    Typography,\n    Container,\n    Card,\n    CardContent,\n    BoxProps,\n    CardContentProps,\n    Divider,\n    Link as MuiLink,\n} from \"@mui/material\";\n\nimport {\n    BaseRecord,\n    HttpError,\n    useTranslate,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    useRegister,\n} from \"@refinedev/core\";\n\nimport { layoutStyles, titleStyles } from \"../styles\";\nimport { FormPropsType } from \"../../index\";\n\ntype RegisterProps = RegisterPageProps<\n    BoxProps,\n    CardContentProps,\n    FormPropsType\n>;\n\n/**\n * The register page will be used to register new users. You can use the following props for the <AuthPage> component when the type is \"register\".\n * @see {@link https://refine.dev/docs/api-reference/mui/components/mui-auth-page/#register} for more details.\n */\nexport const RegisterPage: React.FC<RegisterProps> = ({\n    loginLink,\n    wrapperProps,\n    contentProps,\n    renderContent,\n    providers,\n    formProps,\n}) => {\n    const { onSubmit, ...useFormProps } = formProps || {};\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm<BaseRecord, HttpError, RegisterFormTypes>({\n        ...useFormProps,\n    });\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: registerMutate, isLoading } =\n        useRegister<RegisterFormTypes>({\n            v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n        });\n    const translate = useTranslate();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const renderProviders = () => {\n        if (providers && providers.length > 0) {\n            return (\n                <>\n                    {providers.map((provider: any) => {\n                        return (\n                            <Button\n                                key={provider.name}\n                                fullWidth\n                                variant=\"outlined\"\n                                sx={{\n                                    my: \"8px\",\n                                    textTransform: \"none\",\n                                }}\n                                onClick={() =>\n                                    registerMutate({\n                                        providerName: provider.name,\n                                    })\n                                }\n                                startIcon={provider.icon}\n                            >\n                                {provider.label}\n                            </Button>\n                        );\n                    })}\n                    <Divider style={{ fontSize: 12 }}>\n                        {translate(\"pages.login.divider\", \"or\")}\n                    </Divider>\n                </>\n            );\n        }\n        return null;\n    };\n\n    const Content = (\n        <Card {...(contentProps ?? {})}>\n            <CardContent sx={{ paddingX: \"32px\" }}>\n                <Typography\n                    component=\"h1\"\n                    variant=\"h5\"\n                    align=\"center\"\n                    style={titleStyles}\n                    color=\"primary\"\n                >\n                    {translate(\n                        \"pages.register.title\",\n                        \"Sign up for your account\",\n                    )}\n                </Typography>\n                {renderProviders()}\n                <Box\n                    component=\"form\"\n                    onSubmit={handleSubmit((data) => {\n                        if (onSubmit) {\n                            return onSubmit(data);\n                        }\n\n                        return registerMutate(data);\n                    })}\n                    gap=\"16px\"\n                >\n                    <TextField\n                        {...register(\"email\", {\n                            required: true,\n                            pattern: {\n                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                                message: translate(\n                                    \"pages.register.errors.validEmail\",\n                                    \"Invalid email address\",\n                                ),\n                            },\n                        })}\n                        id=\"email\"\n                        margin=\"normal\"\n                        fullWidth\n                        label={translate(\"pages.register.email\", \"Email\")}\n                        error={!!errors.email}\n                        helperText={\n                            errors[\"email\"] ? errors[\"email\"].message : \"\"\n                        }\n                        name=\"email\"\n                        autoComplete=\"email\"\n                    />\n                    <TextField\n                        {...register(\"password\", {\n                            required: true,\n                        })}\n                        id=\"password\"\n                        margin=\"normal\"\n                        fullWidth\n                        name=\"password\"\n                        label={translate(\n                            \"pages.register.fields.password\",\n                            \"Password\",\n                        )}\n                        helperText={\n                            errors[\"password\"] ? errors[\"password\"].message : \"\"\n                        }\n                        error={!!errors.password}\n                        type=\"password\"\n                        placeholder=\"●●●●●●●●\"\n                        autoComplete=\"current-password\"\n                    />\n\n                    {loginLink ?? (\n                        <Box display=\"flex\" justifyContent=\"flex-end\">\n                            <Typography variant=\"body2\" component=\"span\">\n                                {translate(\n                                    \"pages.login.buttons.haveAccount\",\n                                    \"Have an account?\",\n                                )}\n                            </Typography>\n                            <MuiLink\n                                ml=\"6px\"\n                                variant=\"body2\"\n                                component={ActiveLink}\n                                underline=\"none\"\n                                to=\"/login\"\n                                fontWeight=\"bold\"\n                            >\n                                {translate(\"pages.login.signin\", \"Sign in\")}\n                            </MuiLink>\n                        </Box>\n                    )}\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{\n                            my: \"8px\",\n                            color: \"white\",\n                        }}\n                        disabled={isLoading}\n                    >\n                        {translate(\"pages.register.signup\", \"Sign up\")}\n                    </Button>\n                </Box>\n            </CardContent>\n        </Card>\n    );\n\n    return (\n        <Box component=\"div\" style={layoutStyles} {...(wrapperProps ?? {})}>\n            <Container\n                component=\"main\"\n                maxWidth=\"xs\"\n                sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"center\",\n                    height: \"100vh\",\n                }}\n            >\n                {renderContent ? renderContent(Content) : Content}\n            </Container>\n        </Box>\n    );\n};\n","import * as React from \"react\";\nimport {\n    ForgotPasswordPageProps,\n    ForgotPasswordFormTypes,\n} from \"@refinedev/core\";\nimport { useForm } from \"@refinedev/react-hook-form\";\nimport {\n    Button,\n    TextField,\n    Box,\n    Typography,\n    Container,\n    Card,\n    CardContent,\n    BoxProps,\n    CardContentProps,\n    Link as MuiLink,\n} from \"@mui/material\";\n\nimport {\n    BaseRecord,\n    HttpError,\n    useTranslate,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    useForgotPassword,\n} from \"@refinedev/core\";\n\nimport { layoutStyles, titleStyles } from \"../styles\";\nimport { FormPropsType } from \"../../index\";\n\ntype ForgotPasswordProps = ForgotPasswordPageProps<\n    BoxProps,\n    CardContentProps,\n    FormPropsType\n>;\n\n/**\n * The forgotPassword type is a page that allows users to reset their passwords. You can use this page to reset your password.\n * @see {@link https://refine.dev/docs/api-reference/mui/components/mui-auth-page/#forgot-password} for more details.\n */\nexport const ForgotPasswordPage: React.FC<ForgotPasswordProps> = ({\n    loginLink,\n    wrapperProps,\n    contentProps,\n    renderContent,\n    formProps,\n}) => {\n    const { onSubmit, ...useFormProps } = formProps || {};\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm<BaseRecord, HttpError, ForgotPasswordFormTypes>({\n        ...useFormProps,\n    });\n\n    const { mutate, isLoading } = useForgotPassword<ForgotPasswordFormTypes>();\n    const translate = useTranslate();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const Content = (\n        <Card {...(contentProps ?? {})}>\n            <CardContent sx={{ paddingX: \"32px\" }}>\n                <Typography\n                    component=\"h1\"\n                    variant=\"h5\"\n                    align=\"center\"\n                    style={titleStyles}\n                    color=\"primary\"\n                >\n                    {translate(\n                        \"pages.forgotPassword.title\",\n                        \"Forgot your password?\",\n                    )}\n                </Typography>\n                <Box\n                    component=\"form\"\n                    onSubmit={handleSubmit((data) => {\n                        if (onSubmit) {\n                            return onSubmit(data);\n                        }\n\n                        return mutate(data);\n                    })}\n                    gap=\"16px\"\n                >\n                    <TextField\n                        {...register(\"email\", {\n                            required: true,\n                            pattern: {\n                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                                message: translate(\n                                    \"pages.register.errors.validEmail\",\n                                    \"Invalid email address\",\n                                ),\n                            },\n                        })}\n                        id=\"email\"\n                        margin=\"normal\"\n                        fullWidth\n                        label={translate(\n                            \"pages.forgotPassword.fields.email\",\n                            \"Email\",\n                        )}\n                        name=\"email\"\n                        type=\"email\"\n                        error={!!errors.email}\n                        autoComplete=\"email\"\n                    />\n                    {loginLink ?? (\n                        <Box textAlign=\"right\">\n                            <Typography variant=\"body2\" component=\"span\">\n                                {translate(\n                                    \"pages.register.buttons.haveAccount\",\n                                    \"Have an account?\",\n                                )}\n                            </Typography>{\" \"}\n                            <MuiLink\n                                variant=\"body2\"\n                                component={ActiveLink}\n                                underline=\"none\"\n                                to=\"/register\"\n                                fontWeight=\"bold\"\n                            >\n                                {translate(\"pages.login.signin\", \"Sign in\")}\n                            </MuiLink>\n                        </Box>\n                    )}\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{\n                            mt: \"8px\",\n                        }}\n                        disabled={isLoading}\n                    >\n                        {translate(\n                            \"pages.forgotPassword.buttons.submit\",\n                            \"Send reset instructions\",\n                        )}\n                    </Button>\n                </Box>\n            </CardContent>\n        </Card>\n    );\n\n    return (\n        <>\n            <Box component=\"div\" style={layoutStyles} {...(wrapperProps ?? {})}>\n                <Container\n                    component=\"main\"\n                    maxWidth=\"xs\"\n                    sx={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                        height: \"100vh\",\n                    }}\n                >\n                    {renderContent ? renderContent(Content) : Content}\n                </Container>\n            </Box>\n        </>\n    );\n};\n","import * as React from \"react\";\nimport {\n    UpdatePasswordFormTypes,\n    UpdatePasswordPageProps,\n    useActiveAuthProvider,\n} from \"@refinedev/core\";\nimport { useForm } from \"@refinedev/react-hook-form\";\nimport {\n    Button,\n    TextField,\n    Box,\n    Typography,\n    Container,\n    Card,\n    CardContent,\n    BoxProps,\n    CardContentProps,\n} from \"@mui/material\";\n\nimport {\n    BaseRecord,\n    HttpError,\n    useTranslate,\n    useUpdatePassword,\n} from \"@refinedev/core\";\n\nimport { layoutStyles, titleStyles } from \"../styles\";\nimport { FormPropsType } from \"../../index\";\n\ntype UpdatePasswordProps = UpdatePasswordPageProps<\n    BoxProps,\n    CardContentProps,\n    FormPropsType\n>;\n\n/**\n * The updatePassword type is the page used to update the password of the user.\n * @see {@link https://refine.dev/docs/api-reference/mui/components/mui-auth-page/#update-password} for more details.\n */\nexport const UpdatePasswordPage: React.FC<UpdatePasswordProps> = ({\n    wrapperProps,\n    contentProps,\n    renderContent,\n    formProps,\n}) => {\n    const { onSubmit, ...useFormProps } = formProps || {};\n    const {\n        register,\n        watch,\n        handleSubmit,\n        formState: { errors },\n    } = useForm<BaseRecord, HttpError, UpdatePasswordFormTypes>({\n        ...useFormProps,\n    });\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: update, isLoading } =\n        useUpdatePassword<UpdatePasswordFormTypes>({\n            v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n        });\n    const translate = useTranslate();\n\n    const Content = (\n        <Card {...(contentProps ?? {})}>\n            <CardContent sx={{ paddingX: \"32px\" }}>\n                <Typography\n                    component=\"h1\"\n                    variant=\"h5\"\n                    align=\"center\"\n                    style={titleStyles}\n                    color=\"primary\"\n                >\n                    {translate(\n                        \"pages.updatePassword.title\",\n                        \"Set New Password\",\n                    )}\n                </Typography>\n                <Box\n                    component=\"form\"\n                    onSubmit={handleSubmit((data) => {\n                        if (onSubmit) {\n                            return onSubmit(data);\n                        }\n\n                        return update(data);\n                    })}\n                    gap=\"16px\"\n                >\n                    <TextField\n                        {...register(\"password\", {\n                            required: true,\n                        })}\n                        id=\"password\"\n                        margin=\"normal\"\n                        fullWidth\n                        name=\"password\"\n                        label={translate(\n                            \"pages.updatePassword.fields.password\",\n                            \"New Password\",\n                        )}\n                        helperText={errors?.password?.message}\n                        error={!!errors?.password}\n                        type=\"password\"\n                        placeholder=\"●●●●●●●●\"\n                        autoComplete=\"current-password\"\n                    />\n\n                    <TextField\n                        {...register(\"confirmPassword\", {\n                            required: true,\n                            validate: (value?: string) => {\n                                if (watch(\"password\") !== value) {\n                                    return translate(\n                                        \"pages.updatePassword.errors.confirmPasswordNotMatch\",\n                                        \"Passwords do not match\",\n                                    );\n                                }\n                                return true;\n                            },\n                        })}\n                        id=\"confirmPassword\"\n                        margin=\"normal\"\n                        fullWidth\n                        name=\"confirmPassword\"\n                        label={translate(\n                            \"pages.updatePassword.fields.confirmPassword\",\n                            \"Confirm New Password\",\n                        )}\n                        helperText={errors?.confirmPassword?.message}\n                        error={!!errors?.confirmPassword}\n                        type=\"password\"\n                        placeholder=\"●●●●●●●●\"\n                        autoComplete=\"current-confirm-password\"\n                    />\n\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{\n                            mt: \"8px\",\n                        }}\n                        disabled={isLoading}\n                    >\n                        {translate(\n                            \"pages.updatePassword.buttons.submit\",\n                            \"Update\",\n                        )}\n                    </Button>\n                </Box>\n            </CardContent>\n        </Card>\n    );\n\n    return (\n        <>\n            <Box component=\"div\" style={layoutStyles} {...(wrapperProps ?? {})}>\n                <Container\n                    component=\"main\"\n                    maxWidth=\"xs\"\n                    sx={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                        height: \"100vh\",\n                    }}\n                >\n                    {renderContent ? renderContent(Content) : Content}\n                </Container>\n            </Box>\n        </>\n    );\n};\n","import React from \"react\";\n\nimport {\n    useNavigation,\n    useTranslate,\n    userFriendlyResourceName,\n    useRefineContext,\n    useRouterType,\n    useBack,\n    useResource,\n} from \"@refinedev/core\";\n\nimport {\n    Card,\n    CardHeader,\n    CardActions,\n    CardContent,\n    IconButton,\n    Typography,\n    Box,\n} from \"@mui/material\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\n\nimport { Breadcrumb, SaveButton } from \"@components\";\nimport { CreateProps } from \"../types\";\n\n/**\n * `<Create>` provides us a layout to display the page.\n * It does not contain any logic but adds extra functionalities like action buttons and giving titles to the page.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/basic-views/create} for more details.\n */\nexport const Create: React.FC<CreateProps> = ({\n    title,\n    children,\n    saveButtonProps,\n    resource: resourceFromProps,\n    isLoading = false,\n    breadcrumb: breadcrumbFromProps,\n    wrapperProps,\n    headerProps,\n    contentProps,\n    headerButtonProps,\n    headerButtons,\n    footerButtonProps,\n    footerButtons,\n    goBack: goBackFromProps,\n}) => {\n    const translate = useTranslate();\n    const { options: { breadcrumb: globalBreadcrumb } = {} } =\n        useRefineContext();\n\n    const routerType = useRouterType();\n    const back = useBack();\n    const { goBack } = useNavigation();\n\n    const { resource, action } = useResource(resourceFromProps);\n\n    const breadcrumb =\n        typeof breadcrumbFromProps === \"undefined\"\n            ? globalBreadcrumb\n            : breadcrumbFromProps;\n\n    const breadcrumbComponent =\n        typeof breadcrumb !== \"undefined\" ? (\n            <>{breadcrumb}</> ?? undefined\n        ) : (\n            <Breadcrumb />\n        );\n\n    const defaultFooterButtons = (\n        <SaveButton\n            {...(isLoading ? { disabled: true } : {})}\n            {...saveButtonProps}\n        />\n    );\n\n    return (\n        <Card {...(wrapperProps ?? {})}>\n            {breadcrumbComponent}\n            <CardHeader\n                sx={{ display: \"flex\", flexWrap: \"wrap\" }}\n                title={\n                    title ?? (\n                        <Typography variant=\"h5\">\n                            {translate(\n                                `${resource?.name}.titles.create`,\n                                `Create ${userFriendlyResourceName(\n                                    resource?.meta?.label ??\n                                        resource?.options?.label ??\n                                        resource?.label ??\n                                        resource?.name,\n                                    \"singular\",\n                                )}`,\n                            )}\n                        </Typography>\n                    )\n                }\n                avatar={\n                    typeof goBackFromProps !== \"undefined\" ? (\n                        goBackFromProps\n                    ) : (\n                        <IconButton\n                            onClick={\n                                action !== \"list\" ||\n                                typeof action !== \"undefined\"\n                                    ? routerType === \"legacy\"\n                                        ? goBack\n                                        : back\n                                    : undefined\n                            }\n                        >\n                            <ArrowBackIcon />\n                        </IconButton>\n                    )\n                }\n                action={\n                    headerButtons ? (\n                        <Box\n                            display=\"flex\"\n                            gap=\"16px\"\n                            {...(headerButtonProps ?? {})}\n                        >\n                            {headerButtons\n                                ? typeof headerButtons === \"function\"\n                                    ? headerButtons({\n                                          defaultButtons: null,\n                                      })\n                                    : headerButtons\n                                : null}\n                        </Box>\n                    ) : undefined\n                }\n                {...(headerProps ?? {})}\n            />\n            <CardContent {...(contentProps ?? {})}>{children}</CardContent>\n            <CardActions\n                sx={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    gap: \"16px\",\n                    padding: \"16px\",\n                }}\n                {...(footerButtonProps ?? {})}\n            >\n                {footerButtons\n                    ? typeof footerButtons === \"function\"\n                        ? footerButtons({\n                              defaultButtons: defaultFooterButtons,\n                          })\n                        : footerButtons\n                    : defaultFooterButtons}\n            </CardActions>\n        </Card>\n    );\n};\n","import React from \"react\";\n\nimport {\n    useMutationMode,\n    useNavigation,\n    useTranslate,\n    userFriendlyResourceName,\n    useRefineContext,\n    useToPath,\n    useResource,\n    useRouterType,\n    useBack,\n    useGo,\n} from \"@refinedev/core\";\n\nimport {\n    Card,\n    CardHeader,\n    IconButton,\n    CardContent,\n    CardActions,\n    Typography,\n    Box,\n} from \"@mui/material\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\n\nimport {\n    DeleteButton,\n    RefreshButton,\n    ListButton,\n    SaveButton,\n    Breadcrumb,\n} from \"@components\";\nimport { EditProps } from \"../types\";\n\n/**\n * `<Edit>` provides us a layout for displaying the page.\n * It does not contain any logic but adds extra functionalities like a refresh button.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/basic-views/edit} for more details.\n */\nexport const Edit: React.FC<EditProps> = ({\n    title,\n    saveButtonProps,\n    mutationMode: mutationModeProp,\n    recordItemId,\n    children,\n    deleteButtonProps,\n    canDelete,\n    resource: resourceFromProps,\n    isLoading = false,\n    breadcrumb: breadcrumbFromProps,\n    dataProviderName,\n    wrapperProps,\n    headerProps,\n    contentProps,\n    headerButtonProps,\n    headerButtons,\n    footerButtonProps,\n    footerButtons,\n    goBack: goBackFromProps,\n}) => {\n    const translate = useTranslate();\n    const { options: { breadcrumb: globalBreadcrumb } = {} } =\n        useRefineContext();\n    const { mutationMode: mutationModeContext } = useMutationMode();\n    const mutationMode = mutationModeProp ?? mutationModeContext;\n\n    const routerType = useRouterType();\n    const back = useBack();\n    const go = useGo();\n    const { goBack, list: legacyGoList } = useNavigation();\n\n    const {\n        resource,\n        action,\n        id: idFromParams,\n    } = useResource(resourceFromProps);\n\n    const goListPath = useToPath({\n        resource,\n        action: \"list\",\n    });\n\n    const id = recordItemId ?? idFromParams;\n\n    const breadcrumb =\n        typeof breadcrumbFromProps === \"undefined\"\n            ? globalBreadcrumb\n            : breadcrumbFromProps;\n\n    const isDeleteButtonVisible =\n        canDelete ??\n        ((resource?.meta?.canDelete ?? resource?.canDelete) ||\n            deleteButtonProps);\n\n    const breadcrumbComponent =\n        typeof breadcrumb !== \"undefined\" ? (\n            <>{breadcrumb}</> ?? undefined\n        ) : (\n            <Breadcrumb />\n        );\n\n    const defaultHeaderButtons = (\n        <>\n            {!recordItemId && (\n                <ListButton\n                    {...(isLoading ? { disabled: true } : {})}\n                    resource={\n                        routerType === \"legacy\"\n                            ? resource?.route\n                            : resource?.identifier ?? resource?.name\n                    }\n                />\n            )}\n            <RefreshButton\n                {...(isLoading ? { disabled: true } : {})}\n                resource={\n                    routerType === \"legacy\"\n                        ? resource?.route\n                        : resource?.identifier ?? resource?.name\n                }\n                recordItemId={id}\n                dataProviderName={dataProviderName}\n            />\n        </>\n    );\n\n    const defaultFooterButtons = (\n        <>\n            {isDeleteButtonVisible &&\n                (id || deleteButtonProps?.recordItemId) && (\n                    <DeleteButton\n                        {...(isLoading ? { disabled: true } : {})}\n                        resource={\n                            routerType === \"legacy\"\n                                ? resource?.route\n                                : resource?.identifier ?? resource?.name\n                        }\n                        mutationMode={mutationMode}\n                        variant=\"outlined\"\n                        onSuccess={() => {\n                            if (routerType === \"legacy\") {\n                                legacyGoList(\n                                    resource?.route ?? resource?.name ?? \"\",\n                                );\n                            } else {\n                                go({ to: goListPath });\n                            }\n                        }}\n                        recordItemId={id}\n                        dataProviderName={dataProviderName}\n                        {...deleteButtonProps}\n                    />\n                )}\n            <SaveButton\n                {...(isLoading ? { disabled: true } : {})}\n                {...saveButtonProps}\n            />\n        </>\n    );\n\n    return (\n        <Card {...(wrapperProps ?? {})}>\n            {breadcrumbComponent}\n            <CardHeader\n                sx={{ display: \"flex\", flexWrap: \"wrap\" }}\n                title={\n                    title ?? (\n                        <Typography variant=\"h5\">\n                            {translate(\n                                `${resource?.name}.titles.edit`,\n                                `Edit ${userFriendlyResourceName(\n                                    resource?.meta?.label ??\n                                        resource?.options?.label ??\n                                        resource?.label ??\n                                        resource?.name,\n                                    \"singular\",\n                                )}`,\n                            )}\n                        </Typography>\n                    )\n                }\n                avatar={\n                    typeof goBackFromProps !== \"undefined\" ? (\n                        goBackFromProps\n                    ) : (\n                        <IconButton\n                            onClick={\n                                action !== \"list\" &&\n                                typeof action !== \"undefined\"\n                                    ? routerType === \"legacy\"\n                                        ? goBack\n                                        : back\n                                    : undefined\n                            }\n                        >\n                            <ArrowBackIcon />\n                        </IconButton>\n                    )\n                }\n                action={\n                    <Box\n                        display=\"flex\"\n                        gap=\"16px\"\n                        {...(headerButtonProps ?? {})}\n                    >\n                        {headerButtons\n                            ? typeof headerButtons === \"function\"\n                                ? headerButtons({\n                                      defaultButtons: defaultHeaderButtons,\n                                  })\n                                : headerButtons\n                            : defaultHeaderButtons}\n                    </Box>\n                }\n                {...(headerProps ?? {})}\n            />\n            <CardContent {...(contentProps ?? {})}>{children}</CardContent>\n            <CardActions\n                sx={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    gap: \"16px\",\n                    padding: \"16px\",\n                }}\n                {...(footerButtonProps ?? {})}\n            >\n                {footerButtons\n                    ? typeof footerButtons === \"function\"\n                        ? footerButtons({\n                              defaultButtons: defaultFooterButtons,\n                          })\n                        : footerButtons\n                    : defaultFooterButtons}\n            </CardActions>\n        </Card>\n    );\n};\n","import React from \"react\";\n\nimport {\n    useTranslate,\n    userFriendlyResourceName,\n    useRefineContext,\n    useRouterType,\n    useResource,\n} from \"@refinedev/core\";\n\nimport { Card, CardHeader, CardContent, Typography, Box } from \"@mui/material\";\n\nimport { CreateButton, Breadcrumb } from \"@components\";\nimport { ListProps } from \"../types\";\n\n/**\n * `<List>` provides us a layout for displaying the page.\n * It does not contain any logic but adds extra functionalities like a refresh button.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/basic-views/list} for more details.\n */\nexport const List: React.FC<ListProps> = ({\n    title,\n    canCreate,\n    children,\n    createButtonProps,\n    resource: resourceFromProps,\n    breadcrumb: breadcrumbFromProps,\n    wrapperProps,\n    headerProps,\n    contentProps,\n    headerButtonProps,\n    headerButtons,\n}) => {\n    const translate = useTranslate();\n    const { options: { breadcrumb: globalBreadcrumb } = {} } =\n        useRefineContext();\n\n    const routerType = useRouterType();\n\n    const { resource } = useResource(resourceFromProps);\n\n    const isCreateButtonVisible =\n        canCreate ??\n        ((resource?.canCreate ?? !!resource?.create) || createButtonProps);\n\n    const breadcrumb =\n        typeof breadcrumbFromProps === \"undefined\"\n            ? globalBreadcrumb\n            : breadcrumbFromProps;\n\n    const breadcrumbComponent =\n        typeof breadcrumb !== \"undefined\" ? (\n            <>{breadcrumb}</> ?? undefined\n        ) : (\n            <Breadcrumb />\n        );\n\n    const defaultHeaderButtons = isCreateButtonVisible ? (\n        <CreateButton\n            resource={\n                routerType === \"legacy\"\n                    ? resource?.route\n                    : resource?.identifier ?? resource?.name\n            }\n            {...createButtonProps}\n        />\n    ) : null;\n\n    return (\n        <Card {...(wrapperProps ?? {})}>\n            {breadcrumbComponent}\n            <CardHeader\n                sx={{ display: \"flex\", flexWrap: \"wrap\" }}\n                title={\n                    title ?? (\n                        <Typography variant=\"h5\">\n                            {translate(\n                                `${resource?.name}.titles.list`,\n                                userFriendlyResourceName(\n                                    resource?.meta?.label ??\n                                        resource?.options?.label ??\n                                        resource?.label ??\n                                        resource?.name,\n                                    \"plural\",\n                                ),\n                            )}\n                        </Typography>\n                    )\n                }\n                action={\n                    <Box display=\"flex\" gap=\"16px\" {...headerButtonProps}>\n                        {headerButtons\n                            ? typeof headerButtons === \"function\"\n                                ? headerButtons({\n                                      defaultButtons: defaultHeaderButtons,\n                                  })\n                                : headerButtons\n                            : defaultHeaderButtons}\n                    </Box>\n                }\n                {...(headerProps ?? {})}\n            />\n            <CardContent {...(contentProps ?? {})}>{children}</CardContent>\n        </Card>\n    );\n};\n","import React from \"react\";\nimport {\n    useNavigation,\n    useTranslate,\n    userFriendlyResourceName,\n    useRefineContext,\n    useRouterType,\n    useBack,\n    useGo,\n    useResource,\n    useToPath,\n} from \"@refinedev/core\";\n\nimport {\n    Card,\n    CardActions,\n    CardContent,\n    CardHeader,\n    IconButton,\n    Box,\n    Typography,\n} from \"@mui/material\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\n\nimport {\n    DeleteButton,\n    RefreshButton,\n    ListButton,\n    EditButton,\n    Breadcrumb,\n} from \"@components\";\nimport { ShowProps } from \"../types\";\n\n/**\n * `<Show>` provides us a layout for displaying the page.\n * It does not contain any logic but adds extra functionalities like a refresh button.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/basic-views/show} for more details.\n */\nexport const Show: React.FC<ShowProps> = ({\n    title,\n    canEdit,\n    canDelete,\n    isLoading = false,\n    children,\n    resource: resourceFromProps,\n    recordItemId,\n    breadcrumb: breadcrumbFromProps,\n    dataProviderName,\n    wrapperProps,\n    headerProps,\n    contentProps,\n    headerButtonProps,\n    headerButtons,\n    footerButtonProps,\n    footerButtons,\n    goBack: goBackFromProps,\n}) => {\n    const translate = useTranslate();\n    const { options: { breadcrumb: globalBreadcrumb } = {} } =\n        useRefineContext();\n\n    const routerType = useRouterType();\n    const back = useBack();\n    const go = useGo();\n    const { goBack, list: legacyGoList } = useNavigation();\n\n    const {\n        resource,\n        action,\n        id: idFromParams,\n    } = useResource(resourceFromProps);\n\n    const goListPath = useToPath({\n        resource,\n        action: \"list\",\n    });\n\n    const id = recordItemId ?? idFromParams;\n\n    const breadcrumb =\n        typeof breadcrumbFromProps === \"undefined\"\n            ? globalBreadcrumb\n            : breadcrumbFromProps;\n\n    const isDeleteButtonVisible =\n        canDelete ?? resource?.meta?.canDelete ?? resource?.canDelete;\n    const isEditButtonVisible =\n        canEdit ?? resource?.canEdit ?? !!resource?.edit;\n\n    const breadcrumbComponent =\n        typeof breadcrumb !== \"undefined\" ? (\n            <>{breadcrumb}</> ?? undefined\n        ) : (\n            <Breadcrumb />\n        );\n\n    const defaultHeaderButtons = (\n        <>\n            {!recordItemId && (\n                <ListButton\n                    {...(isLoading ? { disabled: true } : {})}\n                    resource={\n                        routerType === \"legacy\"\n                            ? resource?.route\n                            : resource?.identifier ?? resource?.name\n                    }\n                />\n            )}\n            {isEditButtonVisible && (\n                <EditButton\n                    {...(isLoading ? { disabled: true } : {})}\n                    resource={\n                        routerType === \"legacy\"\n                            ? resource?.route\n                            : resource?.identifier ?? resource?.name\n                    }\n                    recordItemId={id}\n                />\n            )}\n            {isDeleteButtonVisible && typeof id !== \"undefined\" && (\n                <DeleteButton\n                    {...(isLoading ? { disabled: true } : {})}\n                    resource={\n                        routerType === \"legacy\"\n                            ? resource?.route\n                            : resource?.identifier ?? resource?.name\n                    }\n                    recordItemId={id}\n                    onSuccess={() => {\n                        if (routerType === \"legacy\") {\n                            legacyGoList(\n                                resource?.route ?? resource?.name ?? \"\",\n                            );\n                        } else {\n                            go({ to: goListPath });\n                        }\n                    }}\n                    dataProviderName={dataProviderName}\n                />\n            )}\n            <RefreshButton\n                {...(isLoading ? { disabled: true } : {})}\n                resource={\n                    routerType === \"legacy\"\n                        ? resource?.route\n                        : resource?.identifier ?? resource?.name\n                }\n                recordItemId={id}\n                dataProviderName={dataProviderName}\n            />\n        </>\n    );\n\n    return (\n        <Card {...(wrapperProps ?? {})}>\n            {breadcrumbComponent}\n            <CardHeader\n                sx={{ display: \"flex\", flexWrap: \"wrap\" }}\n                title={\n                    title ?? (\n                        <Typography variant=\"h5\">\n                            {translate(\n                                `${resource?.name}.titles.show`,\n                                `Show ${userFriendlyResourceName(\n                                    resource?.meta?.label ??\n                                        resource?.options?.label ??\n                                        resource?.label ??\n                                        resource?.name,\n                                    \"singular\",\n                                )}`,\n                            )}\n                        </Typography>\n                    )\n                }\n                avatar={\n                    typeof goBackFromProps !== \"undefined\" ? (\n                        goBackFromProps\n                    ) : (\n                        <IconButton\n                            onClick={\n                                action !== \"list\" &&\n                                typeof action !== \"undefined\"\n                                    ? routerType === \"legacy\"\n                                        ? goBack\n                                        : back\n                                    : undefined\n                            }\n                        >\n                            <ArrowBackIcon />\n                        </IconButton>\n                    )\n                }\n                action={\n                    <Box\n                        display=\"flex\"\n                        gap=\"16px\"\n                        {...(headerButtonProps ?? {})}\n                    >\n                        {headerButtons\n                            ? typeof headerButtons === \"function\"\n                                ? headerButtons({\n                                      defaultButtons: defaultHeaderButtons,\n                                  })\n                                : headerButtons\n                            : defaultHeaderButtons}\n                    </Box>\n                }\n                {...(headerProps ?? {})}\n            />\n            <CardContent {...(contentProps ?? {})}>{children}</CardContent>\n            <CardActions\n                sx={{ padding: \"16px\" }}\n                {...(footerButtonProps ?? {})}\n            >\n                {footerButtons\n                    ? typeof footerButtons === \"function\"\n                        ? footerButtons({ defaultButtons: null })\n                        : footerButtons\n                    : null}\n            </CardActions>\n        </Card>\n    );\n};\n","import React from \"react\";\nimport {\n    useNavigation,\n    useTranslate,\n    useCan,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n} from \"@refinedev/core\";\nimport { RefineButtonTestIds } from \"@refinedev/ui-types\";\nimport { Button } from \"@mui/material\";\nimport { AddBoxOutlined } from \"@mui/icons-material\";\n\nimport { CreateButtonProps } from \"../types\";\n\n/**\n * <CreateButton> uses Material UI {@link https://mui.com/components/buttons/ `<Button> component`}.\n * It uses the {@link https://refine.dev/docs/core/hooks/navigation/useNavigation#create `create`} method from {@link https://refine.dev/docs/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful to redirect the app to the create page route of resource}.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/buttons/create-button} for more details.\n */\nexport const CreateButton: React.FC<CreateButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    hideText = false,\n    accessControl,\n    svgIconProps,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlEnabled = accessControl?.enabled ?? true;\n    const hideIfUnauthorized = accessControl?.hideIfUnauthorized ?? false;\n    const translate = useTranslate();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const { createUrl: generateCreateUrl } = useNavigation();\n\n    const { resource } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"create\",\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n        params: {\n            resource,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const createUrl = resource ? generateCreateUrl(resource, meta) : \"\";\n\n    const { sx, ...restProps } = rest;\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <ActiveLink\n            to={createUrl}\n            replace={false}\n            onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n                if (data?.can === false) {\n                    e.preventDefault();\n                    return;\n                }\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n            style={{ textDecoration: \"none\" }}\n        >\n            <Button\n                disabled={data?.can === false}\n                startIcon={!hideText && <AddBoxOutlined {...svgIconProps} />}\n                title={disabledTitle()}\n                variant=\"contained\"\n                sx={{ minWidth: 0, ...sx }}\n                data-testid={RefineButtonTestIds.CreateButton}\n                {...restProps}\n            >\n                {hideText ? (\n                    <AddBoxOutlined fontSize=\"small\" {...svgIconProps} />\n                ) : (\n                    children ?? translate(\"buttons.create\", \"Create\")\n                )}\n            </Button>\n        </ActiveLink>\n    );\n};\n","import React from \"react\";\nimport {\n    useCan,\n    useNavigation,\n    useTranslate,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n} from \"@refinedev/core\";\nimport { RefineButtonTestIds } from \"@refinedev/ui-types\";\nimport { Button } from \"@mui/material\";\nimport { EditOutlined } from \"@mui/icons-material\";\n\nimport { EditButtonProps } from \"../types\";\n\n/**\n * `<EditButton>` uses uses Material UI {@link https://mui.com/components/buttons/ `<Button>`} component.\n * It uses the {@link https://refine.dev/docs/core/hooks/navigation/useNavigation#edit `edit`} method from {@link https://refine.dev/docs/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful when redirecting the app to the edit page with the record id route of resource}.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/buttons/edit-button} for more details.\n */\nexport const EditButton: React.FC<EditButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    recordItemId,\n    hideText = false,\n    accessControl,\n    svgIconProps,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlEnabled = accessControl?.enabled ?? true;\n    const hideIfUnauthorized = accessControl?.hideIfUnauthorized ?? false;\n    const translate = useTranslate();\n\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const { editUrl: generateEditUrl } = useNavigation();\n\n    const { id, resource } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"edit\",\n        params: { id: recordItemId ?? id, resource },\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const editUrl =\n        resource && (recordItemId ?? id)\n            ? generateEditUrl(resource, recordItemId! ?? id!, meta)\n            : \"\";\n\n    const { sx, ...restProps } = rest;\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <ActiveLink\n            to={editUrl}\n            replace={false}\n            onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n                if (data?.can === false) {\n                    e.preventDefault();\n                    return;\n                }\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n            style={{ textDecoration: \"none\" }}\n        >\n            <Button\n                disabled={data?.can === false}\n                startIcon={\n                    !hideText && (\n                        <EditOutlined\n                            sx={{ selfAlign: \"center\" }}\n                            {...svgIconProps}\n                        />\n                    )\n                }\n                title={disabledTitle()}\n                sx={{ minWidth: 0, ...sx }}\n                data-testid={RefineButtonTestIds.EditButton}\n                {...restProps}\n            >\n                {hideText ? (\n                    <EditOutlined fontSize=\"small\" {...svgIconProps} />\n                ) : (\n                    children ?? translate(\"buttons.edit\", \"Edit\")\n                )}\n            </Button>\n        </ActiveLink>\n    );\n};\n","import React from \"react\";\nimport {\n    useDelete,\n    useTranslate,\n    useMutationMode,\n    useCan,\n    useResource,\n    pickNotDeprecated,\n} from \"@refinedev/core\";\nimport { RefineButtonTestIds } from \"@refinedev/ui-types\";\nimport { Button, Dialog, DialogActions, DialogTitle } from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { DeleteOutline } from \"@mui/icons-material\";\n\nimport { DeleteButtonProps } from \"../types\";\n\n/**\n * `<DeleteButton>` uses Material UI {@link https://mui.com/material-ui/api/loading-button/#main-content `<LoadingButton>`} and {@link https://mui.com/material-ui/react-dialog/#main-content `<Dialog>`} components.\n * When you try to delete something, a dialog modal shows up and asks for confirmation. When confirmed it executes the `useDelete` method provided by your `dataProvider`.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/buttons/delete-button} for more details.\n */\nexport const DeleteButton: React.FC<DeleteButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    recordItemId,\n    onSuccess,\n    mutationMode: mutationModeProp,\n    children,\n    successNotification,\n    errorNotification,\n    hideText = false,\n    accessControl,\n    meta,\n    metaData,\n    dataProviderName,\n    confirmTitle,\n    confirmOkText,\n    confirmCancelText,\n    svgIconProps,\n    invalidates,\n    ...rest\n}) => {\n    const accessControlEnabled = accessControl?.enabled ?? true;\n    const hideIfUnauthorized = accessControl?.hideIfUnauthorized ?? false;\n    const translate = useTranslate();\n\n    const { id, resource } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const { mutationMode: mutationModeContext } = useMutationMode();\n\n    const mutationMode = mutationModeProp ?? mutationModeContext;\n\n    const { mutate, isLoading, variables } = useDelete();\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"delete\",\n        params: { id: recordItemId ?? id, resource },\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n    });\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleCloseOnConfirm = () => {\n        if ((recordItemId ?? id) && resource?.name) {\n            setOpen(false);\n            mutate(\n                {\n                    id: recordItemId ?? id ?? \"\",\n                    resource: resource?.name,\n                    mutationMode,\n                    successNotification,\n                    errorNotification,\n                    meta: pickNotDeprecated(meta, metaData),\n                    metaData: pickNotDeprecated(meta, metaData),\n                    dataProviderName,\n                    invalidates,\n                },\n                {\n                    onSuccess: (value) => {\n                        onSuccess && onSuccess(value);\n                    },\n                },\n            );\n        }\n    };\n\n    const { sx, ...restProps } = rest;\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <div>\n            <LoadingButton\n                color=\"error\"\n                onClick={handleClickOpen}\n                disabled={data?.can === false}\n                loading={(recordItemId ?? id) === variables?.id && isLoading}\n                startIcon={!hideText && <DeleteOutline {...svgIconProps} />}\n                sx={{ minWidth: 0, ...sx }}\n                loadingPosition={hideText ? \"center\" : \"start\"}\n                data-testid={RefineButtonTestIds.DeleteButton}\n                {...restProps}\n            >\n                {hideText ? (\n                    <DeleteOutline fontSize=\"small\" {...svgIconProps} />\n                ) : (\n                    children ?? translate(\"buttons.delete\", \"Delete\")\n                )}\n            </LoadingButton>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    {confirmTitle ??\n                        translate(\"buttons.confirm\", \"Are you sure?\")}\n                </DialogTitle>\n                <DialogActions sx={{ justifyContent: \"center\" }}>\n                    <Button onClick={handleClose}>\n                        {confirmCancelText ??\n                            translate(\"buttons.cancel\", \"Cancel\")}\n                    </Button>\n                    <Button\n                        color=\"error\"\n                        onClick={handleCloseOnConfirm}\n                        autoFocus\n                    >\n                        {confirmOkText ?? translate(\"buttons.delete\", \"Delete\")}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n};\n","import React from \"react\";\nimport {\n    useOne,\n    useTranslate,\n    useResource,\n    pickNotDeprecated,\n} from \"@refinedev/core\";\nimport { RefineButtonTestIds } from \"@refinedev/ui-types\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { RefreshOutlined } from \"@mui/icons-material\";\n\nimport { RefreshButtonProps } from \"../types\";\n\n/**\n * `<RefreshButton>` uses uses Material UI {@link https://mui.com/material-ui/api/loading-button/#main-content `<LoadingButton>`} component\n * to update the data shown on the page via the {@link https://refine.dev/docs/core/hooks/data/useOne `useOne`} method provided by your dataProvider.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/buttons/refresh-button} for more details.\n */\nexport const RefreshButton: React.FC<RefreshButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    recordItemId,\n    hideText = false,\n    meta,\n    metaData,\n    dataProviderName,\n    svgIconProps,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const { resource, id } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const translate = useTranslate();\n\n    const { refetch, isFetching } = useOne({\n        resource: resource?.name,\n        id: recordItemId ?? id ?? \"\",\n        queryOptions: {\n            enabled: false,\n        },\n        meta: pickNotDeprecated(meta, metaData),\n        metaData: pickNotDeprecated(meta, metaData),\n        liveMode: \"off\",\n        dataProviderName,\n    });\n\n    const { sx, ...restProps } = rest;\n\n    return (\n        <LoadingButton\n            startIcon={!hideText && <RefreshOutlined {...svgIconProps} />}\n            loading={isFetching}\n            loadingPosition={hideText ? \"center\" : \"start\"}\n            onClick={(e) => (onClick ? onClick(e) : refetch())}\n            sx={{ minWidth: 0, ...sx }}\n            data-testid={RefineButtonTestIds.RefreshButton}\n            {...restProps}\n        >\n            {hideText ? (\n                <RefreshOutlined fontSize=\"small\" {...svgIconProps} />\n            ) : (\n                children ?? translate(\"buttons.refresh\", \"Refresh\")\n            )}\n        </LoadingButton>\n    );\n};\n","import React from \"react\";\nimport {\n    useCan,\n    useNavigation,\n    useTranslate,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n} from \"@refinedev/core\";\nimport { RefineButtonTestIds } from \"@refinedev/ui-types\";\nimport { Button } from \"@mui/material\";\nimport { VisibilityOutlined } from \"@mui/icons-material\";\n\nimport { ShowButtonProps } from \"../types\";\n\n/**\n * `<ShowButton>` uses uses Material UI {@link https://mui.com/components/buttons/ `<Button>`} component.\n * It uses the {@link https://refine.dev/docs/core/hooks/navigation/useNavigation#show `show`} method from {@link https://refine.dev/docs/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful when red sirecting the app to the show page with the record id route of resource.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/buttons/show-button} for more details.\n */\nexport const ShowButton: React.FC<ShowButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    recordItemId,\n    hideText = false,\n    accessControl,\n    svgIconProps,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlEnabled = accessControl?.enabled ?? true;\n    const hideIfUnauthorized = accessControl?.hideIfUnauthorized ?? false;\n    const { showUrl: generateShowUrl } = useNavigation();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const translate = useTranslate();\n\n    const { id, resource } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"show\",\n        params: { id: recordItemId ?? id, resource },\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const showUrl =\n        resource && (recordItemId || id)\n            ? generateShowUrl(resource, recordItemId! ?? id!, meta)\n            : \"\";\n\n    const { sx, ...restProps } = rest;\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <ActiveLink\n            to={showUrl}\n            replace={false}\n            onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n                if (data?.can === false) {\n                    e.preventDefault();\n                    return;\n                }\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n            style={{ textDecoration: \"none\" }}\n        >\n            <Button\n                disabled={data?.can === false}\n                startIcon={\n                    !hideText && <VisibilityOutlined {...svgIconProps} />\n                }\n                title={disabledTitle()}\n                sx={{ minWidth: 0, ...sx }}\n                data-testid={RefineButtonTestIds.ShowButton}\n                {...restProps}\n            >\n                {hideText ? (\n                    <VisibilityOutlined fontSize=\"small\" {...svgIconProps} />\n                ) : (\n                    children ?? translate(\"buttons.show\", \"Show\")\n                )}\n            </Button>\n        </ActiveLink>\n    );\n};\n","import React from \"react\";\nimport {\n    useCan,\n    useNavigation,\n    useTranslate,\n    userFriendlyResourceName,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    pickNotDeprecated,\n} from \"@refinedev/core\";\nimport { RefineButtonTestIds } from \"@refinedev/ui-types\";\nimport { Button } from \"@mui/material\";\nimport { ListOutlined } from \"@mui/icons-material\";\n\nimport { ListButtonProps } from \"../types\";\n\n/**\n * `<ListButton>` is using uses Material UI {@link https://mui.com/components/buttons/ `<Button>`} component.\n * It uses the  {@link https://refine.dev/docs/core/hooks/navigation/useNavigation#list `list`} method from {@link https://refine.dev/docs/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful when redirecting the app to the list page route of resource}.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/buttons/list-button} for more details.\n */\nexport const ListButton: React.FC<ListButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    hideText = false,\n    accessControl,\n    svgIconProps,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlEnabled = accessControl?.enabled ?? true;\n    const hideIfUnauthorized = accessControl?.hideIfUnauthorized ?? false;\n    const { listUrl: generateListUrl } = useNavigation();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const translate = useTranslate();\n\n    const { resource } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"list\",\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n        params: {\n            resource,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const listUrl = resource ? generateListUrl(resource, meta) : \"\";\n\n    const { sx, ...restProps } = rest;\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <ActiveLink\n            to={listUrl}\n            replace={false}\n            onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n                if (data?.can === false) {\n                    e.preventDefault();\n                    return;\n                }\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n            style={{ textDecoration: \"none\" }}\n        >\n            <Button\n                disabled={data?.can === false}\n                startIcon={!hideText && <ListOutlined {...svgIconProps} />}\n                title={disabledTitle()}\n                sx={{ minWidth: 0, ...sx }}\n                data-testid={RefineButtonTestIds.ListButton}\n                {...restProps}\n            >\n                {hideText ? (\n                    <ListOutlined fontSize=\"small\" {...svgIconProps} />\n                ) : (\n                    children ??\n                    translate(\n                        `${\n                            resource?.name ??\n                            resourceNameFromProps ??\n                            resourceNameOrRouteName\n                        }.titles.list`,\n                        userFriendlyResourceName(\n                            resource?.meta?.label ??\n                                resource?.label ??\n                                resource?.name ??\n                                pickNotDeprecated(\n                                    resourceNameFromProps,\n                                    resourceNameOrRouteName,\n                                ),\n                            \"plural\",\n                        ),\n                    )\n                )}\n            </Button>\n        </ActiveLink>\n    );\n};\n","import React from \"react\";\nimport { useTranslate } from \"@refinedev/core\";\nimport { RefineButtonTestIds } from \"@refinedev/ui-types\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { ImportExportOutlined } from \"@mui/icons-material\";\n\nimport { ExportButtonProps } from \"../types\";\n\n/**\n * `<ExportButton>` uses Material UI {@link https://mui.com/material-ui/api/loading-button/#main-content `<LoadingButton>`} with a default export icon and a default text with \"Export\".\n * It only has presentational value.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/buttons/export-button} for more details.\n */\nexport const ExportButton: React.FC<ExportButtonProps> = ({\n    hideText = false,\n    children,\n    loading = false,\n    svgIconProps,\n    ...rest\n}) => {\n    const translate = useTranslate();\n\n    const { sx, ...restProps } = rest;\n\n    return (\n        <LoadingButton\n            {...rest}\n            loading={loading}\n            startIcon={!hideText && <ImportExportOutlined {...svgIconProps} />}\n            loadingPosition={hideText ? \"center\" : \"start\"}\n            sx={{ minWidth: 0, ...sx }}\n            data-testid={RefineButtonTestIds.ExportButton}\n            {...restProps}\n        >\n            {hideText ? (\n                <ImportExportOutlined fontSize=\"small\" {...svgIconProps} />\n            ) : (\n                children ?? translate(\"buttons.export\", \"Export\")\n            )}\n        </LoadingButton>\n    );\n};\n","import React from \"react\";\nimport { useTranslate } from \"@refinedev/core\";\nimport { RefineButtonTestIds } from \"@refinedev/ui-types\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { SaveOutlined } from \"@mui/icons-material\";\n\nimport { SaveButtonProps } from \"../types\";\n\n/**\n * `<SaveButton>` uses Material UI {@link https://mui.com/material-ui/api/loading-button/#main-content `<LoadingButton>`} component.\n * It uses it for presantation purposes only. Some of the hooks that refine has adds features to this button.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/buttons/save-button} for more details.\n */\nexport const SaveButton: React.FC<SaveButtonProps> = ({\n    hideText = false,\n    svgIconProps,\n    children,\n    ...rest\n}) => {\n    const translate = useTranslate();\n\n    const { sx, ...restProps } = rest;\n\n    return (\n        <LoadingButton\n            startIcon={!hideText && <SaveOutlined {...svgIconProps} />}\n            sx={{ minWidth: 0, ...sx }}\n            variant=\"contained\"\n            data-testid={RefineButtonTestIds.SaveButton}\n            {...restProps}\n        >\n            {hideText ? (\n                <SaveOutlined fontSize=\"small\" {...svgIconProps} />\n            ) : (\n                children ?? translate(\"buttons.save\", \"Save\")\n            )}\n        </LoadingButton>\n    );\n};\n","import React from \"react\";\nimport {\n    useCan,\n    useNavigation,\n    useTranslate,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n} from \"@refinedev/core\";\nimport { RefineButtonTestIds } from \"@refinedev/ui-types\";\nimport { Button } from \"@mui/material\";\nimport { AddBoxOutlined } from \"@mui/icons-material\";\n\nimport { CloneButtonProps } from \"../types\";\n\n/**\n * `<CloneButton>` uses Material UI {@link https://mui.com/components/buttons/ `<Button> component`}.\n * It uses the {@link https://refine.dev/docs/core/hooks/navigation/useNavigation#clone `clone`} method from {@link https://refine.dev/docs/core/hooks/navigation/useNavigation useNavigation} under the hood.\n * It can be useful when redirecting the app to the create page with the record id route of resource.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/buttons/clone-button} for more details.\n *\n */\nexport const CloneButton: React.FC<CloneButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    recordItemId,\n    hideText = false,\n    accessControl,\n    svgIconProps,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlEnabled = accessControl?.enabled ?? true;\n    const hideIfUnauthorized = accessControl?.hideIfUnauthorized ?? false;\n    const { cloneUrl: generateCloneUrl } = useNavigation();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const translate = useTranslate();\n\n    const { id, resource } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"create\",\n        params: { id: recordItemId ?? id, resource },\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const cloneUrl =\n        resource && (recordItemId || id)\n            ? generateCloneUrl(resource, recordItemId! ?? id!, meta)\n            : \"\";\n\n    const { sx, ...restProps } = rest;\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <ActiveLink\n            to={cloneUrl}\n            replace={false}\n            onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n                if (data?.can === false) {\n                    e.preventDefault();\n                    return;\n                }\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n            style={{ textDecoration: \"none\" }}\n        >\n            <Button\n                disabled={data?.can === false}\n                startIcon={!hideText && <AddBoxOutlined {...svgIconProps} />}\n                title={disabledTitle()}\n                sx={{ minWidth: 0, ...sx }}\n                data-testid={RefineButtonTestIds.CloneButton}\n                {...restProps}\n            >\n                {hideText ? (\n                    <AddBoxOutlined fontSize=\"small\" {...svgIconProps} />\n                ) : (\n                    children ?? translate(\"buttons.clone\", \"Clone\")\n                )}\n            </Button>\n        </ActiveLink>\n    );\n};\n","import React from \"react\";\nimport { useTranslate } from \"@refinedev/core\";\nimport { RefineButtonTestIds } from \"@refinedev/ui-types\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { ImportExportOutlined } from \"@mui/icons-material\";\n\nimport { ImportButtonProps } from \"../types\";\n\n/**\n * `<ImportButton>` is compatible with the {@link https://refine.dev/docs/core/hooks/import-export/useImport/ `useImport`} core hook.\n * It uses Material UI {@link https://mui.com/material-ui/api/loading-button/#main-content  `<LoadingButton>`} and native html {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input  `<input>`} element.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/buttons/import-button} for more details.\n */\nexport const ImportButton: React.FC<ImportButtonProps> = ({\n    inputProps,\n    hideText = false,\n    loading = false,\n    svgIconProps,\n    children,\n    ...rest\n}) => {\n    const translate = useTranslate();\n\n    const { sx, ...restProps } = rest;\n\n    return (\n        <label htmlFor=\"contained-button-file\">\n            <input {...inputProps} id=\"contained-button-file\" multiple hidden />\n            <LoadingButton\n                component=\"span\"\n                startIcon={\n                    !hideText && <ImportExportOutlined {...svgIconProps} />\n                }\n                loadingPosition={hideText ? \"center\" : \"start\"}\n                loading={loading}\n                sx={{ minWidth: 0, ...sx }}\n                data-testid={RefineButtonTestIds.ImportButton}\n                {...restProps}\n            >\n                {hideText ? (\n                    <ImportExportOutlined fontSize=\"small\" {...svgIconProps} />\n                ) : (\n                    children ?? translate(\"buttons.import\", \"Import\")\n                )}\n            </LoadingButton>\n        </label>\n    );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Box, CircularProgress, Typography } from \"@mui/material\";\n\ntype CircularDeterminateProps = {\n    undoableTimeout: number;\n    message: string;\n};\n\nexport const CircularDeterminate: React.FC<CircularDeterminateProps> = ({\n    undoableTimeout,\n    message,\n}) => {\n    const [progress, setProgress] = useState(100);\n\n    const [timeCount, setTimeCount] = useState(undoableTimeout);\n\n    useEffect(() => {\n        const increaseProgress = 100 / undoableTimeout;\n        const timer = setInterval(() => {\n            setTimeCount((prevProgress) => prevProgress - 1);\n            setProgress((prevProgress) => prevProgress - increaseProgress);\n        }, 1000);\n\n        if (timeCount === 0) {\n            clearInterval(timer);\n        }\n\n        return () => {\n            clearInterval(timer);\n        };\n    }, [timeCount]);\n\n    return (\n        <>\n            <Box sx={{ position: \"relative\", display: \"inline-flex\" }}>\n                <CircularProgress\n                    color=\"inherit\"\n                    variant=\"determinate\"\n                    value={progress}\n                />\n                <Box\n                    sx={{\n                        top: 0,\n                        left: 0,\n                        bottom: 0,\n                        right: 0,\n                        position: \"absolute\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                    }}\n                >\n                    <Typography component=\"div\">{timeCount}</Typography>\n                </Box>\n            </Box>\n            <Box\n                sx={{\n                    marginLeft: \"10px\",\n                    maxWidth: { xs: \"150px\", md: \"100%\" },\n                }}\n            >\n                <Typography variant=\"subtitle2\">{message}</Typography>\n            </Box>\n        </>\n    );\n};\n","import React from \"react\";\nimport { Typography } from \"@mui/material\";\n\nimport { TextFieldProps } from \"../types\";\n\n/**\n * This field lets you show basic text. It uses Materail UI {@link https://mui.com/material-ui/react-typography/#main-content `<Typography>`} component.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/fields/text} for more details.\n */\nconst TextField: React.FC<TextFieldProps> = ({ value, ...rest }) => {\n    return (\n        <Typography variant=\"body2\" {...rest}>\n            {value}\n        </Typography>\n    );\n};\n\nexport { TextField as TextFieldComponent };\n","import React from \"react\";\nimport { Chip } from \"@mui/material\";\n\nimport { TagFieldProps } from \"../types\";\n\n/**\n * This field lets you display a value in a tag. It uses Material UI {@link https://mui.com/material-ui/react-chip/#main-content `<Chip>`} component.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/fields/tag} for more details.\n */\nexport const TagField: React.FC<TagFieldProps> = ({ value, ...rest }) => {\n    return <Chip label={value?.toString()} {...rest} />;\n};\n","import React from \"react\";\nimport { Typography, Link } from \"@mui/material\";\n\nimport { EmailFieldProps } from \"../types\";\n\n/**\n * This field is used to display email values. It uses the {@link https://mui.com/material-ui/react-typography/#main-content `<Typography>` }\n * and {@link https://mui.com/material-ui/react-link/#main-content `<Link>`} components from Material UI.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/fields/email} for more details.\n */\nexport const EmailField: React.FC<EmailFieldProps> = ({ value, ...rest }) => {\n    return (\n        <Typography variant=\"body2\">\n            <Link href={`mailto:${value}`} {...rest}>\n                {value}\n            </Link>\n        </Typography>\n    );\n};\n","import React from \"react\";\n\nimport { Tooltip } from \"@mui/material\";\nimport { CheckOutlined, CloseOutlined } from \"@mui/icons-material\";\n\nimport { BooleanFieldProps } from \"../types\";\n\n/**\n * This field is used to display boolean values. It uses the {@link https://mui.com/material-ui/react-tooltip/#main-content `<Tooltip>`} values from Materila UI.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/fields/boolean} for more details.\n */\nexport const BooleanField: React.FC<BooleanFieldProps> = ({\n    value,\n    valueLabelTrue = \"true\",\n    valueLabelFalse = \"false\",\n    trueIcon,\n    falseIcon,\n    svgIconProps,\n    ...rest\n}) => {\n    return (\n        <Tooltip title={value ? valueLabelTrue : valueLabelFalse} {...rest}>\n            {value ? (\n                <span>{trueIcon ?? <CheckOutlined {...svgIconProps} />}</span>\n            ) : (\n                <span>{falseIcon ?? <CloseOutlined {...svgIconProps} />}</span>\n            )}\n        </Tooltip>\n    );\n};\n","import React from \"react\";\n\nimport dayjs from \"dayjs\";\nimport LocalizedFormat from \"dayjs/plugin/localizedFormat\";\nimport { Typography } from \"@mui/material\";\n\nimport { DateFieldProps } from \"../types\";\n\ndayjs.extend(LocalizedFormat);\n\nconst defaultLocale = dayjs.locale();\n\n/**\n * This field is used to display dates. It uses {@link https://day.js.org/docs/en/display/format `Day.js`} to display date format and\n * Material UI {@link https://mui.com/material-ui/react-typography/#main-content `<Typography>`} component\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/fields/date} for more details.\n */\nexport const DateField: React.FC<DateFieldProps> = ({\n    value,\n    locales,\n    format: dateFormat = \"L\",\n    ...rest\n}) => {\n    return (\n        <Typography variant=\"body2\" {...rest}>\n            {dayjs(value)\n                .locale(locales || defaultLocale)\n                .format(dateFormat)}\n        </Typography>\n    );\n};\n","import React from \"react\";\n\nimport { UrlField } from \"@components\";\n\nimport { FileFieldProps } from \"../types\";\n\n/**\n * This field is used to display files and  uses Material UI {@link https://mui.com/material-ui/react-typography/#main-content `<Typography>`}  and {@link https://mui.com/material-ui/react-link/#main-content `<Link>`} components.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/fields/file} for more details.\n */\nexport const FileField: React.FC<FileFieldProps> = ({\n    title,\n    src,\n    ...rest\n}) => {\n    return (\n        <UrlField value={src} title={title} {...rest}>\n            {title ?? src}\n        </UrlField>\n    );\n};\n","import React from \"react\";\nimport { Typography, Link } from \"@mui/material\";\n\nimport { UrlFieldProps } from \"../types\";\n\n/**\n * This field lets you embed a link.It uses the {@link https://mui.com/material-ui/react-typography/#main-content `<Typography>` }\n * and {@link https://mui.com/material-ui/react-link/#main-content `<Link>`} components from Material UI.\n * You can pass a URL in its `value` property and you can show a text in its place by passing any `children`.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/fields/url} for more details.\n */\nexport const UrlField: React.FC<UrlFieldProps> = ({\n    children,\n    value,\n    ...rest\n}) => {\n    return (\n        <Typography variant=\"body2\">\n            <Link href={value} {...rest}>\n                {children ?? value}\n            </Link>\n        </Typography>\n    );\n};\n","import React from \"react\";\nimport { Typography } from \"@mui/material\";\n\nimport { NumberFieldProps } from \"../types\";\n\nfunction toLocaleStringSupportsOptions() {\n    return !!(\n        typeof Intl == \"object\" &&\n        Intl &&\n        typeof Intl.NumberFormat == \"function\"\n    );\n}\n\n/**\n * This field is used to display a number formatted according to the browser locale, right aligned. and uses {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl `Intl`} to display date format\n * and Material UI {@link https://mui.com/material-ui/react-typography/#main-content `<Typography>`} component.\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/fields/number} for more details.\n */\nexport const NumberField: React.FC<NumberFieldProps> = ({\n    value,\n    locale,\n    options,\n    ...rest\n}) => {\n    const number = parseFloat(value.toString());\n\n    return (\n        <Typography variant=\"body2\" {...rest}>\n            {toLocaleStringSupportsOptions()\n                ? number.toLocaleString(locale, options)\n                : number}\n        </Typography>\n    );\n};\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from \"remark-gfm\";\n\nimport { MarkdownFieldProps } from \"../types\";\n\n/**\n * This field lets you display markdown content. It supports {@link https://github.github.com/gfm/ GitHub Flavored Markdown}.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/fields/markdown} for more details.\n */\nexport const MarkdownField: React.FC<MarkdownFieldProps> = ({ value = \"\" }) => {\n    return <ReactMarkdown plugins={[gfm]}>{value}</ReactMarkdown>;\n};\n","import React from \"react\";\nimport {\n    matchResourceFromRoute,\n    useBreadcrumb,\n    useLink,\n    useRefineContext,\n    useResource,\n    useRouterContext,\n    useRouterType,\n} from \"@refinedev/core\";\nimport { RefineBreadcrumbProps } from \"@refinedev/ui-types\";\n\nimport {\n    Breadcrumbs,\n    BreadcrumbsProps as MuiBreadcrumbProps,\n    Typography,\n    Link,\n    LinkProps,\n    Grid,\n} from \"@mui/material\";\n\nimport { HomeOutlined } from \"@mui/icons-material\";\n\nexport type BreadcrumbProps = RefineBreadcrumbProps<MuiBreadcrumbProps>;\n\nexport const Breadcrumb: React.FC<BreadcrumbProps> = ({\n    breadcrumbProps,\n    showHome = true,\n    hideIcons = false,\n    meta,\n}) => {\n    const { breadcrumbs } = useBreadcrumb({ meta });\n    const routerType = useRouterType();\n    const NewLink = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : NewLink;\n\n    const { hasDashboard } = useRefineContext();\n\n    const { resources } = useResource();\n\n    const rootRouteResource = matchResourceFromRoute(\"/\", resources);\n\n    if (breadcrumbs.length === 1) {\n        return null;\n    }\n\n    const LinkRouter = (props: LinkProps & { to?: string }) => (\n        <Link {...props} component={ActiveLink} />\n    );\n\n    return (\n        <Breadcrumbs\n            aria-label=\"breadcrumb\"\n            sx={{\n                paddingY: 2,\n                paddingX: 2,\n                ...(breadcrumbProps?.sx ?? {}),\n            }}\n            {...breadcrumbProps}\n        >\n            {showHome && (hasDashboard || rootRouteResource.found) && (\n                <LinkRouter\n                    underline=\"hover\"\n                    sx={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                    }}\n                    color=\"inherit\"\n                    to=\"/\"\n                >\n                    {rootRouteResource?.resource?.meta?.icon ?? (\n                        <HomeOutlined\n                            sx={{\n                                fontSize: \"18px\",\n                            }}\n                        />\n                    )}\n                </LinkRouter>\n            )}\n            {breadcrumbs.map(({ label, icon, href }) => {\n                return (\n                    <Grid\n                        key={label}\n                        sx={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            \"& .MuiSvgIcon-root\": {\n                                fontSize: \"16px\",\n                            },\n                        }}\n                    >\n                        {!hideIcons && icon}\n                        {href ? (\n                            <LinkRouter\n                                underline=\"hover\"\n                                sx={{\n                                    display: \"flex\",\n                                    alignItems: \"center\",\n                                    fontSize: \"14px\",\n                                }}\n                                color=\"inherit\"\n                                to={href}\n                                variant=\"subtitle1\"\n                                marginLeft={0.5}\n                            >\n                                {label}\n                            </LinkRouter>\n                        ) : (\n                            <Typography fontSize=\"14px\">{label}</Typography>\n                        )}\n                    </Grid>\n                );\n            })}\n        </Breadcrumbs>\n    );\n};\n","import {\n    useSelect as useSelectCore,\n    HttpError,\n    UseSelectProps,\n    UseSelectReturnType,\n    BaseRecord,\n} from \"@refinedev/core\";\nimport { AutocompleteProps } from \"@mui/material/Autocomplete\";\nimport isEqual from \"lodash/isEqual\";\nimport unionWith from \"lodash/unionWith\";\n\nexport type UseAutocompleteProps<TData, TError> = Pick<\n    UseSelectProps<TData, TError>,\n    \"resource\"\n> &\n    Omit<UseSelectProps<TData, TError>, \"optionLabel\" | \"optionValue\">;\n\ntype AutocompletePropsType<TData> = Required<\n    Pick<\n        AutocompleteProps<TData, boolean, boolean, boolean>,\n        \"options\" | \"loading\" | \"onInputChange\" | \"filterOptions\"\n    >\n>;\n\nexport type UseAutocompleteReturnType<TData extends BaseRecord> = Omit<\n    UseSelectReturnType<TData>,\n    \"options\"\n> & {\n    autocompleteProps: AutocompletePropsType<TData>;\n};\n\nexport const useAutocomplete = <\n    TData extends BaseRecord = any,\n    TError extends HttpError = HttpError,\n>(\n    props: UseAutocompleteProps<TData, TError>,\n): UseAutocompleteReturnType<TData> => {\n    const { queryResult, defaultValueQueryResult, onSearch } = useSelectCore<\n        TData,\n        TError\n    >(props);\n\n    return {\n        autocompleteProps: {\n            options: unionWith(\n                queryResult.data?.data || [],\n                defaultValueQueryResult.data?.data || [],\n                isEqual,\n            ),\n            loading:\n                queryResult.isFetching || defaultValueQueryResult.isFetching,\n            onInputChange: (event, value) => {\n                if (event?.type === \"change\") {\n                    onSearch(value);\n                }\n            },\n            filterOptions: (x) => x,\n        },\n        onSearch,\n        queryResult,\n        defaultValueQueryResult,\n    };\n};\n","import { useState } from \"react\";\nimport {\n    BaseRecord,\n    CrudFilters,\n    HttpError,\n    useTable as useTableCore,\n    useTableProps as useTablePropsCore,\n    useTableReturnType as useTableReturnTypeCore,\n    useLiveMode,\n    pickNotDeprecated,\n    Pagination,\n    Prettify,\n} from \"@refinedev/core\";\nimport {\n    DataGridProps,\n    GridFilterModel,\n    GridSortModel,\n} from \"@mui/x-data-grid\";\nimport { useTheme, darken } from \"@mui/material\";\nimport differenceWith from \"lodash/differenceWith\";\nimport isEqual from \"lodash/isEqual\";\n\nimport {\n    transformCrudSortingToSortModel,\n    transformSortModelToCrudSorting,\n    transformFilterModelToCrudFilters,\n    transformCrudFiltersToFilterModel,\n} from \"@definitions\";\n\ntype DataGridPropsType = Required<\n    Pick<\n        DataGridProps,\n        | \"rows\"\n        | \"loading\"\n        | \"rowCount\"\n        | \"sortingMode\"\n        | \"sortModel\"\n        | \"onSortModelChange\"\n        | \"filterMode\"\n        | \"onFilterModelChange\"\n        | \"sx\"\n        | \"disableSelectionOnClick\"\n        | \"onStateChange\"\n        | \"paginationMode\"\n    >\n> &\n    Pick<\n        DataGridProps,\n        | \"page\"\n        | \"onPageChange\"\n        | \"pageSize\"\n        | \"onPageSizeChange\"\n        | \"filterModel\"\n    >;\n\nexport type UseDataGridProps<TData, TError, TSearchVariables = unknown> = Omit<\n    useTablePropsCore<TData, TError>,\n    \"pagination\" | \"filters\"\n> & {\n    onSearch?: (data: TSearchVariables) => CrudFilters | Promise<CrudFilters>;\n    pagination?: Prettify<\n        Omit<Pagination, \"pageSize\"> & {\n            /**\n             * Initial number of items per page\n             * @default 25\n             */\n            pageSize?: number;\n        }\n    >;\n    filters?: Prettify<\n        Omit<\n            NonNullable<useTablePropsCore<TData, TError>[\"filters\"]>,\n            \"defaultBehavior\"\n        > & {\n            /**\n             * Default behavior of the `setFilters` function\n             * @default \"replace\"\n             */\n            defaultBehavior?: \"replace\" | \"merge\";\n        }\n    >;\n};\n\nexport type UseDataGridReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TSearchVariables = unknown,\n> = useTableReturnTypeCore<TData, TError> & {\n    dataGridProps: DataGridPropsType;\n    search: (value: TSearchVariables) => Promise<void>;\n};\n\nexport function useDataGrid<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TSearchVariables = unknown,\n>({\n    onSearch: onSearchProp,\n    initialCurrent,\n    initialPageSize = 25,\n    pagination,\n    hasPagination = true,\n    initialSorter,\n    permanentSorter,\n    defaultSetFilterBehavior = \"replace\",\n    initialFilter,\n    permanentFilter,\n    filters: filtersFromProp,\n    sorters: sortersFromProp,\n    syncWithLocation: syncWithLocationProp,\n    resource: resourceFromProp,\n    successNotification,\n    errorNotification,\n    queryOptions,\n    liveMode: liveModeFromProp,\n    onLiveEvent,\n    liveParams,\n    meta,\n    metaData,\n    dataProviderName,\n}: UseDataGridProps<\n    TData,\n    TError,\n    TSearchVariables\n> = {}): UseDataGridReturnType<TData, TError, TSearchVariables> {\n    const theme = useTheme();\n    const liveMode = useLiveMode(liveModeFromProp);\n\n    const [columnsTypes, setColumnsType] = useState<Record<string, string>>();\n\n    const {\n        tableQueryResult,\n        current,\n        setCurrent,\n        pageSize,\n        setPageSize,\n        filters,\n        setFilters,\n        sorters,\n        setSorters,\n        sorter,\n        setSorter,\n        pageCount,\n        createLinkForSyncWithLocation,\n    } = useTableCore<TData, TError>({\n        permanentSorter,\n        permanentFilter,\n        initialCurrent,\n        initialPageSize,\n        pagination,\n        hasPagination,\n        initialSorter,\n        initialFilter,\n        filters: filtersFromProp,\n        sorters: sortersFromProp,\n        syncWithLocation: syncWithLocationProp,\n        defaultSetFilterBehavior,\n        resource: resourceFromProp,\n        successNotification,\n        errorNotification,\n        queryOptions,\n        liveMode: liveModeFromProp,\n        onLiveEvent,\n        liveParams,\n        meta: pickNotDeprecated(meta, metaData),\n        metaData: pickNotDeprecated(meta, metaData),\n        dataProviderName,\n    });\n\n    const [muiCrudFilters, setMuiCrudFilters] = useState<CrudFilters>(filters);\n\n    const { data, isFetched, isLoading } = tableQueryResult;\n\n    const hasPaginationString = hasPagination === false ? \"off\" : \"server\";\n    const isPaginationEnabled =\n        (pagination?.mode ?? hasPaginationString) !== \"off\";\n\n    const preferredPermanentSorters =\n        pickNotDeprecated(sortersFromProp?.permanent, permanentSorter) ?? [];\n    const preferredPermanentFilters =\n        pickNotDeprecated(filtersFromProp?.permanent, permanentFilter) ?? [];\n\n    const handlePageChange = (page: number) => {\n        if (isPaginationEnabled) {\n            setCurrent(page + 1);\n        }\n    };\n    const handlePageSizeChange = (pageSize: number) => {\n        if (isPaginationEnabled) {\n            setPageSize(pageSize);\n        }\n    };\n\n    const handleSortModelChange = (sortModel: GridSortModel) => {\n        const crudSorting = transformSortModelToCrudSorting(sortModel);\n        setSorters(crudSorting);\n    };\n\n    const handleFilterModelChange = (filterModel: GridFilterModel) => {\n        const crudFilters = transformFilterModelToCrudFilters(filterModel);\n        setMuiCrudFilters(crudFilters);\n        setFilters(crudFilters.filter((f) => f.value !== \"\"));\n        if (isPaginationEnabled) {\n            setCurrent(1);\n        }\n    };\n\n    const search = async (value: TSearchVariables) => {\n        if (onSearchProp) {\n            const searchFilters = await onSearchProp(value);\n            setMuiCrudFilters(searchFilters);\n            setFilters(searchFilters.filter((f) => f.value !== \"\"));\n            if (isPaginationEnabled) {\n                setCurrent(1);\n            }\n        }\n    };\n\n    const dataGridPaginationValues = () => {\n        if (isPaginationEnabled) {\n            return {\n                paginationMode: \"server\" as const,\n                page: current - 1,\n                onPageChange: handlePageChange,\n                pageSize,\n                onPageSizeChange: handlePageSizeChange,\n            };\n        }\n\n        return {\n            paginationMode: \"client\" as const,\n        };\n    };\n\n    return {\n        tableQueryResult,\n        dataGridProps: {\n            disableSelectionOnClick: true,\n            rows: data?.data || [],\n            loading: liveMode === \"auto\" ? isLoading : !isFetched,\n            rowCount: data?.total || 0,\n            ...dataGridPaginationValues(),\n            sortingMode: \"server\",\n            sortModel: transformCrudSortingToSortModel(\n                differenceWith(sorters, preferredPermanentSorters, isEqual),\n            ),\n            onSortModelChange: handleSortModelChange,\n            filterMode: \"server\",\n            filterModel: transformCrudFiltersToFilterModel(\n                differenceWith(\n                    muiCrudFilters,\n                    preferredPermanentFilters,\n                    isEqual,\n                ),\n                columnsTypes,\n            ),\n            onFilterModelChange: handleFilterModelChange,\n            onStateChange: (state) => {\n                const newColumnsTypes = Object.fromEntries(\n                    Object.entries(state.columns.lookup).map(([key, value]) => {\n                        return [key, (value as any).type];\n                    }),\n                );\n                const isStateChanged = !isEqual(newColumnsTypes, columnsTypes);\n\n                if (isStateChanged) {\n                    setColumnsType(newColumnsTypes);\n                }\n            },\n            sx: {\n                border: \"none\",\n                \"& .MuiDataGrid-columnHeaders\": {\n                    background: darken(theme.palette.background.paper, 0.05),\n                    borderBottom: `1px solid ${darken(\n                        theme.palette.background.paper,\n                        0.1,\n                    )}`,\n                },\n                \"& .MuiDataGrid-cell\": {\n                    borderBottom: `1px solid ${darken(\n                        theme.palette.background.paper,\n                        0.05,\n                    )}`,\n                },\n            },\n        },\n        current,\n        setCurrent,\n        pageSize,\n        setPageSize,\n        pageCount,\n        sorters,\n        setSorters,\n        sorter,\n        setSorter,\n        filters,\n        setFilters,\n        search,\n        createLinkForSyncWithLocation,\n    };\n}\n","import {\n    GridSortModel,\n    GridFilterModel,\n    GridLinkOperator,\n    GridFilterItem,\n} from \"@mui/x-data-grid\";\nimport {\n    CrudFilters,\n    CrudOperators,\n    CrudSorting,\n    LogicalFilter,\n} from \"@refinedev/core\";\n\nexport const transformSortModelToCrudSorting = (\n    sortModel: GridSortModel,\n): CrudSorting => {\n    const sorter = sortModel.map(({ field, sort }) => ({\n        field,\n        order: sort || \"asc\",\n    }));\n    return sorter;\n};\n\nexport const transformCrudSortingToSortModel = (\n    crudSorting: CrudSorting,\n): GridSortModel => {\n    const sortModel = crudSorting.map(({ field, order }) => ({\n        field,\n        sort: order,\n    }));\n    return sortModel;\n};\n\nexport const transformMuiOperatorToCrudOperator = (\n    operatorValue?: string,\n): Exclude<CrudOperators, \"or\"> => {\n    if (!operatorValue) {\n        return \"eq\";\n    }\n\n    switch (operatorValue) {\n        case \"equals\":\n        case \"is\":\n        case \"=\":\n            return \"eq\";\n        case \"!=\":\n        case \"not\":\n            return \"ne\";\n        case \">\":\n        case \"after\":\n            return \"gt\";\n        case \">=\":\n        case \"onOrAfter\":\n            return \"gte\";\n        case \"<\":\n        case \"before\":\n            return \"lt\";\n        case \"<=\":\n        case \"onOrBefore\":\n            return \"lte\";\n        case \"isEmpty\":\n            return \"null\";\n        case \"isNotEmpty\":\n            return \"nnull\";\n        default:\n            return operatorValue as Exclude<CrudOperators, \"or\">;\n    }\n};\n\nexport const transformFilterModelToCrudFilters = ({\n    items,\n    linkOperator,\n}: GridFilterModel): CrudFilters => {\n    const filters = items.map(({ columnField, value, operatorValue }) => ({\n        field: columnField,\n        value: value ?? \"\",\n        operator: transformMuiOperatorToCrudOperator(operatorValue),\n    }));\n\n    if (linkOperator === GridLinkOperator.Or) {\n        return [{ operator: \"or\", value: filters }];\n    }\n    return filters;\n};\n\nexport const transformCrudOperatorToMuiOperator = (\n    operator: CrudOperators,\n    columnType?: string,\n): string => {\n    switch (columnType) {\n        case \"number\":\n            switch (operator) {\n                case \"eq\":\n                    return \"=\";\n                case \"ne\":\n                    return \"!=\";\n                case \"gt\":\n                    return \">\";\n                case \"gte\":\n                    return \">=\";\n                case \"lt\":\n                    return \"<\";\n                case \"lte\":\n                    return \"<=\";\n                case \"null\":\n                    return \"isEmpty\";\n                case \"nnull\":\n                    return \"isNotEmpty\";\n                default:\n                    return operator;\n            }\n        case \"singleSelect\":\n        case \"boolean\":\n            switch (operator) {\n                case \"eq\":\n                    return \"is\";\n                default:\n                    return operator;\n            }\n        case undefined:\n        case \"string\":\n            switch (operator) {\n                case \"eq\":\n                    return \"equals\";\n                case \"contains\":\n                    return \"contains\";\n                case \"null\":\n                    return \"isEmpty\";\n                case \"nnull\":\n                    return \"isNotEmpty\";\n                default:\n                    return operator;\n            }\n        case \"date\":\n        case \"dateTime\":\n            switch (operator) {\n                case \"eq\":\n                    return \"is\";\n                case \"ne\":\n                    return \"not\";\n                case \"gt\":\n                    return \"after\";\n                case \"gte\":\n                    return \"onOrAfter\";\n                case \"lt\":\n                    return \"before\";\n                case \"lte\":\n                    return \"onOrBefore\";\n                case \"null\":\n                    return \"isEmpty\";\n                case \"nnull\":\n                    return \"isNotEmpty\";\n                default:\n                    return operator;\n            }\n        default:\n            return operator;\n    }\n};\n\nexport const transformCrudFiltersToFilterModel = (\n    crudFilters: CrudFilters,\n    columnsType?: Record<string, string>,\n): GridFilterModel | undefined => {\n    const gridFilterItems: GridFilterItem[] = [];\n\n    const isExistOrFilter = crudFilters.some(\n        (filter) => filter.operator === \"or\",\n    );\n\n    if (columnsType) {\n        if (isExistOrFilter) {\n            const orLogicalFilters = crudFilters.find(\n                (filter) => filter.operator === \"or\",\n            )?.value as LogicalFilter[];\n\n            orLogicalFilters.map(({ field, value, operator }) => {\n                const columnType = columnsType[field];\n\n                gridFilterItems.push({\n                    columnField: field,\n                    operatorValue: transformCrudOperatorToMuiOperator(\n                        operator,\n                        columnType,\n                    ),\n                    value: value === \"\" ? undefined : value,\n                    id: field + operator,\n                });\n            });\n        } else {\n            (crudFilters as LogicalFilter[]).map(\n                ({ field, value, operator }) => {\n                    const columnType = columnsType[field];\n\n                    gridFilterItems.push({\n                        columnField: field,\n                        operatorValue: transformCrudOperatorToMuiOperator(\n                            operator,\n                            columnType,\n                        ),\n                        value: value === \"\" ? undefined : value,\n                        id: field + operator,\n                    });\n                },\n            );\n        }\n    }\n\n    return {\n        items: gridFilterItems,\n        // If there is \"or\" filter, default link operator is \"or\"\n        linkOperator: isExistOrFilter\n            ? GridLinkOperator.Or\n            : GridLinkOperator.And,\n    };\n};\n","import { createTheme, ThemeOptions } from \"@mui/material\";\n\nimport { lightPalette } from \"./palette/lightPalette\";\nimport { darkPalette } from \"./palette/darkPalette\";\nimport { typography } from \"./typography\";\n\nconst commonThemeProperties: ThemeOptions = {\n    shape: {\n        borderRadius: 6,\n    },\n    typography: {\n        ...typography,\n    },\n};\n\nconst LightTheme = createTheme({\n    ...commonThemeProperties,\n    palette: lightPalette,\n    components: {\n        MuiAppBar: {\n            styleOverrides: {\n                colorDefault: {\n                    backgroundColor: \"#fff\",\n                },\n            },\n        },\n        MuiPaper: {\n            styleOverrides: {\n                root: {\n                    backgroundImage:\n                        \"linear-gradient(rgba(255, 255, 255, 0.01), rgba(255, 255, 255, 0.01))\",\n                },\n            },\n        },\n        MuiTypography: {\n            styleOverrides: {\n                h5: {\n                    fontWeight: 800,\n                    lineHeight: \"2rem\",\n                },\n            },\n        },\n    },\n});\n\nconst DarkTheme = createTheme({\n    ...commonThemeProperties,\n    palette: darkPalette,\n    components: {\n        MuiPaper: {\n            styleOverrides: {\n                root: {\n                    backgroundImage:\n                        \"linear-gradient(rgba(255, 255, 255, 0.025), rgba(255, 255, 255, 0.025))\",\n                },\n            },\n        },\n        MuiAppBar: {\n            defaultProps: {\n                color: \"transparent\",\n            },\n        },\n        MuiTypography: {\n            styleOverrides: {\n                h5: {\n                    fontWeight: 800,\n                    lineHeight: \"2rem\",\n                },\n            },\n        },\n    },\n});\n\nexport { LightTheme, DarkTheme };\n","import { PaletteOptions } from \"@mui/material\";\n\nexport const lightPalette: PaletteOptions = {\n    mode: \"light\",\n    primary: {\n        main: \"#67be23\",\n        contrastText: \"#fff\",\n    },\n    secondary: {\n        main: \"#2A132E\",\n        contrastText: \"#fff\",\n    },\n    background: {\n        default: \"#f0f0f0\",\n        paper: \"#ffffff\",\n    },\n    success: {\n        main: \"#67be23\",\n        contrastText: \"#fff\",\n    },\n    error: {\n        main: \"#fa541c\",\n        contrastText: \"#fff\",\n    },\n    warning: {\n        main: \"#fa8c16\",\n        contrastText: \"#fff\",\n    },\n    info: {\n        main: \"#0b82f0\",\n        contrastText: \"#fff\",\n    },\n    divider: \"rgba(0,0,0,0)\",\n    text: {\n        primary: \"#626262\",\n        secondary: \"#9f9f9f\",\n        disabled: \"#c1c1c1\",\n    },\n};\n","import { PaletteOptions } from \"@mui/material\";\n\nexport const darkPalette: PaletteOptions = {\n    mode: \"dark\",\n    primary: {\n        main: \"#67be23\",\n        contrastText: \"#fff\",\n    },\n    secondary: {\n        main: \"#2A132E\",\n        contrastText: \"#fff\",\n    },\n    background: {\n        default: \"#212121\",\n        paper: \"#242424\",\n    },\n    success: {\n        main: \"#67be23\",\n        contrastText: \"#fff\",\n    },\n    error: {\n        main: \"#ee2a1e\",\n        contrastText: \"#fff\",\n    },\n    warning: {\n        main: \"#fa8c16\",\n        contrastText: \"#fff\",\n    },\n    info: {\n        main: \"#1890ff\",\n        contrastText: \"#fff\",\n    },\n    divider: \"rgba(0,0,0,0)\",\n    text: {\n        primary: \"#fff\",\n        secondary: \"rgba(255,255,255,0.7)\",\n        disabled: \"#d1d1d1\",\n    },\n};\n","import { TypographyVariantsOptions } from \"@mui/material\";\n\nexport const typography: TypographyVariantsOptions = {\n    fontFamily: [\n        \"Montserrat\",\n        \"-apple-system\",\n        \"BlinkMacSystemFont\",\n        '\"Segoe UI\"',\n        \"Roboto\",\n        '\"Helvetica Neue\"',\n        \"Arial\",\n        \"sans-serif\",\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n    ].join(\",\"),\n};\n","import React from \"react\";\nimport { NotificationProvider } from \"@refinedev/core\";\n\nimport { useSnackbar } from \"notistack\";\n\nimport { CircularDeterminate } from \"@components\";\nimport { Box, IconButton, Typography } from \"@mui/material\";\nimport { UndoOutlined } from \"@mui/icons-material\";\n\nexport const notificationProvider = (): NotificationProvider => {\n    const { closeSnackbar, enqueueSnackbar } = useSnackbar();\n\n    const notificationProvider: NotificationProvider = {\n        open: ({\n            message,\n            type,\n            undoableTimeout,\n            key,\n            cancelMutation,\n            description,\n        }) => {\n            if (type === \"progress\") {\n                const action = (key: any) => (\n                    <IconButton\n                        onClick={() => {\n                            cancelMutation?.();\n                            closeSnackbar(key);\n                        }}\n                        color=\"inherit\"\n                    >\n                        <UndoOutlined />\n                    </IconButton>\n                );\n                enqueueSnackbar(\n                    <>\n                        <CircularDeterminate\n                            undoableTimeout={undoableTimeout ?? 0}\n                            message={message}\n                        />\n                    </>,\n                    {\n                        action,\n                        anchorOrigin: {\n                            vertical: \"top\",\n                            horizontal: \"right\",\n                        },\n                        preventDuplicate: true,\n                        key,\n                        autoHideDuration: (undoableTimeout ?? 0) * 1000,\n                        disableWindowBlurListener: true,\n                    },\n                );\n            } else {\n                enqueueSnackbar(\n                    <Box>\n                        <Typography variant=\"subtitle2\" component=\"h6\">\n                            {description}\n                        </Typography>\n                        <Typography variant=\"caption\" component=\"p\">\n                            {message}\n                        </Typography>\n                    </Box>,\n                    {\n                        variant: type,\n                        anchorOrigin: {\n                            vertical: \"top\",\n                            horizontal: \"right\",\n                        },\n                        disableWindowBlurListener: true,\n                    },\n                );\n            }\n        },\n        close: (key) => {\n            closeSnackbar(key);\n        },\n    };\n\n    return notificationProvider;\n};\n","import { styled } from \"@mui/material\";\nimport { SnackbarProvider } from \"notistack\";\n\nexport const RefineSnackbarProvider = styled(SnackbarProvider)`\n    &.SnackbarItem-contentRoot {\n        background-color: ${(props) => props.theme.palette.background.default};\n        color: ${(props) => props.theme.palette.primary.main};\n    }\n    &.SnackbarItem-variantSuccess {\n        background-color: ${(props) => props.theme.palette.success.main};\n        color: ${(props) => props.theme.palette.success.contrastText};\n    }\n    &.SnackbarItem-variantError {\n        background-color: ${(props) => props.theme.palette.error.main};\n        color: ${(props) => props.theme.palette.error.contrastText};\n    }\n    &.SnackbarItem-variantInfo {\n        background-color: ${(props) => props.theme.palette.info.main};\n        color: ${(props) => props.theme.palette.info.contrastText};\n    }\n    &.SnackbarItem-variantWarning {\n        background-color: ${(props) => props.theme.palette.warning.main};\n        color: ${(props) => props.theme.palette.warning.contrastText};\n    }\n`;\n"],"mappings":"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","names":["src_exports","__export","AuthPage","BooleanField","Breadcrumb","CircularDeterminate","CloneButton","Create","CreateButton","DarkTheme","DateField","DeleteButton","Edit","EditButton","EmailField","ErrorComponent","ExportButton","FileField","Header","ImportButton","Layout","LightTheme","List","ListButton","LoginPage","MarkdownField","NumberField","ReadyPage","RefineSnackbarProvider","RefreshButton","SaveButton","Show","ShowButton","Sider","TagField","TextField","Title","UrlField","WelcomePage","notificationProvider","useAutocomplete","useDataGrid","__toCommonJS","import_notistack","import_react","import_material","import_react","import_material","import_icons_material","import_core","Sider","TitleFromProps","render","meta","_a","collapsed","setCollapsed","opened","setOpened","drawerWidth","t","routerType","Link","LegacyLink","ActiveLink","hasDashboard","translate","menuItems","selectedKey","defaultOpenKeys","isExistAuthentication","TitleFromContext","authProvider","mutateLogout","open","setOpen","React","previous","previousOpenKeys","key","uniqueKeys","RenderToTitle","Title","handleClick","renderTreeView","tree","item","icon","label","route","name","children","parentName","options","isOpen","isSelected","isNested","dashboard","logout","items","drawer","prev","import_react","import_core","import_material","Header","authProvider","user","React","Layout","Sider","Header","Title","Footer","OffLayoutArea","children","SiderToRender","HeaderToRender","React","theme","import_react","import_core","import_material","Title","collapsed","routerType","Link","LegacyLink","React","React","import_core","import_react_hook_form","import_material","LoginPage","_a","register","handleSubmit","errors","authProvider","login","isLoading","translate","data","React","import_material","ReadyPage","renderCode","text","theme","React","import_material","WelcomePage","theme","import_react","import_core","import_material","import_icons_material","ErrorComponent","errorMessage","setErrorMessage","push","go","routerType","resource","action","translate","React","import_react","React","import_core","import_react_hook_form","import_material","layoutStyles","titleStyles","LoginPage","providers","registerLink","forgotPasswordLink","rememberMe","contentProps","wrapperProps","renderContent","formProps","_a","onSubmit","useFormProps","methods","register","handleSubmit","errors","authProvider","login","isLoading","translate","routerType","Link","LegacyLink","ActiveLink","renderProviders","provider","Content","titleStyles","data","MuiLink","layoutStyles","React","import_core","import_react_hook_form","import_material","RegisterPage","loginLink","wrapperProps","contentProps","renderContent","providers","formProps","onSubmit","useFormProps","register","handleSubmit","errors","authProvider","registerMutate","isLoading","translate","routerType","Link","LegacyLink","ActiveLink","renderProviders","provider","Content","titleStyles","data","MuiLink","layoutStyles","React","import_react_hook_form","import_material","import_core","ForgotPasswordPage","loginLink","wrapperProps","contentProps","renderContent","formProps","onSubmit","useFormProps","register","handleSubmit","errors","mutate","isLoading","translate","routerType","Link","LegacyLink","ActiveLink","Content","titleStyles","data","MuiLink","layoutStyles","React","import_core","import_react_hook_form","import_material","UpdatePasswordPage","wrapperProps","contentProps","renderContent","formProps","_a","_b","onSubmit","useFormProps","register","watch","handleSubmit","errors","authProvider","update","isLoading","translate","Content","titleStyles","data","value","layoutStyles","AuthPage","props","type","React","RegisterPage","ForgotPasswordPage","UpdatePasswordPage","LoginPage","import_react","import_core","import_material","import_ArrowBack","Create","title","children","saveButtonProps","resourceFromProps","isLoading","breadcrumbFromProps","wrapperProps","headerProps","contentProps","headerButtonProps","headerButtons","footerButtonProps","footerButtons","goBackFromProps","_a","_b","_c","_d","_e","_f","translate","globalBreadcrumb","routerType","back","goBack","resource","action","breadcrumb","breadcrumbComponent","React","Breadcrumb","defaultFooterButtons","SaveButton","ArrowBackIcon","import_react","import_core","import_material","import_ArrowBack","Edit","title","saveButtonProps","mutationModeProp","recordItemId","children","deleteButtonProps","canDelete","resourceFromProps","isLoading","breadcrumbFromProps","dataProviderName","wrapperProps","headerProps","contentProps","headerButtonProps","headerButtons","footerButtonProps","footerButtons","goBackFromProps","_a","_b","_c","_d","_e","_f","_g","_h","_i","_j","_k","translate","globalBreadcrumb","mutationModeContext","mutationMode","routerType","back","go","goBack","legacyGoList","resource","action","idFromParams","goListPath","id","breadcrumb","isDeleteButtonVisible","breadcrumbComponent","React","Breadcrumb","defaultHeaderButtons","ListButton","RefreshButton","defaultFooterButtons","DeleteButton","SaveButton","ArrowBackIcon","import_react","import_core","import_material","List","title","canCreate","children","createButtonProps","resourceFromProps","breadcrumbFromProps","wrapperProps","headerProps","contentProps","headerButtonProps","headerButtons","_a","_b","_c","_d","_e","_f","_g","_h","translate","globalBreadcrumb","routerType","resource","isCreateButtonVisible","breadcrumb","breadcrumbComponent","React","Breadcrumb","defaultHeaderButtons","CreateButton","import_react","import_core","import_material","import_ArrowBack","Show","title","canEdit","canDelete","isLoading","children","resourceFromProps","recordItemId","breadcrumbFromProps","dataProviderName","wrapperProps","headerProps","contentProps","headerButtonProps","headerButtons","footerButtonProps","footerButtons","goBackFromProps","_a","_b","_c","_d","_e","_f","_g","_h","_i","_j","_k","_l","_m","translate","globalBreadcrumb","routerType","back","go","goBack","legacyGoList","resource","action","idFromParams","goListPath","id","breadcrumb","isDeleteButtonVisible","isEditButtonVisible","breadcrumbComponent","React","Breadcrumb","defaultHeaderButtons","ListButton","EditButton","DeleteButton","RefreshButton","ArrowBackIcon","import_react","import_core","import_ui_types","import_material","import_icons_material","CreateButton","resourceNameFromProps","resourceNameOrRouteName","hideText","accessControl","svgIconProps","meta","children","onClick","rest","_a","_b","accessControlEnabled","hideIfUnauthorized","translate","routerType","Link","LegacyLink","ActiveLink","generateCreateUrl","resource","data","disabledTitle","createUrl","sx","restProps","React","e","import_react","import_core","import_ui_types","import_material","import_icons_material","EditButton","resourceNameFromProps","resourceNameOrRouteName","recordItemId","hideText","accessControl","svgIconProps","meta","children","onClick","rest","_a","_b","accessControlEnabled","hideIfUnauthorized","translate","routerType","Link","LegacyLink","ActiveLink","generateEditUrl","id","resource","data","disabledTitle","editUrl","sx","restProps","React","e","import_react","import_core","import_ui_types","import_material","import_lab","import_icons_material","DeleteButton","resourceNameFromProps","resourceNameOrRouteName","recordItemId","onSuccess","mutationModeProp","children","successNotification","errorNotification","hideText","accessControl","meta","metaData","dataProviderName","confirmTitle","confirmOkText","confirmCancelText","svgIconProps","invalidates","rest","_a","_b","accessControlEnabled","hideIfUnauthorized","translate","id","resource","mutationModeContext","mutationMode","mutate","isLoading","variables","data","open","setOpen","React","handleClickOpen","handleClose","handleCloseOnConfirm","value","sx","restProps","import_react","import_core","import_ui_types","import_lab","import_icons_material","RefreshButton","resourceNameFromProps","resourceNameOrRouteName","recordItemId","hideText","meta","metaData","dataProviderName","svgIconProps","children","onClick","rest","_a","resource","id","translate","refetch","isFetching","sx","restProps","React","e","import_react","import_core","import_ui_types","import_material","import_icons_material","ShowButton","resourceNameFromProps","resourceNameOrRouteName","recordItemId","hideText","accessControl","svgIconProps","meta","children","onClick","rest","_a","_b","accessControlEnabled","hideIfUnauthorized","generateShowUrl","routerType","Link","LegacyLink","ActiveLink","translate","id","resource","data","disabledTitle","showUrl","sx","restProps","React","e","import_react","import_core","import_ui_types","import_material","import_icons_material","ListButton","resourceNameFromProps","resourceNameOrRouteName","hideText","accessControl","svgIconProps","meta","children","onClick","rest","_a","_b","_c","_d","_e","_f","_g","_h","accessControlEnabled","hideIfUnauthorized","generateListUrl","routerType","Link","LegacyLink","ActiveLink","translate","resource","data","disabledTitle","listUrl","sx","restProps","React","e","import_react","import_core","import_ui_types","import_lab","import_icons_material","ExportButton","hideText","children","loading","svgIconProps","rest","translate","sx","restProps","React","import_react","import_core","import_ui_types","import_lab","import_icons_material","SaveButton","hideText","svgIconProps","children","rest","translate","sx","restProps","React","import_react","import_core","import_ui_types","import_material","import_icons_material","CloneButton","resourceNameFromProps","resourceNameOrRouteName","recordItemId","hideText","accessControl","svgIconProps","meta","children","onClick","rest","_a","_b","accessControlEnabled","hideIfUnauthorized","generateCloneUrl","routerType","Link","LegacyLink","ActiveLink","translate","id","resource","data","disabledTitle","cloneUrl","sx","restProps","React","e","import_react","import_core","import_ui_types","import_lab","import_icons_material","ImportButton","inputProps","hideText","loading","svgIconProps","children","rest","translate","sx","restProps","React","import_react","import_material","CircularDeterminate","undoableTimeout","message","progress","setProgress","timeCount","setTimeCount","increaseProgress","timer","prevProgress","React","import_react","import_material","TextField","value","rest","React","import_react","import_material","TagField","value","rest","React","import_react","import_material","EmailField","value","rest","React","import_react","import_material","import_icons_material","BooleanField","value","valueLabelTrue","valueLabelFalse","trueIcon","falseIcon","svgIconProps","rest","React","import_react","import_dayjs","import_localizedFormat","import_material","dayjs","LocalizedFormat","defaultLocale","DateField","value","locales","dateFormat","rest","React","import_react","FileField","title","src","rest","React","UrlField","import_react","import_material","UrlField","children","value","rest","React","import_react","import_material","toLocaleStringSupportsOptions","NumberField","value","locale","options","rest","number","React","import_react","import_react_markdown","import_remark_gfm","MarkdownField","value","React","ReactMarkdown","gfm","import_react","import_core","import_material","import_icons_material","Breadcrumb","breadcrumbProps","showHome","hideIcons","meta","_a","_b","_c","_d","breadcrumbs","routerType","NewLink","LegacyLink","ActiveLink","hasDashboard","resources","rootRouteResource","LinkRouter","props","React","label","icon","href","import_core","import_isEqual","import_unionWith","useAutocomplete","props","_a","_b","queryResult","defaultValueQueryResult","onSearch","useSelectCore","unionWith","isEqual","event","value","x","import_react","import_core","import_material","import_differenceWith","import_isEqual","import_x_data_grid","transformSortModelToCrudSorting","sortModel","field","sort","transformCrudSortingToSortModel","crudSorting","order","transformMuiOperatorToCrudOperator","operatorValue","transformFilterModelToCrudFilters","items","linkOperator","filters","columnField","value","transformCrudOperatorToMuiOperator","operator","columnType","transformCrudFiltersToFilterModel","crudFilters","columnsType","_a","gridFilterItems","isExistOrFilter","filter","useDataGrid","onSearchProp","initialCurrent","initialPageSize","pagination","hasPagination","initialSorter","permanentSorter","defaultSetFilterBehavior","initialFilter","permanentFilter","filtersFromProp","sortersFromProp","syncWithLocationProp","resourceFromProp","successNotification","errorNotification","queryOptions","liveModeFromProp","onLiveEvent","liveParams","meta","metaData","dataProviderName","_a","_b","_c","theme","liveMode","columnsTypes","setColumnsType","tableQueryResult","current","setCurrent","pageSize","setPageSize","filters","setFilters","sorters","setSorters","sorter","setSorter","pageCount","createLinkForSyncWithLocation","useTableCore","muiCrudFilters","setMuiCrudFilters","data","isFetched","isLoading","hasPaginationString","isPaginationEnabled","preferredPermanentSorters","preferredPermanentFilters","handlePageChange","page","handlePageSizeChange","handleSortModelChange","sortModel","crudSorting","transformSortModelToCrudSorting","handleFilterModelChange","filterModel","crudFilters","transformFilterModelToCrudFilters","f","search","value","searchFilters","dataGridPaginationValues","transformCrudSortingToSortModel","differenceWith","isEqual","transformCrudFiltersToFilterModel","state","newColumnsTypes","key","import_material","lightPalette","darkPalette","typography","commonThemeProperties","typography","LightTheme","lightPalette","DarkTheme","darkPalette","import_react","import_notistack","import_material","import_icons_material","notificationProvider","closeSnackbar","enqueueSnackbar","message","type","undoableTimeout","key","cancelMutation","description","action","React","CircularDeterminate","import_material","import_notistack","RefineSnackbarProvider","props"]}