import { HttpError, UseSelectProps, UseSelectReturnType, BaseRecord } from "@refinedev/core";
import { AutocompleteProps } from "@mui/material/Autocomplete";
export declare type UseAutocompleteProps<TData, TError> = Pick<UseSelectProps<TData, TError>, "resource"> & Omit<UseSelectProps<TData, TError>, "optionLabel" | "optionValue">;
declare type AutocompletePropsType<TData> = Required<Pick<AutocompleteProps<TData, boolean, boolean, boolean>, "options" | "loading" | "onInputChange" | "filterOptions">>;
export declare type UseAutocompleteReturnType<TData extends BaseRecord> = Omit<UseSelectReturnType<TData>, "options"> & {
    autocompleteProps: AutocompletePropsType<TData>;
};
export declare const useAutocomplete: <TData extends BaseRecord = any, TError extends HttpError = HttpError>(props: UseAutocompleteProps<TData, TError>) => UseAutocompleteReturnType<TData>;
export {};
//# sourceMappingURL=index.d.ts.map