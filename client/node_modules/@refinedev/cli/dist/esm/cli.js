#!/usr/bin/env node
var ut=Object.defineProperty;var B=(e=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(e,{get:(t,r)=>(typeof require!="undefined"?require:t)[r]}):e)(function(e){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')});var ft=(e,t)=>{for(var r in t)ut(e,r,{get:t[r],enumerable:!0})};import{fileURLToPath as gt}from"url";import ht from"path";var xt=()=>gt(import.meta.url),wt=()=>ht.dirname(xt()),a=wt();import{Command as lo}from"commander";import uo from"figlet";import Ot from"react";import{render as _t}from"ink";import{readFileSync as Ct,existsSync as Et,readJSON as Pt,pathExists as fe}from"fs-extra";import It from"globby";import ge from"execa";import St from"preferred-pm";import yt from"ora";var Tt=async(e,t)=>{let r=yt({color:"cyan",text:t}).start(),n=await e();return r.stop(),n},j=Tt;var L=()=>{if(!Et("package.json"))throw new Error("./package.json not found");return JSON.parse(Ct("package.json","utf8"))},M=()=>{let e=L();return Object.keys(e.dependencies||{})};var he=()=>{let e=L();return Object.keys(e.devDependencies||{})},K=()=>L().scripts,A=async()=>{var e;try{let t=await ge("npm",["ls","--depth=0","--json"],{reject:!1}),r=((e=JSON.parse(t.stdout))==null?void 0:e.dependencies)||{},n=Object.keys(r).filter(s=>s.startsWith("@refinedev")),o=[];for(let s of n){let m=r[s].version;o.push({name:s,version:m})}return o}catch{return Promise.resolve(null)}},xe=async()=>{try{let e=await It("node_modules/@refinedev/*",{onlyDirectories:!0}),t=[];return await Promise.all(e.map(async r=>{if(await fe(`${r}/package.json`)){let o=await Pt(`${r}/package.json`);t.push({name:o.name,path:r})}})),t}catch{return[]}},we=async e=>await fe(`${e}/refine.config.js`),W={npm:{install:["install","--save"],installDev:["install","--save-dev"],outdatedJson:["outdated","--json"]},yarn:{install:["add"],installDev:["add","-D"],outdatedJson:["outdated","--json"]},pnpm:{install:["add"],installDev:["add","-D"],outdatedJson:["outdated","--format","json"]}},_=async()=>{let e=await j(()=>St(process.cwd()),"Getting package manager...");if(!e)throw new Error("Package manager not found.");return e},ye=async e=>{let t=await _();try{let r=W[t.name].install,n=ge(t.name,[...r,...e],{stdio:"inherit"});n.on("message",o=>{console.log(o)}),n.on("error",o=>{console.log(o)}),n.on("exit",o=>{if(o===0){console.log("All `refine` packages updated  \u{1F389}");return}console.log(`Application exited with code ${o}`)})}catch(r){throw new Error(r)}},Te=e=>{let t=e.lastIndexOf("@");return t<=0?{name:e,version:null}:{name:e.slice(0,t),version:e.slice(t+1)}};import E,{useRef as Ce}from"react";import kt from"ink-table";import{Box as vt,Text as b}from"ink";var Ee={name:1,current:2,wanted:3,latest:4},bt=4,te=e=>{let t=e.split(".");return{major:t[0],minor:t[1],patch:t[2]}},Pe=(e,t)=>e.major.trim()!==t.major.trim()?{major:"red",minor:"red",patch:"red"}:e.minor.trim()!==t.minor.trim()?{major:"white",minor:"yellow",patch:"yellow"}:e.patch.trim()!==t.patch.trim()?{major:"white",minor:"white",patch:"green"}:{major:"white",minor:"white",patch:"white"},Nt=({data:e,command:t})=>{let r=Ce(1),n=Ce(0);return E.createElement(vt,{width:"100%",flexDirection:"column",alignItems:"center",justifyContent:"center"},E.createElement(b,null,"Update Available"),E.createElement(kt,{data:e,cell:o=>{var h;let s=E.createElement(b,null,o.children),m=(h=o.children)==null?void 0:h.toString();if(!m)return s;let f=te(e[n.current].current);if(r.current===Ee.wanted){let c=te(m),l=Pe(f,c);s=E.createElement(Ie,{major:{color:l.major,text:c.major},minor:{color:l.minor,text:c.minor},patch:{color:l.patch,text:c.patch}})}if(r.current===Ee.latest){let c=te(m),l=Pe(f,c);s=E.createElement(Ie,{major:{color:l.major,text:c.major},minor:{color:l.minor,text:c.minor},patch:{color:l.patch,text:c.patch}})}return r.current===bt?(n.current+=1,r.current=1):r.current+=1,s}}),E.createElement(b,null,"To update ",E.createElement(b,{bold:!0},"`refine`")," packages with the wanted version"),E.createElement(b,null,"Run the following command"," ",E.createElement(b,{color:"yellowBright"},t)))},Ie=({major:e,minor:t,patch:r})=>E.createElement(b,null,E.createElement(b,{color:e.color},e.text),E.createElement(b,{color:t.color},".",t.text,"."),E.createElement(b,{color:r.color},r.text)),Se=Nt;var Dt=async()=>{let e="npx @refinedev/cli update",t=M(),r=Object.keys(K()),n=t.includes("@refinedev/cli"),o=r.includes("refine");if(!n&&!o)return e;let s=await _();return o?`${s.name} run refine update`:n?"npx refine update":e},G=async e=>{let t=await Dt();_t(Ot.createElement(Se,{data:e,command:t}))};import jt from"execa";import At from"semver-diff";var Rt=e=>e.command("check-updates").description("Check all installed `refine` packages are up to date").action($t),$t=async()=>{let e=await j(H,"Checking for updates...");if(!e.length){console.log("All `refine` packages are up to date \u{1F389}\n");return}await G(e)},H=async()=>await Ut(),Ut=async()=>{let e=await zt();if(!e)return[];let t=[];return Object.keys(e).forEach(n=>{let o=e[n];n.includes("@refinedev")&&t.push({name:n,current:o.current,wanted:o.wanted,latest:o.latest})}),t.filter(n=>!!At(n.current,n.latest))},zt=async()=>{let e="npm",{stdout:t,timedOut:r}=await jt(e,W[e].outdatedJson,{reject:!1,timeout:25e3});if(r)throw new Error("Timed out while checking for updates.");return t?JSON.parse(t):null},ke=Rt;import{copySync as Ht,unlinkSync as Jt,moveSync as qt,pathExistsSync as De,mkdirSync as Xt}from"fs-extra";import se from"temp";import{plural as Yt}from"pluralize";import Kt from"execa";import Gt from"inquirer";import{join as je}from"path";var J=(s=>(s.REACT_SCRIPT="react-scripts",s.REMIX="remix",s.NEXTJS="nextjs",s.VITE="vite",s.CRACO="craco",s))(J||{});var re=(o=>(o.ANTD="antd",o.MUI="mui",o.MANTINE="mantine",o.CHAKRA="chakra-ui",o))(re||{});var ve=(n=>(n.NPM="npm",n.YARN="yarn",n.PNPM="pnpm",n))(ve||{});var C=()=>{let e=M();if(e.includes("@craco/craco"))return"craco";if(e.includes("react-scripts"))return"react-scripts";if(e.includes("next"))return"nextjs";if(e.includes("@remix-run/react"))return"remix";if(he().includes("vite"))return"vite";throw new Error("Project type not found")},be=()=>{let e=M();if(e.includes("@refinedev/antd"))return"antd";if(e.includes("@refinedev/mui"))return"mui";if(e.includes("@refinedev/chakra-ui"))return"chakra-ui";if(e.includes("@refinedev/mantine"))return"mantine"};import R from"handlebars";import{readFileSync as Ft,readdirSync as Vt,createFileSync as Bt,writeFileSync as Lt,unlinkSync as Mt}from"fs-extra";var Wt=(e,t)=>{let r=Ft(e);return R.registerHelper("ifIn",function(o,s,m){return o.includes(s)?m.fn(R):m.inverse(R)}),R.registerHelper("formatInferencerComponent",function(o){if(!!o)switch(o){case"chakra-ui":return"ChakraUI";default:return o.charAt(0).toUpperCase()+o.slice(1)}}),R.registerHelper("capitalize",function(o){if(!!o)return o.charAt(0).toUpperCase()+o.slice(1)}),R.compile(r.toString())(t)},Ne=(e,t)=>{Vt(e).forEach(n=>{let o=`${e}/${n}`,s=`${e}/${n.replace(".hbs","")}`;Bt(s),Lt(s,Wt(o,t)),Mt(o)})};var Oe=e=>e.charAt(0).toUpperCase()+e.slice(1);var oe=e=>{switch(e){case"nextjs":return{path:"src/components",alias:"../src/components"};case"remix":return{path:"app/components",alias:"~/components"}}return{path:"src/pages",alias:"pages"}},_e=e=>{switch(e){case"remix":return"./app";case"nextjs":case"react-scripts":case"vite":case"craco":default:return"./src"}};var ne=["list","create","edit","show"],Zt=e=>{let t=C(),{path:r}=oe(t);return e.command("create-resource").allowExcessArguments(!0).description("Create a new resource files").option("-a, --actions [actions]","Only generate the specified actions. (ex: list,create,edit,show)","list,create,edit,show").option("-p, --path [path]","Path to generate the resource files",r).action(Qt)},Qt=async(e,t)=>{let{args:r}=t,n=e.actions;if(!r.length){let{name:o,selectedActions:s}=await Gt.prompt([{type:"input",name:"name",message:"Resource Name",validate:m=>m?!0:"Resource Name is required"},{type:"checkbox",name:"selectedActions",message:"Select Actions",choices:ne,default:e.actions.split(",")}]);r=[o],n=s.join(",")}r.forEach(o=>{let s=n?n.split(","):void 0,{path:m,alias:f}=oe(C()),h=Yt(o).toLowerCase(),c=je(process.cwd(),m,h);if(De(c)){console.error(`Resource (${je(m,h)}) already exist! \u274C`);return}let l=Oe(o),I=be(),D=`${a}/../templates/resource`,v=er();Ht(D,v);let i={resourceName:o,resource:l,actions:s||ne,uiFramework:I};Ne(v,i),s&&ne.forEach(S=>{s.includes(S)||Jt(`${v}/${S}.tsx`)}),Xt(e.path,{recursive:!0});let d=`${e.path}/${h}`,u={};De(d)&&(u={overwrite:!0}),qt(v,d,u),se.cleanupSync();let y=B.resolve(".bin/jscodeshift"),{stderr:x,stdout:w}=Kt.sync(y,["./","--extensions=ts,tsx,js,jsx","--parser=tsx",`--transform=${a}/../src/transformers/resource.ts`,"--ignore-pattern=**/.cache/**","--ignore-pattern=**/node_modules/**","--ignore-pattern=**/build/**","--ignore-pattern=**/.next/**",`--__actions=${i.actions}`,`--__pathAlias=${f}`,`--__resourceFolderName=${h}`,`--__resource=${l}`,`--__resourceName=${o}`]);x&&console.log(x),console.log(`Resource (${d}) generated successfully! \u{1F389}`)})},er=()=>(se.track(),se.mkdirSync("resource")),Ae=Zt;import tr from"envinfo";import rr from"ora";var or=e=>e.command("whoami").description("View the details of the development environment").action(nr),nr=async()=>{let e=rr("Loading environment details...").start(),t=await tr.run({System:["OS","CPU"],Binaries:["Node","Yarn","npm"],Browsers:["Chrome","Firefox","Safari"]},{showNotFound:!0,markdown:!0}),n=(await A()||[]).map(o=>` - ${o.name}: ${o.version}`).join(`
`);e.stop(),console.log(t),console.log("## Refine Packages:"),console.log(n)},Re=or;import{Option as cr}from"commander";import q from"inquirer";import Ue from"semver-diff";import ie from"chalk";var $e=e=>{let t=e.filter((n,o)=>e.indexOf(n)!==o),r=new Set(t);return Array.from(r)};var ze=async e=>{let t=ir(e);if(!t){console.log("All `refine` packages are up to date. \u{1F389}");return}let r=ar(t),n=await q.prompt([{type:"checkbox",name:"packages",message:"Choose packages to update",pageSize:r.pageSize,choices:r.choices,validate:sr}]);return n.packages.length>0?n.packages:null},sr=e=>{let r=e.map(o=>Te(o)).map(o=>o.name),n=$e(r);return n.length>0?`You can't update the same package more than once. Please choice one.
 Duplicates: ${n.join(", ")}`:!0},ir=e=>{if(e.length===0)return null;let t={patch:[],minor:[],major:[]};return e.forEach(r=>{let n=r.current,o=Ue(n,r.wanted),s=Ue(n,r.latest);if(o===s&&s){t[s].push({name:r.name,from:n,to:r.latest});return}o&&t[o].push({name:r.name,from:n,to:r.wanted}),s&&t[s].push({name:r.name,from:n,to:r.latest})}),t},ar=e=>{let t=0,r=0;[e.patch,e.minor,e.major].forEach(c=>{c.forEach(l=>{l.name.length>t&&(t=l.name.length),l.from.length>r&&(r=l.from.length)})}),t+=2;let n=[],o="Package".padEnd(t),s="From".padEnd(r),f=`
   ${o} ${s}${"To".padStart(r)}`;n.push(new q.Separator(f)),e.patch.length>0&&(n.push(new q.Separator(ie.reset.bold.blue(`
Patch Updates`))),e.patch.forEach(c=>{n.push({name:`${c.name.padEnd(t)} ${c.from.padStart(r)} -> ${c.to}`,value:`${c.name}@${c.to}`})})),e.minor.length>0&&(n.push(new q.Separator(ie.reset.bold.blue(`
Minor Updates`))),e.minor.forEach(c=>{n.push({name:`${c.name.padEnd(t)} ${c.from.padStart(r)} -> ${c.to}`,value:`${c.name}@${c.to}`})})),e.major.length>0&&(n.push(new q.Separator(ie.reset.bold.blue(`
Major Updates`))),e.major.forEach(c=>{n.push({name:`${c.name.padEnd(t)} ${c.from.padStart(r)} -> ${c.to}`,value:`${c.name}@${c.to}`})}));let h=n.length+6;return{choices:n,pageSize:h}};var pr=e=>e.command("update").description("Interactively select and update all `refine` packages to selected version. To skip the interactive mode, use the `--all` option.").addOption(new cr("-t, --tag [tag]","Select version to update to.").choices(["next","latest"]).default("wanted","Version ranges in the `package.json` will be installed")).option("-a, --all","Update all `refine` packages to the selected `tag`. If `tag` is not provided, version ranges in the `package.json` will be installed. This option skips the interactive mode.",!1).option("-d, --dry-run","Get outdated packages installation command without automatic updating. If `tag` is not provided, version ranges in the `package.json` will be used.",!1).action(mr),mr=async e=>{let{tag:t,dryRun:r,all:n}=e,o=await j(H,"Checking for updates...");if(!(o!=null&&o.length)){console.log("All `refine` packages are up to date \u{1F389}");return}let s=n?lr(t,o):await ze(o);if(!!s){if(r){dr(s);return}ur(s)}},lr=(e,t)=>e==="wanted"&&t.every(o=>o.current===o.wanted)?(console.log("All `refine` packages are up to date with the wanted version \u{1F389}"),null):t.map(n=>{let o=e==="wanted"?n.wanted:e;return`${n.name}@${o}`}),dr=async e=>{let t=await _(),r=W[t.name].install;console.log(`${t.name} ${r.join(" ")} ${e.join(" ")}`)},ur=e=>{console.log("Updating `refine` packages..."),console.log(e),ye(e)},Fe=pr;import Dr from"react";import{render as jr}from"ink";import Qe from"path";import U from"chalk";import Q from"inquirer";import Ar from"inquirer-autocomplete-prompt";import{ensureFile as Rr,pathExists as et,readFile as $r,writeFile as Ur}from"fs-extra";import Je from"path";import Tr from"path";var ae={};ft(ae,{PackageManagerTypes:()=>ve,ProjectTypes:()=>J,UIFrameworks:()=>re,appendAfterImports:()=>Me,getFileContent:()=>Z,getImports:()=>$,getNameChangeInImport:()=>Be});var fr=/import(?:(?:(?:[ \n\t]+([^ *\n\t\{\},]+)[ \n\t]*(?:,|[ \n\t]+))?([ \n\t]*\{(?:[ \n\t]*[^ \n\t"'\{\}]+[ \n\t]*,?)+\})?[ \n\t]*)|[ \n\t]*\*[ \n\t]*as[ \n\t]+([^ \n\t\{\}]+)[ \n\t]+)from[ \n\t]*(?:['"])([^'"\n]+)(?:['"])(?:;?)/g,gr=/((?:\w|\s|_)*)( as )((?:\w|\s|_)*)( |,)?/g,$=e=>{let t=e.matchAll(fr),r=[];for(let n of t){let[o,s,m,f,h]=n;r.push({statement:o,importPath:h,...s&&{defaultImport:s},...m&&{namedImports:m},...f&&{namespaceImport:f}})}return r==null?void 0:r.filter(Boolean)},Be=e=>{let t=e.matchAll(gr),r=[];for(let n of t){let[o,s,m,f,h]=n;r.push({statement:o,fromName:s.trim(),toName:f.trim(),afterCharacter:h})}return r},hr=(e,t)=>{var s;let r=e.substring(0,e.indexOf(t.statement)),n=$(r).pop();return n?r.substring(r.indexOf(n==null?void 0:n.statement)+((s=n==null?void 0:n.statement)==null?void 0:s.length)):r},xr=(e,t)=>!!(t?hr(e,t):"").trim(),Ve=["react","@refinedev/core","@refinedev/"],Le=e=>{var v;let t=e,r=$(e),n=r.filter(i=>!i.statement.includes("import type ")),o=r.filter(i=>i.statement.includes("import type")),s=[],m=[];n.forEach(i=>{xr(e,i)?s.push(i):m.push(i)});let f=t.indexOf((v=m==null?void 0:m[0])==null?void 0:v.statement);m.forEach(i=>{t=t.replace(i.statement,"")}),o.forEach(i=>{t=t.replace(i.statement,"")});let h=m.reduce((i,d)=>{let{importPath:u}=d;return i[u]?i[u].push(d):i[u]=[d],i},{}),I=[...Object.entries(h).map(([i,d])=>{let u=d.find(S=>S.defaultImport),y=d.find(S=>S.namespaceImport),x=d.filter(S=>S.namedImports).map(S=>{var ee;return((ee=S.namedImports)!=null?ee:"").replace(/{|}/g,"").trim().split(",").map(Y=>Y.trim()).filter(Boolean).join(", ")}).join(", "),w="";return y&&(w+=y.statement+`
`),(u||x)&&(u&&x?w+=`import ${u.defaultImport}, { ${x} } from "${d[0].importPath}";
`:u?w+=`import ${u.defaultImport} from "${d[0].importPath}";
`:w+=`import { ${x} } from "${d[0].importPath}";
`),[i,w]})].sort(([i],[d])=>{let u=Ve.findIndex(x=>i.includes(x)),y=Ve.findIndex(x=>d.includes(x));return u===y?i.localeCompare(d):u===-1?1:y===-1?-1:u-y}).map(([,i])=>i).join(""),D=o.map(i=>i.statement).join(`
`);return t=t.substring(0,f)+I+D+t.substring(f),t};var Me=(e,t)=>{let r=$(e),n=r[r.length-1],o=n?e.indexOf(n.statement):e.length-1;return e.slice(0,o+(n==null?void 0:n.statement.length))+`
`+t+`
`+e.slice(o+(n==null?void 0:n.statement.length))};import{readFileSync as wr}from"fs-extra";import{join as yr}from"path";function Z(e){if(!!(this!=null&&this.absolutePackageDir))try{return wr(yr(this.absolutePackageDir,e)).toString()}catch{return}}var We=B("module"),Cr=We.prototype.require,He=(e,t)=>{We.prototype.require=function(...r){return r[0]==="@refinedev/cli"?{...ae,getFileContent:n=>Z.call({absolutePackageDir:t?e:Tr.join(process.cwd(),e)},n)}:Cr.apply(this,r)}};var qe=async(e,t)=>{try{return He(e,t),B(Je.join(t?e:Je.join(process.cwd(),e),"refine.config.js"))}catch{return}};import{format as Er,resolveConfig as Pr}from"prettier";var Xe=async e=>{try{let t=await Pr(process.cwd());return Er(e,{...t!=null?t:{},parser:"typescript"})}catch{return e}};import g from"react";import br from"ink-markdown";import Nr from"dedent";import{Box as Or,Text as T}from"ink";var P={SUCCESS:"SUCCESS",UNKNOWN_ERROR:"UNKNOWN_ERROR",SOURCE_PATH_NOT_FOUND:"SOURCE_PATH_NOT_FOUND",TARGET_PATH_NOT_FOUND:"TARGET_PATH_NOT_FOUND",SOURCE_PATH_NOT_A_FILE:"SOURCE_PATH_NOT_A_FILE",TARGET_ALREADY_EXISTS:"TARGET_ALREADY_EXISTS"};import Ir from"chalk";import Sr from"cardinal";import kr from"boxen";var vr=e=>{var o;let t=/^(?:\/\/\s?title:\s?)(.*?)\n/g,[r,n]=(o=t.exec(e))!=null?o:[];if(n){let s=n.trim(),m=e.replace(r,"");return{title:s,code:m}}return{code:e}},Ye=e=>{let{title:t,code:r}=vr(e),n="";try{n=Sr.highlight(r,{jsx:!0})}catch{n=r}return kr(n,{padding:1,margin:0,borderStyle:"round",borderColor:"gray",titleAlignment:"left",title:t?Ir.bold(t):void 0})};var _r=({label:e,files:t,message:r="**`Warning:`** You should use the component where you want to use it."})=>{let n=t.filter(([,c])=>Object.values(P).filter(l=>l!==P.SUCCESS).includes(c)),o="success";switch(n.length){case 0:o="success";break;case t.length:o="error";break;default:o="warning";break}let s=()=>{switch(o){case"success":return g.createElement(T,{color:"blueBright"},"Successfully swizzled ",g.createElement(T,{bold:!0},e));case"warning":return g.createElement(T,{color:"yellowBright"},"Swizzle completed with errors for"," ",g.createElement(T,{bold:!0},e));case"error":return g.createElement(T,{color:"redBright"},"Swizzle failed for ",g.createElement(T,{bold:!0},e))}return null},m=c=>{let l=c==null?void 0:c.replace(process.cwd(),"");return l!=null&&l.startsWith("/")?l.slice(1):l!=null&&l.startsWith("./")?l.slice(2):l},f=()=>g.createElement(g.Fragment,null,g.createElement(T,{dimColor:!0},"File",t.length>1?"s":""," created:"),t.map(([c,l],I)=>l===P.SUCCESS?g.createElement(T,{key:I,dimColor:!0,color:"cyanBright"},` - ${m(c)}`):l===P.TARGET_ALREADY_EXISTS?g.createElement(T,{key:I,dimColor:!0,color:"cyanBright"}," - ",g.createElement(T,{color:"yellowBright",bold:!0},"[FILE_ALREADY_EXISTS]"," "),`${m(c)}`):l===P.SOURCE_PATH_NOT_A_FILE?g.createElement(T,{key:I,dimColor:!0,color:"cyanBright"}," - ",g.createElement(T,{color:"yellowBright",bold:!0},"[SOURCE NOT FOUND]"," "),`${m(c)}`):g.createElement(T,{key:I,dimColor:!0,color:"cyanBright"}," - ",g.createElement(T,{color:"yellowBright",bold:!0},"[",l,"]")))),h=()=>r&&o!=="error"?g.createElement(g.Fragment,null,g.createElement(br,{code:Ye},Nr(`
`+r)),g.createElement(T,null,"\xA0")):null;return g.createElement(Or,{width:"100%",flexDirection:"column",alignItems:"flex-start",justifyContent:"flex-start"},g.createElement(T,null,"\xA0"),s(),f(),g.createElement(T,null,"\xA0"),h())},Ke=_r;var Ge=e=>{let t=/(\/\/|\/\*)(\s?)swizzle-remove-start([\s\S]*?)(\/\/|\/\*)(\s?)swizzle-remove-end(\s*)(\*\/)?/g;return e.replace(t,"")};import zr from"boxen";var Ze=()=>{let e;try{e=C()}catch{e=void 0}return _e(e)};var Fr=e=>e.command("swizzle").description(`Export a component or a function from ${U.bold("refine")} packages to customize it in your project`).action(Vr),tt=e=>(t,r="")=>e.filter(o=>{var s;return o.label.toLowerCase().includes(r.toLowerCase())||((s=o.group)==null?void 0:s.toLowerCase().includes(r.toLowerCase()))}).flatMap((o,s,m)=>{var c;return[...(o==null?void 0:o.group)&&((c=m[s-1])==null?void 0:c.group)!==o.group&&o.group?[new Q.Separator(`${U.bold(o.group)}`)]:[],{name:` ${o.label}`,value:o!=null&&o.value?o.value:o}]}),Vr=async e=>{var l,I,D,v;Q.registerPrompt("autocomplete",Ar);let t=await xe(),r=[];if(await Promise.all(t.map(async i=>{await we(i.path)&&r.push(i)})),r.length===0){console.log("No refine packages found with swizzle configuration.");return}console.log(`${zr(`Found ${U.blueBright(r.length)} installed ${U.blueBright.bold("refine")} packages with swizzle configuration.`,{padding:1,textAlignment:"center",dimBorder:!0,borderColor:"blueBright",borderStyle:"round"})}
`);let n=await Promise.all(r.map(async i=>{var u;let d=(u=await qe(i.path))!=null?u:{swizzle:{items:[]}};return{...i,config:d}})),{selectedPackage:o}=await Q.prompt([{type:"autocomplete",pageSize:10,name:"selectedPackage",message:"Which package do you want to swizzle?",emptyText:"No packages found.",source:tt(n.sort((i,d)=>{var u,y,x,w;return((y=(u=i.config)==null?void 0:u.group)!=null?y:"").localeCompare((w=(x=d.config)==null?void 0:x.group)!=null?w:"")}).map(i=>{var d,u,y;return{label:(u=(d=i.config)==null?void 0:d.name)!=null?u:i.name,value:i,group:(y=i.config)==null?void 0:y.group}}))}]),{swizzle:{items:s,transform:m}}=o.config,f;if(s.length===0){console.log(`No swizzle items found for ${U.bold((I=(l=o.config)==null?void 0:l.name)!=null?I:o.name)}`);return}else s.length===1?f=s[0]:s.length>1&&(f=(await Q.prompt([{type:"list",pageSize:10,name:"selectedComponent",message:"Which component do you want to swizzle?",emptyText:"No components found.",choices:tt(s.sort((d,u)=>d.group.localeCompare(u.group)))({},"")}])).selectedComponent);if(!f){console.log(`No swizzle items selected for ${U.bold((v=(D=o.config)==null?void 0:D.name)!=null?v:o.name)}`);return}let h=Ze(),c=await Promise.all(f.files.map(async i=>{var d,u,y;try{let x=i.src?Qe.join(o.path,i.src):void 0,w=i.dest?Qe.join(process.cwd(),h,i.dest):void 0;if(!x)return console.log("No src path found for file",i),["",P.SOURCE_PATH_NOT_FOUND];if(!w)return console.log("No destination path found for file",i),["",P.TARGET_PATH_NOT_FOUND];if(!await et(x))return[w,P.SOURCE_PATH_NOT_A_FILE];let de=await $r(x,"utf-8");if(await et(w))return[w,P.TARGET_ALREADY_EXISTS];await Rr(w);let Y=Ge(de),ue=(u=(d=i.transform)==null?void 0:d.call(i,Y))!=null?u:Y,mt=(y=m==null?void 0:m(ue,x,w))!=null?y:ue,lt=Le(mt),dt=await Xe(lt);return await Ur(w,dt),[w,P.SUCCESS]}catch{return["",P.UNKNOWN_ERROR]}}));c.length>0&&jr(Dr.createElement(Ke,{label:f.label,files:c,message:f.message}))},rt=Fr;var X=`${process.cwd()}/node_modules/.bin`,k={["react-scripts"]:{dev:["start"],start:["start"],build:["build"],getBin:()=>`${X}/react-scripts`},["vite"]:{dev:["start"],start:["preview"],build:["build"],getBin:()=>`${X}/vite`},["nextjs"]:{dev:["dev"],start:["start"],build:["build"],getBin:()=>`${X}/next`},["remix"]:{dev:["dev"],start:["build"],build:["build"],getBin:e=>`${X}/${e==="start"?"remix-serve":"remix"}`},["craco"]:{dev:["start"],start:["start"],build:["build"],getBin:()=>`${X}/craco`}};import Br from"execa";var N=async(e,t)=>{var n,o;let r=Br(e,t,{stdio:"pipe",windowsHide:!1,env:{FORCE_COLOR:"true",...process.env}});return(n=r.stdout)==null||n.pipe(process.stdout),(o=r.stderr)==null||o.pipe(process.stderr),await r};import Wr from"conf";import Hr from"chalk";import*as ot from"dotenv";ot.config();var Lr={development:/dev/i,production:/prod/i,test:/test|tst/i,"continuous-integration":/ci/i,"user-acceptance-testing":/uat/i,"system-integration-testing":/sit/i},Mr=()=>{let e=process.env.NODE_ENV;if(!e)return"development";let t="custom";for(let[r,n]of Object.entries(Lr))if(n.test(e)){t=r;break}return t},z={NODE_ENV:Mr(),REFINE_NO_TELEMETRY:process.env.REFINE_NO_TELEMETRY||"false",UPDATE_NOTIFIER_IS_DISABLED:process.env.UPDATE_NOTIFIER_IS_DISABLED||"false",UPDATE_NOTIFIER_CACHE_TTL:process.env.UPDATE_NOTIFIER_CACHE_TTL||1e3*60*60*24};var nt=e=>typeof btoa<"u"?btoa(e):Buffer.from(e).toString("base64");var Jr="refine-update-notifier",O=new Wr({projectName:Jr,defaults:{key:"",lastUpdated:0,packages:[]}}),F=async()=>{if(Gr())return;let e=await Xr();if(e!==null){if(e){st();return}qr(),st()}},qr=async()=>{let e=O.get("packages");!(e!=null&&e.length)||(await G(e),console.log(`
`))},Xr=async()=>{let e=await Kr(),t=Yr();return e===null?null:!!(t||!e)},st=async()=>{try{let e=await H();return O.set("packages",e),O.set("lastUpdated",Date.now()),O.set("key",await it()),e}catch{return O.set("packages",[]),O.set("lastUpdated",Date.now()),O.set("key",""),null}},Yr=()=>{let e=O.get("lastUpdated");if(!e)return!0;let r=Date.now()-e,n=Number(z.UPDATE_NOTIFIER_CACHE_TTL);return r>=n},Kr=async()=>{let e=O.get("key"),t=await it();return t===null?null:e===t},it=async()=>{let e=await A();if(!e)return console.error(Hr.red("Something went wrong when trying to get installed `refine` packages.")),null;let t=e.map(n=>`${n.name}@${n.version}`);return nt(t.toString())},Gr=()=>z.UPDATE_NOTIFIER_IS_DISABLED.toLocaleLowerCase()==="true";var V=e=>{let t=C(),r=k[t][e];return t==="remix"&&e==="start"&&(t="remix-serve"),`It runs: \`${t} ${r.join(" ")}\`. Also accepts all the arguments \`${t}\` accepts.`};var Zr=e=>e.command("start").description(V("start")).allowUnknownOption(!0).argument("[args...]").action(Qr),Qr=async e=>{let t=C(),r=k[t].getBin("start"),o=[...k[t].start,...e];await F(),N(r,o)},ce=Zr;var eo=e=>e.command("dev").description(V("dev")).allowUnknownOption(!0).argument("[args...]").action(to),to=async e=>{let t=C(),r=k[t].getBin("dev"),o=[...k[t].dev,...e];await F(),N(r,o)},pe=eo;var ro=e=>e.command("build").description(V("build")).allowUnknownOption(!0).argument("[args...]").action(oo),oo=async e=>{let t=C(),r=k[t].getBin("build"),o=[...k[t].build,...e];await F();try{await N(r,o)}catch{process.exit(1)}},me=ro;import at from"chalk";var no=e=>e.command("run").description("Runs a defined package script. If no `command` is provided, it will list the available scripts").allowUnknownOption(!0).argument("[command] [args...]").action(so),so=async e=>{let[t,...r]=e,n=K();if(!t){console.log(`Available via ${at.blue("`refine run`")}:
`);for(let[m,f]of Object.entries(n))console.log(`  ${m}`),console.log(`    ${at.dim(f)}`),console.log();return}if(!Object.keys(n).includes(t)){let m=`${process.cwd()}/node_modules/.bin/${t}`;N(m,r);return}let s=await _();N(s.name,["run",t,...r])},le=no;import io from"envinfo";import ao from"os";var co=()=>{let e=ao.type();return{Darwin:"macOS",Linux:"Linux",Windows_NT:"Windows"}[e]},ct=async()=>{let[e,t]=await io.helpers.getOSInfo();return{name:co(),version:t}};import po from"node-fetch";var mo=async()=>{let e=await ct();return{nodeEnv:z.NODE_ENV,nodeVersion:process.version,os:e.name,osVersion:e.version,command:process.argv[2],packages:await A()||[],projectFramework:C()}},pt=async()=>{if(z.REFINE_NO_TELEMETRY!=="true")try{let e=await mo();await po("https://telemetry.refine.dev/cli",{method:"POST",body:JSON.stringify(e),headers:{"Content-Type":"application/json"}})}catch{}};var fo=()=>{let e;try{e=L()}catch{console.error("The `package.json` file required to run could not be found."),process.exit(1)}let t=new lo;t.version(e.version,"-v, --version","Output the current version.").description(uo.textSync("refine",{font:"Isometric1",horizontalLayout:"full",verticalLayout:"full",whitespaceBreak:!0})).usage("<command> [options]").helpOption("-h, --help","Output usage information."),rt(t),Ae(t),Fe(t),pe(t),me(t),ce(t),le(t),ke(t),Re(t),t.hook("postAction",r=>{let n=r.args[0];["run"].includes(n)||pt()}),t.parse(process.argv),process.argv.slice(2).length||t.outputHelp()};fo();
//# sourceMappingURL=cli.js.map